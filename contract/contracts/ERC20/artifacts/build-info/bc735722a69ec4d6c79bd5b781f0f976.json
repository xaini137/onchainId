{
	"id": "bc735722a69ec4d6c79bd5b781f0f976",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20/ERC20_flatten.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\n// File @openzeppelin/contracts/utils/Context.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/access/Ownable.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * The initial owner is set to the address provided by the deployer. This can\r\n * later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    /**\r\n     * @dev The caller account is not authorized to perform an operation.\r\n     */\r\n    error OwnableUnauthorizedAccount(address account);\r\n\r\n    /**\r\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\r\n     */\r\n    error OwnableInvalidOwner(address owner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\r\n     */\r\n    constructor(address initialOwner) {\r\n        if (initialOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != _msgSender()) {\r\n            revert OwnableUnauthorizedAccount(_msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        if (newOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/interfaces/draft-IERC6093.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC20/IERC20.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC20/ERC20.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n */\r\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\r\n    mapping(address account => uint256) private _balances;\r\n\r\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `value`.\r\n     */\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `value`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\r\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\r\n     * this function.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _update(address from, address to, uint256 value) internal virtual {\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            _totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                _totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\r\n     * Relies on the `_update` mechanism\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _mint(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\r\n     * Relies on the `_update` mechanism.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        _approve(owner, spender, value, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\r\n     *\r\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\r\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\r\n     * `Approval` event during `transferFrom` operations.\r\n     *\r\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\r\n     * true using the following override:\r\n     * ```\r\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\r\n     *     super._approve(owner, spender, value, true);\r\n     * }\r\n     * ```\r\n     *\r\n     * Requirements are the same as {_approve}.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\r\n        if (owner == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        _allowances[owner][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(owner, spender, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\r\n     *\r\n     * Does not update the allowance value in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Does not emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\r\n            }\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n *\r\n * ==== Security Considerations\r\n *\r\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\r\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\r\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\r\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\r\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\r\n * generally recommended is:\r\n *\r\n * ```solidity\r\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\r\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\r\n *     doThing(..., value);\r\n * }\r\n *\r\n * function doThing(..., uint256 value) public {\r\n *     token.safeTransferFrom(msg.sender, address(this), value);\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\r\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\r\n * {SafeERC20-safeTransferFrom}).\r\n *\r\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\r\n * contracts should have entry points that don't rely on permit.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     *\r\n     * CAUTION: See Security Considerations above.\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/cryptography/ECDSA.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\r\n *\r\n * These functions can be used to verify that a message was signed by the holder\r\n * of the private keys of a given address.\r\n */\r\nlibrary ECDSA {\r\n    enum RecoverError {\r\n        NoError,\r\n        InvalidSignature,\r\n        InvalidSignatureLength,\r\n        InvalidSignatureS\r\n    }\r\n\r\n    /**\r\n     * @dev The signature derives the `address(0)`.\r\n     */\r\n    error ECDSAInvalidSignature();\r\n\r\n    /**\r\n     * @dev The signature has an invalid length.\r\n     */\r\n    error ECDSAInvalidSignatureLength(uint256 length);\r\n\r\n    /**\r\n     * @dev The signature has an S value that is in the upper half order.\r\n     */\r\n    error ECDSAInvalidSignatureS(bytes32 s);\r\n\r\n    /**\r\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\r\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\r\n     * and a bytes32 providing additional information about the error.\r\n     *\r\n     * If no error is returned, then the address can be used for verification purposes.\r\n     *\r\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\r\n     * this function rejects them by requiring the `s` value to be in the lower\r\n     * half order, and the `v` value to be either 27 or 28.\r\n     *\r\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\r\n     * verification to be secure: it is possible to craft signatures that\r\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\r\n     * this is by receiving a hash of the original message (which may otherwise\r\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\r\n     *\r\n     * Documentation for signature generation:\r\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\r\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\r\n     */\r\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\r\n        if (signature.length == 65) {\r\n            bytes32 r;\r\n            bytes32 s;\r\n            uint8 v;\r\n            // ecrecover takes the signature parameters, and the only way to get them\r\n            // currently is to use assembly.\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                r := mload(add(signature, 0x20))\r\n                s := mload(add(signature, 0x40))\r\n                v := byte(0, mload(add(signature, 0x60)))\r\n            }\r\n            return tryRecover(hash, v, r, s);\r\n        } else {\r\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address that signed a hashed message (`hash`) with\r\n     * `signature`. This address can then be used for verification purposes.\r\n     *\r\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\r\n     * this function rejects them by requiring the `s` value to be in the lower\r\n     * half order, and the `v` value to be either 27 or 28.\r\n     *\r\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\r\n     * verification to be secure: it is possible to craft signatures that\r\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\r\n     * this is by receiving a hash of the original message (which may otherwise\r\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\r\n     */\r\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\r\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\r\n        _throwError(error, errorArg);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\r\n     *\r\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\r\n     */\r\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\r\n        unchecked {\r\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\r\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\r\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\r\n            return tryRecover(hash, v, r, s);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\r\n     */\r\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\r\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\r\n        _throwError(error, errorArg);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\r\n     * `r` and `s` signature fields separately.\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal pure returns (address, RecoverError, bytes32) {\r\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\r\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\r\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\r\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\r\n        //\r\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\r\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\r\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\r\n        // these malleable signatures as well.\r\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\r\n            return (address(0), RecoverError.InvalidSignatureS, s);\r\n        }\r\n\r\n        // If the signature is valid (and not malleable), return the signer address\r\n        address signer = ecrecover(hash, v, r, s);\r\n        if (signer == address(0)) {\r\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\r\n        }\r\n\r\n        return (signer, RecoverError.NoError, bytes32(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\r\n     * `r` and `s` signature fields separately.\r\n     */\r\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\r\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\r\n        _throwError(error, errorArg);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\r\n     */\r\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\r\n        if (error == RecoverError.NoError) {\r\n            return; // no error: do nothing\r\n        } else if (error == RecoverError.InvalidSignature) {\r\n            revert ECDSAInvalidSignature();\r\n        } else if (error == RecoverError.InvalidSignatureLength) {\r\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\r\n        } else if (error == RecoverError.InvalidSignatureS) {\r\n            revert ECDSAInvalidSignatureS(errorArg);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/interfaces/IERC5267.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\ninterface IERC5267 {\r\n    /**\r\n     * @dev MAY be emitted to signal that the domain could have changed.\r\n     */\r\n    event EIP712DomainChanged();\r\n\r\n    /**\r\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\r\n     * signature.\r\n     */\r\n    function eip712Domain()\r\n        external\r\n        view\r\n        returns (\r\n            bytes1 fields,\r\n            string memory name,\r\n            string memory version,\r\n            uint256 chainId,\r\n            address verifyingContract,\r\n            bytes32 salt,\r\n            uint256[] memory extensions\r\n        );\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/math/Math.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Muldiv operation overflow.\r\n     */\r\n    error MathOverflowedMulDiv();\r\n\r\n    enum Rounding {\r\n        Floor, // Toward negative infinity\r\n        Ceil, // Toward positive infinity\r\n        Trunc, // Toward zero\r\n        Expand // Away from zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds towards infinity instead\r\n     * of rounding towards zero.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (b == 0) {\r\n            // Guarantee the same behavior as in a regular Solidity division.\r\n            return a / b;\r\n        }\r\n\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\r\n     * denominator == 0.\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\r\n     * Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            if (denominator <= prod1) {\r\n                revert MathOverflowedMulDiv();\r\n            }\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\r\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            uint256 twos = denominator & (0 - denominator);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\r\n            // works in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\r\n     * towards zero.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\r\n     */\r\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\r\n        return uint8(rounding) % 2 == 1;\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/math/SignedMath.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/Strings.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\r\n    uint8 private constant ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev The `value` string doesn't fit in the specified `length`.\r\n     */\r\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toStringSigned(int256 value) internal pure returns (string memory) {\r\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        uint256 localValue = value;\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\r\n            localValue >>= 4;\r\n        }\r\n        if (localValue != 0) {\r\n            revert StringsInsufficientHexLength(value, length);\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\r\n     * representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\r\n *\r\n * The library provides methods for generating a hash of a message that conforms to the\r\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\r\n * specifications.\r\n */\r\nlibrary MessageHashUtils {\r\n    /**\r\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\r\n     * `0x45` (`personal_sign` messages).\r\n     *\r\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\r\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\r\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\r\n     *\r\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\r\n     * keccak256, although any bytes32 value can be safely used because the final digest will\r\n     * be re-hashed.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\r\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\r\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\r\n     * `0x45` (`personal_sign` messages).\r\n     *\r\n     * The digest is calculated by prefixing an arbitrary `message` with\r\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\r\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\r\n        return\r\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\r\n     * `0x00` (data with intended validator).\r\n     *\r\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\r\n     * `validator` address. Then hashing the result.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\r\n     *\r\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\r\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\r\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            let ptr := mload(0x40)\r\n            mstore(ptr, hex\"19_01\")\r\n            mstore(add(ptr, 0x02), domainSeparator)\r\n            mstore(add(ptr, 0x22), structHash)\r\n            digest := keccak256(ptr, 0x42)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/StorageSlot.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\r\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Library for reading and writing primitive types to specific storage slots.\r\n *\r\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\r\n * This library helps with reading and writing to such slots without the need for inline assembly.\r\n *\r\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\r\n *\r\n * Example usage to set ERC1967 implementation slot:\r\n * ```solidity\r\n * contract ERC1967 {\r\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n *\r\n *     function _getImplementation() internal view returns (address) {\r\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n *     }\r\n *\r\n *     function _setImplementation(address newImplementation) internal {\r\n *         require(newImplementation.code.length > 0);\r\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n *     }\r\n * }\r\n * ```\r\n */\r\nlibrary StorageSlot {\r\n    struct AddressSlot {\r\n        address value;\r\n    }\r\n\r\n    struct BooleanSlot {\r\n        bool value;\r\n    }\r\n\r\n    struct Bytes32Slot {\r\n        bytes32 value;\r\n    }\r\n\r\n    struct Uint256Slot {\r\n        uint256 value;\r\n    }\r\n\r\n    struct StringSlot {\r\n        string value;\r\n    }\r\n\r\n    struct BytesSlot {\r\n        bytes value;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\r\n     */\r\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\r\n     */\r\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\r\n     */\r\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\r\n     */\r\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\r\n     */\r\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\r\n     */\r\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/ShortStrings.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\r\n// | length  | 0x                                                              BB |\r\ntype ShortString is bytes32;\r\n\r\n/**\r\n * @dev This library provides functions to convert short memory strings\r\n * into a `ShortString` type that can be used as an immutable variable.\r\n *\r\n * Strings of arbitrary length can be optimized using this library if\r\n * they are short enough (up to 31 bytes) by packing them with their\r\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\r\n * fallback mechanism can be used for every other case.\r\n *\r\n * Usage example:\r\n *\r\n * ```solidity\r\n * contract Named {\r\n *     using ShortStrings for *;\r\n *\r\n *     ShortString private immutable _name;\r\n *     string private _nameFallback;\r\n *\r\n *     constructor(string memory contractName) {\r\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\r\n *     }\r\n *\r\n *     function name() external view returns (string memory) {\r\n *         return _name.toStringWithFallback(_nameFallback);\r\n *     }\r\n * }\r\n * ```\r\n */\r\nlibrary ShortStrings {\r\n    // Used as an identifier for strings longer than 31 bytes.\r\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\r\n\r\n    error StringTooLong(string str);\r\n    error InvalidShortString();\r\n\r\n    /**\r\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\r\n     *\r\n     * This will trigger a `StringTooLong` error is the input string is too long.\r\n     */\r\n    function toShortString(string memory str) internal pure returns (ShortString) {\r\n        bytes memory bstr = bytes(str);\r\n        if (bstr.length > 31) {\r\n            revert StringTooLong(str);\r\n        }\r\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\r\n    }\r\n\r\n    /**\r\n     * @dev Decode a `ShortString` back to a \"normal\" string.\r\n     */\r\n    function toString(ShortString sstr) internal pure returns (string memory) {\r\n        uint256 len = byteLength(sstr);\r\n        // using `new string(len)` would work locally but is not memory safe.\r\n        string memory str = new string(32);\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            mstore(str, len)\r\n            mstore(add(str, 0x20), sstr)\r\n        }\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the length of a `ShortString`.\r\n     */\r\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\r\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\r\n        if (result > 31) {\r\n            revert InvalidShortString();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\r\n     */\r\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\r\n        if (bytes(value).length < 32) {\r\n            return toShortString(value);\r\n        } else {\r\n            StorageSlot.getStringSlot(store).value = value;\r\n            return ShortString.wrap(FALLBACK_SENTINEL);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\r\n     */\r\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\r\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\r\n            return toString(value);\r\n        } else {\r\n            return store;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\r\n     * {setWithFallback}.\r\n     *\r\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\r\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\r\n     */\r\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\r\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\r\n            return byteLength(value);\r\n        } else {\r\n            return bytes(store).length;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/cryptography/EIP712.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n\r\n\r\n/**\r\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\r\n *\r\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\r\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\r\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\r\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\r\n *\r\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\r\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\r\n * ({_hashTypedDataV4}).\r\n *\r\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\r\n * the chain id to protect against replay attacks on an eventual fork of the chain.\r\n *\r\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\r\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\r\n *\r\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\r\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\r\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\r\n *\r\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\r\n */\r\nabstract contract EIP712 is IERC5267 {\r\n    using ShortStrings for *;\r\n\r\n    bytes32 private constant TYPE_HASH =\r\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\r\n\r\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\r\n    // invalidate the cached domain separator if the chain id changes.\r\n    bytes32 private immutable _cachedDomainSeparator;\r\n    uint256 private immutable _cachedChainId;\r\n    address private immutable _cachedThis;\r\n\r\n    bytes32 private immutable _hashedName;\r\n    bytes32 private immutable _hashedVersion;\r\n\r\n    ShortString private immutable _name;\r\n    ShortString private immutable _version;\r\n    string private _nameFallback;\r\n    string private _versionFallback;\r\n\r\n    /**\r\n     * @dev Initializes the domain separator and parameter caches.\r\n     *\r\n     * The meaning of `name` and `version` is specified in\r\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\r\n     *\r\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\r\n     * - `version`: the current major version of the signing domain.\r\n     *\r\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\r\n     * contract upgrade].\r\n     */\r\n    constructor(string memory name, string memory version) {\r\n        _name = name.toShortStringWithFallback(_nameFallback);\r\n        _version = version.toShortStringWithFallback(_versionFallback);\r\n        _hashedName = keccak256(bytes(name));\r\n        _hashedVersion = keccak256(bytes(version));\r\n\r\n        _cachedChainId = block.chainid;\r\n        _cachedDomainSeparator = _buildDomainSeparator();\r\n        _cachedThis = address(this);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the domain separator for the current chain.\r\n     */\r\n    function _domainSeparatorV4() internal view returns (bytes32) {\r\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\r\n            return _cachedDomainSeparator;\r\n        } else {\r\n            return _buildDomainSeparator();\r\n        }\r\n    }\r\n\r\n    function _buildDomainSeparator() private view returns (bytes32) {\r\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\r\n    }\r\n\r\n    /**\r\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\r\n     * function returns the hash of the fully encoded EIP712 message for this domain.\r\n     *\r\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\r\n     *\r\n     * ```solidity\r\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\r\n     *     keccak256(\"Mail(address to,string contents)\"),\r\n     *     mailTo,\r\n     *     keccak256(bytes(mailContents))\r\n     * )));\r\n     * address signer = ECDSA.recover(digest, signature);\r\n     * ```\r\n     */\r\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\r\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC-5267}.\r\n     */\r\n    function eip712Domain()\r\n        public\r\n        view\r\n        virtual\r\n        returns (\r\n            bytes1 fields,\r\n            string memory name,\r\n            string memory version,\r\n            uint256 chainId,\r\n            address verifyingContract,\r\n            bytes32 salt,\r\n            uint256[] memory extensions\r\n        )\r\n    {\r\n        return (\r\n            hex\"0f\", // 01111\r\n            _EIP712Name(),\r\n            _EIP712Version(),\r\n            block.chainid,\r\n            address(this),\r\n            bytes32(0),\r\n            new uint256[](0)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev The name parameter for the EIP712 domain.\r\n     *\r\n     * NOTE: By default this function reads _name which is an immutable value.\r\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function _EIP712Name() internal view returns (string memory) {\r\n        return _name.toStringWithFallback(_nameFallback);\r\n    }\r\n\r\n    /**\r\n     * @dev The version parameter for the EIP712 domain.\r\n     *\r\n     * NOTE: By default this function reads _version which is an immutable value.\r\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function _EIP712Version() internal view returns (string memory) {\r\n        return _version.toStringWithFallback(_versionFallback);\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/Nonces.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\r\n */\r\nabstract contract Nonces {\r\n    /**\r\n     * @dev The nonce used for an `account` is not the expected current nonce.\r\n     */\r\n    error InvalidAccountNonce(address account, uint256 currentNonce);\r\n\r\n    mapping(address account => uint256) private _nonces;\r\n\r\n    /**\r\n     * @dev Returns the next unused nonce for an address.\r\n     */\r\n    function nonces(address owner) public view virtual returns (uint256) {\r\n        return _nonces[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev Consumes a nonce.\r\n     *\r\n     * Returns the current value and increments nonce.\r\n     */\r\n    function _useNonce(address owner) internal virtual returns (uint256) {\r\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\r\n        // decremented or reset. This guarantees that the nonce never overflows.\r\n        unchecked {\r\n            // It is important to do x++ and not ++x here.\r\n            return _nonces[owner]++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\r\n     */\r\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\r\n        uint256 current = _useNonce(owner);\r\n        if (nonce != current) {\r\n            revert InvalidAccountNonce(owner, current);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol@v5.0.2\r\n\r\n// Original license: SPDX_License_Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n */\r\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\r\n    bytes32 private constant PERMIT_TYPEHASH =\r\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\r\n\r\n    /**\r\n     * @dev Permit deadline has expired.\r\n     */\r\n    error ERC2612ExpiredSignature(uint256 deadline);\r\n\r\n    /**\r\n     * @dev Mismatched signature.\r\n     */\r\n    error ERC2612InvalidSigner(address signer, address owner);\r\n\r\n    /**\r\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\r\n     *\r\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\r\n     */\r\n    constructor(string memory name) EIP712(name, \"1\") {}\r\n\r\n    /**\r\n     * @inheritdoc IERC20Permit\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) public virtual {\r\n        if (block.timestamp > deadline) {\r\n            revert ERC2612ExpiredSignature(deadline);\r\n        }\r\n\r\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\r\n\r\n        bytes32 hash = _hashTypedDataV4(structHash);\r\n\r\n        address signer = ECDSA.recover(hash, v, r, s);\r\n        if (signer != owner) {\r\n            revert ERC2612InvalidSigner(signer, owner);\r\n        }\r\n\r\n        _approve(owner, spender, value);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc IERC20Permit\r\n     */\r\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\r\n        return super.nonces(owner);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc IERC20Permit\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\r\n        return _domainSeparatorV4();\r\n    }\r\n}\r\n\r\n\r\n// File contracts/ERC20/ERC20.sol\r\n\r\npragma solidity ^0.8.20;\r\ncontract MyToken is ERC20, Ownable, ERC20Permit {\r\n    constructor( )\r\n        ERC20(\"MyToken\", \"MTK\")\r\n        Ownable(msg.sender)\r\n        ERC20Permit(\"MyToken\")\r\n    {_mint(msg.sender, 1000000 ether);}\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC20/ERC20_flatten.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20/ERC20_flatten.sol\":30620:38168  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20/ERC20_flatten.sol\":30620:38168  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220355f78f7c7fca577060e093e5c15a825b0daa402ed7d8c280e46543628bb95a064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220355f78f7c7fca577060e093e5c15a825b0daa402ed7d8c280e46543628bb95a064736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD PUSH0 PUSH25 0xF7C7FCA577060E093E5C15A825B0DAA402ED7D8C280E465436 0x28 0xBB SWAP6 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "30620:7548:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220355f78f7c7fca577060e093e5c15a825b0daa402ed7d8c280e46543628bb95a064736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD PUSH0 PUSH25 0xF7C7FCA577060E093E5C15A825B0DAA402ED7D8C280E465436 0x28 0xBB SWAP6 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "30620:7548:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30620,
									"end": 38168,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220355f78f7c7fca577060e093e5c15a825b0daa402ed7d8c280e46543628bb95a064736f6c63430008140033",
									".code": [
										{
											"begin": 30620,
											"end": 38168,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 30620,
											"end": 38168,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30620,
											"end": 38168,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30620,
											"end": 38168,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30620,
											"end": 38168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30620,
											"end": 38168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30620,
											"end": 38168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30620,
											"end": 38168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30620,
											"end": 38168,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20/ERC20_flatten.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3152,
								"contract": "contracts/ERC20/ERC20_flatten.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 3154,
								"contract": "contracts/ERC20/ERC20_flatten.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 424,
								"contract": "contracts/ERC20/ERC20_flatten.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 430,
								"contract": "contracts/ERC20/ERC20_flatten.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 432,
								"contract": "contracts/ERC20/ERC20_flatten.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 434,
								"contract": "contracts/ERC20/ERC20_flatten.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 436,
								"contract": "contracts/ERC20/ERC20_flatten.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"ERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 424,
								"contract": "contracts/ERC20/ERC20_flatten.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 430,
								"contract": "contracts/ERC20/ERC20_flatten.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 432,
								"contract": "contracts/ERC20/ERC20_flatten.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 434,
								"contract": "contracts/ERC20/ERC20_flatten.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 436,
								"contract": "contracts/ERC20/ERC20_flatten.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 3152,
								"contract": "contracts/ERC20/ERC20_flatten.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 3154,
								"contract": "contracts/ERC20/ERC20_flatten.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 3355,
								"contract": "contracts/ERC20/ERC20_flatten.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20/ERC20_flatten.sol\":39320:54640  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20/ERC20_flatten.sol\":39320:54640  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a07011a78e01626e56065add37faebdc0e4e0c9d8bfaf54ca0be5ea7458d4e8464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a07011a78e01626e56065add37faebdc0e4e0c9d8bfaf54ca0be5ea7458d4e8464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 PUSH17 0x11A78E01626E56065ADD37FAEBDC0E4E0C SWAP14 DUP12 STATICCALL CREATE2 0x4C LOG0 0xBE 0x5E 0xA7 GASLIMIT DUP14 0x4E DUP5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "39320:15320:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a07011a78e01626e56065add37faebdc0e4e0c9d8bfaf54ca0be5ea7458d4e8464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 PUSH17 0x11A78E01626E56065ADD37FAEBDC0E4E0C SWAP14 DUP12 STATICCALL CREATE2 0x4C LOG0 0xBE 0x5E 0xA7 GASLIMIT DUP14 0x4E DUP5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "39320:15320:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39320,
									"end": 54640,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a07011a78e01626e56065add37faebdc0e4e0c9d8bfaf54ca0be5ea7458d4e8464736f6c63430008140033",
									".code": [
										{
											"begin": 39320,
											"end": 54640,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 54640,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 54640,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 54640,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 39320,
											"end": 54640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39320,
											"end": 54640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 54640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39320,
											"end": 54640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 54640,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20/ERC20_flatten.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20/ERC20_flatten.sol\":59820:63126  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20/ERC20_flatten.sol\":59820:63126  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dfd1c8339cde04b27f1fd58ea4f083968c4c8dc43e086adc05fc08143e0c1b9f64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfd1c8339cde04b27f1fd58ea4f083968c4c8dc43e086adc05fc08143e0c1b9f64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xD1 0xC8 CALLER SWAP13 0xDE DIV 0xB2 PUSH32 0x1FD58EA4F083968C4C8DC43E086ADC05FC08143E0C1B9F64736F6C6343000814 STOP CALLER ",
							"sourceMap": "59820:3306:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfd1c8339cde04b27f1fd58ea4f083968c4c8dc43e086adc05fc08143e0c1b9f64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xD1 0xC8 CALLER SWAP13 0xDE DIV 0xB2 PUSH32 0x1FD58EA4F083968C4C8DC43E086ADC05FC08143E0C1B9F64736F6C6343000814 STOP CALLER ",
							"sourceMap": "59820:3306:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59820,
									"end": 63126,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dfd1c8339cde04b27f1fd58ea4f083968c4c8dc43e086adc05fc08143e0c1b9f64736f6c63430008140033",
									".code": [
										{
											"begin": 59820,
											"end": 63126,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 59820,
											"end": 63126,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 59820,
											"end": 63126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59820,
											"end": 63126,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59820,
											"end": 63126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59820,
											"end": 63126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59820,
											"end": 63126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59820,
											"end": 63126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59820,
											"end": 63126,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20/ERC20_flatten.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20/ERC20_flatten.sol\":82820:83130  contract MyToken is ERC20, Ownable, ERC20Permit {... */\n  mstore(0x40, 0x0160)\n    /* \"contracts/ERC20/ERC20_flatten.sol\":82875:83024  constructor( )... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":81511:81563  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79546f6b656e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":81550:81554  name */\n  dup1\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75059:75499  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":82940:82950  msg.sender */\n  caller\n    /* \"contracts/ERC20/ERC20_flatten.sol\":16661:16777  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79546f6b656e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":16736:16741  name_ */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":16728:16733  _name */\n  0x03\n    /* \"contracts/ERC20/ERC20_flatten.sol\":16728:16741  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":16762:16769  symbol_ */\n  dup1\n    /* \"contracts/ERC20/ERC20_flatten.sol\":16752:16759  _symbol */\n  0x04\n    /* \"contracts/ERC20/ERC20_flatten.sol\":16752:16769  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":16661:16777  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":2473:2474  0 */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":2449:2475  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ERC20/ERC20_flatten.sol\":2449:2461  initialOwner */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":2449:2475  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/ERC20/ERC20_flatten.sol\":2445:2542  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"contracts/ERC20/ERC20_flatten.sol\":2527:2528  0 */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":2499:2530  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/ERC20/ERC20_flatten.sol\":2445:2542  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":2552:2584  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"contracts/ERC20/ERC20_flatten.sol\":2571:2583  initialOwner */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":2552:2570  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"contracts/ERC20/ERC20_flatten.sol\":2552:2584  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":2400:2592  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75133:75178  name.toShortStringWithFallback(_nameFallback) */\n  tag_18\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75164:75177  _nameFallback */\n  0x06\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75133:75137  name */\n  dup4\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75133:75163  name.toShortStringWithFallback */\n  shl(0x20, tag_19)\n  swap1\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75133:75178  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75125:75178  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75200:75251  version.toShortStringWithFallback(_versionFallback) */\n  tag_20\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75234:75250  _versionFallback */\n  0x07\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75200:75207  version */\n  dup3\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75200:75233  version.toShortStringWithFallback */\n  shl(0x20, tag_19)\n  swap1\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75200:75251  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75189:75251  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75292:75296  name */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75276:75298  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75262:75298  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75342:75349  version */\n  dup1\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75326:75351  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75309:75351  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75381:75394  block.chainid */\n  chainid\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75364:75394  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75430:75453  _buildDomainSeparator() */\n  tag_21\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75430:75451  _buildDomainSeparator */\n  shl(0x20, tag_22)\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75430:75453  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75405:75453  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75486:75490  this */\n  address\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75464:75491  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75059:75499  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":81511:81563  constructor(string memory name) EIP712(name, \"1\") {} */\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":82990:83022  _mint(msg.sender, 1000000 ether) */\n  tag_25\n    /* \"contracts/ERC20/ERC20_flatten.sol\":82996:83006  msg.sender */\n  caller\n    /* \"contracts/ERC20/ERC20_flatten.sol\":83008:83021  1000000 ether */\n  0xd3c21bcecceda1000000\n    /* \"contracts/ERC20/ERC20_flatten.sol\":82990:82995  _mint */\n  shl(0x20, tag_26)\n    /* \"contracts/ERC20/ERC20_flatten.sol\":82990:83022  _mint(msg.sender, 1000000 ether) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":82820:83130  contract MyToken is ERC20, Ownable, ERC20Permit {... */\n  jump(tag_27)\n    /* \"contracts/ERC20/ERC20_flatten.sol\":4144:4335  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":4218:4234  address oldOwner */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":4237:4243  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ERC20/ERC20_flatten.sol\":4218:4243  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":4263:4271  newOwner */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":4254:4260  _owner */\n  0x05\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":4254:4271  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":4318:4326  newOwner */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":4287:4327  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ERC20/ERC20_flatten.sol\":4308:4316  oldOwner */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":4287:4327  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/ERC20/ERC20_flatten.sol\":4207:4335  {... */\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":4144:4335  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70319:70666  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_19:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70415:70426  ShortString */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70465:70467  32 */\n  0x20\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70449:70454  value */\n  dup4\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70443:70462  bytes(value).length */\n  mload\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70443:70467  bytes(value).length < 32 */\n  lt\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70439:70659  if (bytes(value).length < 32) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70491:70511  toShortString(value) */\n  tag_31\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70505:70510  value */\n  dup4\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70491:70504  toShortString */\n  shl(0x20, tag_32)\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70491:70511  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70484:70511  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_29)\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70439:70659  if (bytes(value).length < 32) {... */\ntag_30:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70585:70590  value */\n  dup3\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70544:70576  StorageSlot.getStringSlot(store) */\n  tag_34\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70570:70575  store */\n  dup4\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70544:70569  StorageSlot.getStringSlot */\n  shl(0x20, tag_35)\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70544:70576  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70544:70582  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70544:70590  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_36\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_36:\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":68748:68814  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70629:70646  FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70605:70647  return ShortString.wrap(FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":70319:70666  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_29:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75866:76047  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_22:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75921:75928  bytes32 */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":73782:73877  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75980:75991  _hashedName */\n  mload(0xe0)\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75993:76007  _hashedVersion */\n  mload(0x0100)\n    /* \"contracts/ERC20/ERC20_flatten.sol\":76009:76022  block.chainid */\n  chainid\n    /* \"contracts/ERC20/ERC20_flatten.sol\":76032:76036  this */\n  address\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75958:76038  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_38\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75948:76039  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75941:76039  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":75866:76047  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22662:22875  function _mint(address account, uint256 value) internal {... */\ntag_26:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22752:22753  0 */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22733:22754  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22733:22740  account */\n  dup3\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22733:22754  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22729:22822  if (account == address(0)) {... */\n  tag_41\n  jumpi\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22807:22808  0 */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22778:22810  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_42\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22729:22822  if (account == address(0)) {... */\ntag_41:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22832:22867  _update(address(0), account, value) */\n  tag_43\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22848:22849  0 */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22852:22859  account */\n  dup4\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22861:22866  value */\n  dup4\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22832:22839  _update */\n  shl(0x20, tag_44)\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22832:22867  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_43:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22662:22875  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69076:69368  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_32:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69141:69152  ShortString */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69165:69182  bytes memory bstr */\n  dup1\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69191:69194  str */\n  dup3\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69165:69195  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69224:69226  31 */\n  0x1f\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69210:69214  bstr */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69210:69221  bstr.length */\n  mload\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69210:69226  bstr.length > 31 */\n  gt\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69206:69280  if (bstr.length > 31) {... */\n  iszero\n  tag_46\n  jumpi\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69264:69267  str */\n  dup3\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69250:69268  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_47\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69206:69280  if (bstr.length > 31) {... */\ntag_46:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69347:69351  bstr */\n  dup1\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69347:69358  bstr.length */\n  mload\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69338:69342  bstr */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69330:69343  bytes32(bstr) */\n  tag_49\n  swap1\n  tag_50\n  jump\t// in\ntag_49:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69322:69344  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69322:69358  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69314:69359  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69290:69360  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":69076:69368  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ERC20/ERC20_flatten.sol\":66457:66664  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_35:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":66525:66545  StringSlot storage r */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":66636:66646  store.slot */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":66626:66646  r.slot := store.slot */\n  swap1\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":66457:66664  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21174:22309  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_44:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21280:21281  0 */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21264:21282  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21264:21268  from */\n  dup4\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21264:21282  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21260:21812  if (from == address(0)) {... */\n  tag_53\n  jumpi\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21418:21423  value */\n  dup1\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21402:21414  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21402:21423  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_54\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21260:21812  if (from == address(0)) {... */\n  jump(tag_56)\ntag_53:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21456:21475  uint256 fromBalance */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21478:21487  _balances */\n  dup1\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21478:21493  _balances[from] */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21488:21492  from */\n  dup6\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21478:21493  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21456:21493  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21526:21531  value */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21512:21523  fromBalance */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21512:21531  fromBalance < value */\n  lt\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21508:21625  if (fromBalance < value) {... */\n  iszero\n  tag_57\n  jumpi\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21584:21588  from */\n  dup4\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21590:21601  fromBalance */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21603:21608  value */\n  dup4\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21559:21609  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_58\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21508:21625  if (fromBalance < value) {... */\ntag_57:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21780:21785  value */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21766:21777  fromBalance */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21766:21785  fromBalance - value */\n  sub\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21748:21757  _balances */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21748:21763  _balances[from] */\n  dup1\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21758:21762  from */\n  dup7\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21748:21763  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21748:21785  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21441:21812  {... */\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21260:21812  if (from == address(0)) {... */\ntag_56:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21842:21843  0 */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21828:21844  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21828:21830  to */\n  dup3\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21828:21844  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21824:22259  if (to == address(0)) {... */\n  tag_60\n  jumpi\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22010:22015  value */\n  dup1\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21994:22006  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21994:22015  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21824:22259  if (to == address(0)) {... */\n  jump(tag_61)\ntag_60:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22227:22232  value */\n  dup1\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22210:22219  _balances */\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22210:22223  _balances[to] */\n  dup1\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22220:22222  to */\n  dup5\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22210:22223  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22210:22232  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21824:22259  if (to == address(0)) {... */\ntag_61:\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22291:22293  to */\n  dup2\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22276:22301  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22285:22289  from */\n  dup4\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22276:22301  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22295:22300  value */\n  dup4\n    /* \"contracts/ERC20/ERC20_flatten.sol\":22276:22301  Transfer(from, to, value) */\n  mload(0x40)\n  tag_62\n  swap2\n  swap1\n  tag_63\n  jump\t// in\ntag_62:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/ERC20/ERC20_flatten.sol\":21174:22309  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_64:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_65:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_66:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_67:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_103\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_103:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_104\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_105\n  tag_66\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":714:798   */\ntag_104:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_68:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_69:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_70:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_71:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_110\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_70\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":1429:1468   */\n  tag_111\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_70\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_72:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_73:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_74:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_115\n    /* \"#utility.yul\":1818:1852   */\n  tag_116\n    /* \"#utility.yul\":1827:1851   */\n  tag_117\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_72\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":1818:1852   */\n  tag_73\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1800:1853   */\n  tag_72\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_75:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_76:\n    /* \"#utility.yul\":2056:2095   */\n  tag_120\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_74\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":2117:2208   */\n  tag_121\n    /* \"#utility.yul\":2166:2207   */\n  tag_122\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_75\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_71\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_77:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_78:\n    /* \"#utility.yul\":2377:2409   */\n  tag_125\n  tag_77\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":2418:2483   */\n  tag_126\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_76\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_79:\n    /* \"#utility.yul\":2555:2675   */\ntag_128:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_131\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_78\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_128)\ntag_130:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_80:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_134\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_68\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":2906:2935   */\n  tag_135\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_69\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_136:\n    /* \"#utility.yul\":3133:3213   */\n  tag_137\n    /* \"#utility.yul\":3189:3211   */\n  tag_138\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_69\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_79\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_133:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_81:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_82:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_141\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_81\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_83:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_143\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_82\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_9:\n    /* \"#utility.yul\":3950:3987   */\n  tag_145\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_64\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_147\n  tag_65\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":4038:4094   */\ntag_146:\n    /* \"#utility.yul\":4118:4156   */\n  tag_148\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_67\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4203:4270   */\n  tag_149\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_80\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_151\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_152:\n    /* \"#utility.yul\":5144:5211   */\n  tag_153\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_83\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_150)\n    /* \"#utility.yul\":4365:4983   */\ntag_151:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_154\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_68\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_155:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_155)\ntag_157:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_159\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_82\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_158:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_150:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_84:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_85:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_162\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_84\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_86:\n    /* \"#utility.yul\":5555:5579   */\n  tag_164\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_85\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_14:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_166\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_86\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:5897   */\ntag_87:\n    /* \"#utility.yul\":5857:5864   */\n  0x00\n    /* \"#utility.yul\":5886:5891   */\n  dup2\n    /* \"#utility.yul\":5875:5891   */\n  swap1\n  pop\n    /* \"#utility.yul\":5820:5897   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5903:6021   */\ntag_88:\n    /* \"#utility.yul\":5990:6014   */\n  tag_169\n    /* \"#utility.yul\":6008:6013   */\n  dup2\n    /* \"#utility.yul\":5990:6014   */\n  tag_87\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":5985:5988   */\n  dup3\n    /* \"#utility.yul\":5978:6015   */\n  mstore\n    /* \"#utility.yul\":5903:6021   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6027:6145   */\ntag_89:\n    /* \"#utility.yul\":6114:6138   */\n  tag_171\n    /* \"#utility.yul\":6132:6137   */\n  dup2\n    /* \"#utility.yul\":6114:6138   */\n  tag_72\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6109:6112   */\n  dup3\n    /* \"#utility.yul\":6102:6139   */\n  mstore\n    /* \"#utility.yul\":6027:6145   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6151:6815   */\ntag_39:\n    /* \"#utility.yul\":6356:6360   */\n  0x00\n    /* \"#utility.yul\":6394:6397   */\n  0xa0\n    /* \"#utility.yul\":6383:6392   */\n  dup3\n    /* \"#utility.yul\":6379:6398   */\n  add\n    /* \"#utility.yul\":6371:6398   */\n  swap1\n  pop\n    /* \"#utility.yul\":6408:6479   */\n  tag_173\n    /* \"#utility.yul\":6476:6477   */\n  0x00\n    /* \"#utility.yul\":6465:6474   */\n  dup4\n    /* \"#utility.yul\":6461:6478   */\n  add\n    /* \"#utility.yul\":6452:6458   */\n  dup9\n    /* \"#utility.yul\":6408:6479   */\n  tag_88\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":6489:6561   */\n  tag_174\n    /* \"#utility.yul\":6557:6559   */\n  0x20\n    /* \"#utility.yul\":6546:6555   */\n  dup4\n    /* \"#utility.yul\":6542:6560   */\n  add\n    /* \"#utility.yul\":6533:6539   */\n  dup8\n    /* \"#utility.yul\":6489:6561   */\n  tag_88\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6571:6643   */\n  tag_175\n    /* \"#utility.yul\":6639:6641   */\n  0x40\n    /* \"#utility.yul\":6628:6637   */\n  dup4\n    /* \"#utility.yul\":6624:6642   */\n  add\n    /* \"#utility.yul\":6615:6621   */\n  dup7\n    /* \"#utility.yul\":6571:6643   */\n  tag_88\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":6653:6725   */\n  tag_176\n    /* \"#utility.yul\":6721:6723   */\n  0x60\n    /* \"#utility.yul\":6710:6719   */\n  dup4\n    /* \"#utility.yul\":6706:6724   */\n  add\n    /* \"#utility.yul\":6697:6703   */\n  dup6\n    /* \"#utility.yul\":6653:6725   */\n  tag_89\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6735:6808   */\n  tag_177\n    /* \"#utility.yul\":6803:6806   */\n  0x80\n    /* \"#utility.yul\":6792:6801   */\n  dup4\n    /* \"#utility.yul\":6788:6807   */\n  add\n    /* \"#utility.yul\":6779:6785   */\n  dup5\n    /* \"#utility.yul\":6735:6808   */\n  tag_86\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6151:6815   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6821:6990   */\ntag_90:\n    /* \"#utility.yul\":6905:6916   */\n  0x00\n    /* \"#utility.yul\":6939:6945   */\n  dup3\n    /* \"#utility.yul\":6934:6937   */\n  dup3\n    /* \"#utility.yul\":6927:6946   */\n  mstore\n    /* \"#utility.yul\":6979:6983   */\n  0x20\n    /* \"#utility.yul\":6974:6977   */\n  dup3\n    /* \"#utility.yul\":6970:6984   */\n  add\n    /* \"#utility.yul\":6955:6984   */\n  swap1\n  pop\n    /* \"#utility.yul\":6821:6990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6996:7242   */\ntag_91:\n    /* \"#utility.yul\":7077:7078   */\n  0x00\n    /* \"#utility.yul\":7087:7200   */\ntag_180:\n    /* \"#utility.yul\":7101:7107   */\n  dup4\n    /* \"#utility.yul\":7098:7099   */\n  dup2\n    /* \"#utility.yul\":7095:7108   */\n  lt\n    /* \"#utility.yul\":7087:7200   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":7186:7187   */\n  dup1\n    /* \"#utility.yul\":7181:7184   */\n  dup3\n    /* \"#utility.yul\":7177:7188   */\n  add\n    /* \"#utility.yul\":7171:7189   */\n  mload\n    /* \"#utility.yul\":7167:7168   */\n  dup2\n    /* \"#utility.yul\":7162:7165   */\n  dup5\n    /* \"#utility.yul\":7158:7169   */\n  add\n    /* \"#utility.yul\":7151:7190   */\n  mstore\n    /* \"#utility.yul\":7123:7125   */\n  0x20\n    /* \"#utility.yul\":7120:7121   */\n  dup2\n    /* \"#utility.yul\":7116:7126   */\n  add\n    /* \"#utility.yul\":7111:7126   */\n  swap1\n  pop\n    /* \"#utility.yul\":7087:7200   */\n  jump(tag_180)\ntag_182:\n    /* \"#utility.yul\":7234:7235   */\n  0x00\n    /* \"#utility.yul\":7225:7231   */\n  dup5\n    /* \"#utility.yul\":7220:7223   */\n  dup5\n    /* \"#utility.yul\":7216:7232   */\n  add\n    /* \"#utility.yul\":7209:7236   */\n  mstore\n    /* \"#utility.yul\":7058:7242   */\n  pop\n    /* \"#utility.yul\":6996:7242   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7248:7350   */\ntag_92:\n    /* \"#utility.yul\":7289:7295   */\n  0x00\n    /* \"#utility.yul\":7340:7342   */\n  0x1f\n    /* \"#utility.yul\":7336:7343   */\n  not\n    /* \"#utility.yul\":7331:7333   */\n  0x1f\n    /* \"#utility.yul\":7324:7329   */\n  dup4\n    /* \"#utility.yul\":7320:7334   */\n  add\n    /* \"#utility.yul\":7316:7344   */\n  and\n    /* \"#utility.yul\":7306:7344   */\n  swap1\n  pop\n    /* \"#utility.yul\":7248:7350   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7356:7733   */\ntag_93:\n    /* \"#utility.yul\":7444:7447   */\n  0x00\n    /* \"#utility.yul\":7472:7511   */\n  tag_185\n    /* \"#utility.yul\":7505:7510   */\n  dup3\n    /* \"#utility.yul\":7472:7511   */\n  tag_64\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":7527:7598   */\n  tag_186\n    /* \"#utility.yul\":7591:7597   */\n  dup2\n    /* \"#utility.yul\":7586:7589   */\n  dup6\n    /* \"#utility.yul\":7527:7598   */\n  tag_90\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7520:7598   */\n  swap4\n  pop\n    /* \"#utility.yul\":7607:7672   */\n  tag_187\n    /* \"#utility.yul\":7665:7671   */\n  dup2\n    /* \"#utility.yul\":7660:7663   */\n  dup6\n    /* \"#utility.yul\":7653:7657   */\n  0x20\n    /* \"#utility.yul\":7646:7651   */\n  dup7\n    /* \"#utility.yul\":7642:7658   */\n  add\n    /* \"#utility.yul\":7607:7672   */\n  tag_91\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7697:7726   */\n  tag_188\n    /* \"#utility.yul\":7719:7725   */\n  dup2\n    /* \"#utility.yul\":7697:7726   */\n  tag_92\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":7692:7695   */\n  dup5\n    /* \"#utility.yul\":7688:7727   */\n  add\n    /* \"#utility.yul\":7681:7727   */\n  swap2\n  pop\n    /* \"#utility.yul\":7448:7733   */\n  pop\n    /* \"#utility.yul\":7356:7733   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7739:8052   */\ntag_48:\n    /* \"#utility.yul\":7852:7856   */\n  0x00\n    /* \"#utility.yul\":7890:7892   */\n  0x20\n    /* \"#utility.yul\":7879:7888   */\n  dup3\n    /* \"#utility.yul\":7875:7893   */\n  add\n    /* \"#utility.yul\":7867:7893   */\n  swap1\n  pop\n    /* \"#utility.yul\":7939:7948   */\n  dup2\n    /* \"#utility.yul\":7933:7937   */\n  dup2\n    /* \"#utility.yul\":7929:7949   */\n  sub\n    /* \"#utility.yul\":7925:7926   */\n  0x00\n    /* \"#utility.yul\":7914:7923   */\n  dup4\n    /* \"#utility.yul\":7910:7927   */\n  add\n    /* \"#utility.yul\":7903:7950   */\n  mstore\n    /* \"#utility.yul\":7967:8045   */\n  tag_190\n    /* \"#utility.yul\":8040:8044   */\n  dup2\n    /* \"#utility.yul\":8031:8037   */\n  dup5\n    /* \"#utility.yul\":7967:8045   */\n  tag_93\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7959:8045   */\n  swap1\n  pop\n    /* \"#utility.yul\":7739:8052   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8058:8156   */\ntag_94:\n    /* \"#utility.yul\":8109:8115   */\n  0x00\n    /* \"#utility.yul\":8143:8148   */\n  dup2\n    /* \"#utility.yul\":8137:8149   */\n  mload\n    /* \"#utility.yul\":8127:8149   */\n  swap1\n  pop\n    /* \"#utility.yul\":8058:8156   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8162:8278   */\ntag_95:\n    /* \"#utility.yul\":8213:8217   */\n  0x00\n    /* \"#utility.yul\":8236:8239   */\n  dup2\n    /* \"#utility.yul\":8228:8239   */\n  swap1\n  pop\n    /* \"#utility.yul\":8266:8270   */\n  0x20\n    /* \"#utility.yul\":8261:8264   */\n  dup3\n    /* \"#utility.yul\":8257:8271   */\n  add\n    /* \"#utility.yul\":8249:8271   */\n  swap1\n  pop\n    /* \"#utility.yul\":8162:8278   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8284:8438   */\ntag_96:\n    /* \"#utility.yul\":8327:8338   */\n  0x00\n    /* \"#utility.yul\":8363:8392   */\n  tag_194\n    /* \"#utility.yul\":8387:8390   */\n  dup3\n    /* \"#utility.yul\":8381:8391   */\n  mload\n    /* \"#utility.yul\":8363:8392   */\n  tag_87\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":8426:8431   */\n  dup1\n    /* \"#utility.yul\":8402:8431   */\n  swap2\n  pop\n    /* \"#utility.yul\":8339:8438   */\n  pop\n    /* \"#utility.yul\":8284:8438   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8444:9038   */\ntag_50:\n    /* \"#utility.yul\":8528:8533   */\n  0x00\n    /* \"#utility.yul\":8559:8597   */\n  tag_196\n    /* \"#utility.yul\":8591:8596   */\n  dup3\n    /* \"#utility.yul\":8559:8597   */\n  tag_94\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":8622:8627   */\n  dup3\n    /* \"#utility.yul\":8649:8689   */\n  tag_197\n    /* \"#utility.yul\":8683:8688   */\n  dup5\n    /* \"#utility.yul\":8649:8689   */\n  tag_95\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":8637:8689   */\n  swap1\n  pop\n    /* \"#utility.yul\":8708:8743   */\n  tag_198\n    /* \"#utility.yul\":8734:8742   */\n  dup2\n    /* \"#utility.yul\":8708:8743   */\n  tag_96\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":8699:8743   */\n  swap3\n  pop\n    /* \"#utility.yul\":8767:8769   */\n  0x20\n    /* \"#utility.yul\":8759:8765   */\n  dup3\n    /* \"#utility.yul\":8756:8770   */\n  lt\n    /* \"#utility.yul\":8753:9031   */\n  iszero\n  tag_199\n  jumpi\n    /* \"#utility.yul\":8838:9007   */\n  tag_200\n    /* \"#utility.yul\":8923:8989   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8893:8899   */\n  dup4\n    /* \"#utility.yul\":8889:8891   */\n  0x20\n    /* \"#utility.yul\":8885:8900   */\n  sub\n    /* \"#utility.yul\":8882:8883   */\n  0x08\n    /* \"#utility.yul\":8878:8901   */\n  mul\n    /* \"#utility.yul\":8838:9007   */\n  tag_70\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":8815:8820   */\n  dup4\n    /* \"#utility.yul\":8794:9021   */\n  and\n    /* \"#utility.yul\":8785:9021   */\n  swap3\n  pop\n    /* \"#utility.yul\":8753:9031   */\ntag_199:\n    /* \"#utility.yul\":8534:9038   */\n  pop\n  pop\n    /* \"#utility.yul\":8444:9038   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9044:9224   */\ntag_97:\n    /* \"#utility.yul\":9092:9169   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9089:9090   */\n  0x00\n    /* \"#utility.yul\":9082:9170   */\n  mstore\n    /* \"#utility.yul\":9189:9193   */\n  0x11\n    /* \"#utility.yul\":9186:9187   */\n  0x04\n    /* \"#utility.yul\":9179:9194   */\n  mstore\n    /* \"#utility.yul\":9213:9217   */\n  0x24\n    /* \"#utility.yul\":9210:9211   */\n  0x00\n    /* \"#utility.yul\":9203:9218   */\n  revert\n    /* \"#utility.yul\":9230:9421   */\ntag_55:\n    /* \"#utility.yul\":9270:9273   */\n  0x00\n    /* \"#utility.yul\":9289:9309   */\n  tag_203\n    /* \"#utility.yul\":9307:9308   */\n  dup3\n    /* \"#utility.yul\":9289:9309   */\n  tag_72\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":9284:9309   */\n  swap2\n  pop\n    /* \"#utility.yul\":9323:9343   */\n  tag_204\n    /* \"#utility.yul\":9341:9342   */\n  dup4\n    /* \"#utility.yul\":9323:9343   */\n  tag_72\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":9318:9343   */\n  swap3\n  pop\n    /* \"#utility.yul\":9366:9367   */\n  dup3\n    /* \"#utility.yul\":9363:9364   */\n  dup3\n    /* \"#utility.yul\":9359:9368   */\n  add\n    /* \"#utility.yul\":9352:9368   */\n  swap1\n  pop\n    /* \"#utility.yul\":9387:9390   */\n  dup1\n    /* \"#utility.yul\":9384:9385   */\n  dup3\n    /* \"#utility.yul\":9381:9391   */\n  gt\n    /* \"#utility.yul\":9378:9414   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":9394:9412   */\n  tag_206\n  tag_97\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":9378:9414   */\ntag_205:\n    /* \"#utility.yul\":9230:9421   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9427:9869   */\ntag_59:\n    /* \"#utility.yul\":9576:9580   */\n  0x00\n    /* \"#utility.yul\":9614:9616   */\n  0x60\n    /* \"#utility.yul\":9603:9612   */\n  dup3\n    /* \"#utility.yul\":9599:9617   */\n  add\n    /* \"#utility.yul\":9591:9617   */\n  swap1\n  pop\n    /* \"#utility.yul\":9627:9698   */\n  tag_208\n    /* \"#utility.yul\":9695:9696   */\n  0x00\n    /* \"#utility.yul\":9684:9693   */\n  dup4\n    /* \"#utility.yul\":9680:9697   */\n  add\n    /* \"#utility.yul\":9671:9677   */\n  dup7\n    /* \"#utility.yul\":9627:9698   */\n  tag_86\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":9708:9780   */\n  tag_209\n    /* \"#utility.yul\":9776:9778   */\n  0x20\n    /* \"#utility.yul\":9765:9774   */\n  dup4\n    /* \"#utility.yul\":9761:9779   */\n  add\n    /* \"#utility.yul\":9752:9758   */\n  dup6\n    /* \"#utility.yul\":9708:9780   */\n  tag_89\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":9790:9862   */\n  tag_210\n    /* \"#utility.yul\":9858:9860   */\n  0x40\n    /* \"#utility.yul\":9847:9856   */\n  dup4\n    /* \"#utility.yul\":9843:9861   */\n  add\n    /* \"#utility.yul\":9834:9840   */\n  dup5\n    /* \"#utility.yul\":9790:9862   */\n  tag_89\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":9427:9869   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9875:10097   */\ntag_63:\n    /* \"#utility.yul\":9968:9972   */\n  0x00\n    /* \"#utility.yul\":10006:10008   */\n  0x20\n    /* \"#utility.yul\":9995:10004   */\n  dup3\n    /* \"#utility.yul\":9991:10009   */\n  add\n    /* \"#utility.yul\":9983:10009   */\n  swap1\n  pop\n    /* \"#utility.yul\":10019:10090   */\n  tag_212\n    /* \"#utility.yul\":10087:10088   */\n  0x00\n    /* \"#utility.yul\":10076:10085   */\n  dup4\n    /* \"#utility.yul\":10072:10089   */\n  add\n    /* \"#utility.yul\":10063:10069   */\n  dup5\n    /* \"#utility.yul\":10019:10090   */\n  tag_89\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":9875:10097   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC20/ERC20_flatten.sol\":82820:83130  contract MyToken is ERC20, Ownable, ERC20Permit {... */\ntag_27:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6a27fd8b4e034345f821626e478d5e1624295ad016c351a1e0a3d60e930e4e52\")\n  0x00\n  assignImmutable(\"0x94a6815ac3f39ee0f691137327eba74e351a039ac093f36725d81460ae04f412\")\n  0x00\n  assignImmutable(\"0x957b8855a729b67dc028ca49cb97b10aca21a5ff5ddcb5f61d4444c005a9b1c2\")\n  0x00\n  assignImmutable(\"0xd7540fe9b6cfec114ef69b9a5e37f0df0cc41a7a00237e8b74bf5a92c0da8102\")\n  0x00\n  assignImmutable(\"0xa19d718480110222d22b6d2951f2fd7e402bb541199804c801e8efc2019fa5ca\")\n  0x00\n  assignImmutable(\"0x8e6edc2e6718e67f653228e7ef9c7cb13217a05d4dce88c9b22917701f7f0736\")\n  0x00\n  assignImmutable(\"0xccfc0c959b119ee28d407ea161eaeb170333879869a337b808d1b575d1b25cde\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82820:83130  contract MyToken is ERC20, Ownable, ERC20Permit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":16847:16938  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19140:19330  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17949:18048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19908:20157  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17800:17884  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82634:82748  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/ERC20_flatten.sol\":83032:83127  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18111:18229  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3506:3609  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82376:82521  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76923:77503  function eip712Domain()... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2831:2918  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17057:17152  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18434:18616  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81622:82317  function permit(... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18679:18821  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3764:3984  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":16847:16938  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":16892:16905  string memory */\n      0x60\n        /* \"contracts/ERC20/ERC20_flatten.sol\":16925:16930  _name */\n      0x03\n        /* \"contracts/ERC20/ERC20_flatten.sol\":16918:16930  return _name */\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_93\n      jump\t// in\n    tag_94:\n      dup1\n      iszero\n      tag_95\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_96\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_95)\n    tag_96:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_97:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_97\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":16847:16938  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19140:19330  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19213:19217  bool */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19230:19243  address owner */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19246:19258  _msgSender() */\n      tag_99\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19246:19256  _msgSender */\n      tag_100\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19246:19258  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19230:19258  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19269:19300  _approve(owner, spender, value) */\n      tag_101\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19278:19283  owner */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19285:19292  spender */\n      dup6\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19294:19299  value */\n      dup6\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19269:19277  _approve */\n      tag_102\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19269:19300  _approve(owner, spender, value) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19318:19322  true */\n      0x01\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19311:19322  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19140:19330  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17949:18048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_34:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18001:18008  uint256 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18028:18040  _totalSupply */\n      sload(0x02)\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18021:18040  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17949:18048  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19908:20157  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19995:19999  bool */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20012:20027  address spender */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20030:20042  _msgSender() */\n      tag_105\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20030:20040  _msgSender */\n      tag_100\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20030:20042  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20012:20042  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20053:20090  _spendAllowance(from, spender, value) */\n      tag_106\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20069:20073  from */\n      dup6\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20075:20082  spender */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20084:20089  value */\n      dup6\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20053:20068  _spendAllowance */\n      tag_107\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20053:20090  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20101:20127  _transfer(from, to, value) */\n      tag_108\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20111:20115  from */\n      dup6\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20117:20119  to */\n      dup6\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20121:20126  value */\n      dup6\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20101:20110  _transfer */\n      tag_109\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20101:20127  _transfer(from, to, value) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20145:20149  true */\n      0x01\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20138:20149  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":19908:20157  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17800:17884  function decimals() public view virtual returns (uint8) {... */\n    tag_43:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17849:17854  uint8 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17874:17876  18 */\n      0x12\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17867:17876  return 18 */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17800:17884  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82634:82748  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_47:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82693:82700  bytes32 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82720:82740  _domainSeparatorV4() */\n      tag_112\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82720:82738  _domainSeparatorV4 */\n      tag_113\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82720:82740  _domainSeparatorV4() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82713:82740  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82634:82748  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":83032:83127  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_52:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2717:2730  _checkOwner() */\n      tag_115\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2717:2728  _checkOwner */\n      tag_116\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2717:2730  _checkOwner() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":83102:83119  _mint(to, amount) */\n      tag_118\n        /* \"contracts/ERC20/ERC20_flatten.sol\":83108:83110  to */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":83112:83118  amount */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":83102:83107  _mint */\n      tag_119\n        /* \"contracts/ERC20/ERC20_flatten.sol\":83102:83119  _mint(to, amount) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":83032:83127  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18111:18229  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18176:18183  uint256 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18203:18212  _balances */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18203:18221  _balances[account] */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18213:18220  account */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18203:18221  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18196:18221  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18111:18229  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3506:3609  function renounceOwnership() public virtual onlyOwner {... */\n    tag_59:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2717:2730  _checkOwner() */\n      tag_122\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2717:2728  _checkOwner */\n      tag_116\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2717:2730  _checkOwner() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3571:3601  _transferOwnership(address(0)) */\n      tag_124\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3598:3599  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3571:3589  _transferOwnership */\n      tag_125\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3571:3601  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3506:3609  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82376:82521  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_62:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82467:82474  uint256 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82494:82513  super.nonces(owner) */\n      tag_127\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82507:82512  owner */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82494:82506  super.nonces */\n      tag_128\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82494:82513  super.nonces(owner) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82487:82513  return super.nonces(owner) */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82376:82521  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76923:77503  function eip712Domain()... */\n    tag_65:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77026:77039  bytes1 fields */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77054:77072  string memory name */\n      0x60\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77087:77108  string memory version */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77123:77138  uint256 chainId */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77153:77178  address verifyingContract */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77193:77205  bytes32 salt */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77220:77247  uint256[] memory extensions */\n      0x60\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77328:77341  _EIP712Name() */\n      tag_130\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77328:77339  _EIP712Name */\n      tag_131\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77328:77341  _EIP712Name() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77356:77372  _EIP712Version() */\n      tag_132\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77356:77370  _EIP712Version */\n      tag_133\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77356:77372  _EIP712Version() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77387:77400  block.chainid */\n      chainid\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77423:77427  this */\n      address\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77451:77452  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77443:77453  bytes32(0) */\n      dup1\n      shl\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77482:77483  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77468:77484  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_134\n      jumpi\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n    tag_134:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_137:\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77275:77495  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76923:77503  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2831:2918  function owner() public view virtual returns (address) {... */\n    tag_69:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2877:2884  address */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2904:2910  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2897:2910  return _owner */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2831:2918  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17057:17152  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17104:17117  string memory */\n      0x60\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17137:17144  _symbol */\n      0x04\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17130:17144  return _symbol */\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_93\n      jump\t// in\n    tag_140:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_141\n      swap1\n      tag_93\n      jump\t// in\n    tag_141:\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_143\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_142)\n    tag_143:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_144:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_144\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":17057:17152  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18434:18616  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_77:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18503:18507  bool */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18520:18533  address owner */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18536:18548  _msgSender() */\n      tag_146\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18536:18546  _msgSender */\n      tag_100\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18536:18548  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18520:18548  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18559:18586  _transfer(owner, to, value) */\n      tag_147\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18569:18574  owner */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18576:18578  to */\n      dup6\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18580:18585  value */\n      dup6\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18559:18568  _transfer */\n      tag_109\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18559:18586  _transfer(owner, to, value) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18604:18608  true */\n      0x01\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18597:18608  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18434:18616  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81622:82317  function permit(... */\n    tag_82:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81852:81860  deadline */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81834:81849  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81834:81860  block.timestamp > deadline */\n      gt\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81830:81929  if (block.timestamp > deadline) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81908:81916  deadline */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81884:81917  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      0x6279130200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81830:81929  if (block.timestamp > deadline) {... */\n    tag_149:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81941:81959  bytes32 structHash */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":80942:81037  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82000:82005  owner */\n      dup9\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82007:82014  spender */\n      dup9\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82016:82021  value */\n      dup9\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82023:82039  _useNonce(owner) */\n      tag_151\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82033:82038  owner */\n      dup13\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82023:82032  _useNonce */\n      tag_152\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82023:82039  _useNonce(owner) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82041:82049  deadline */\n      dup10\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81972:82050  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      tag_153\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81962:82051  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81941:82051  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82064:82076  bytes32 hash */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82079:82107  _hashTypedDataV4(structHash) */\n      tag_155\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82096:82106  structHash */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82079:82095  _hashTypedDataV4 */\n      tag_156\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82079:82107  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82064:82107  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82120:82134  address signer */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82137:82165  ECDSA.recover(hash, v, r, s) */\n      tag_157\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82151:82155  hash */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82157:82158  v */\n      dup8\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82160:82161  r */\n      dup8\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82163:82164  s */\n      dup8\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82137:82150  ECDSA.recover */\n      tag_158\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82137:82165  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82120:82165  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82190:82195  owner */\n      dup10\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82180:82195  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82180:82186  signer */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82180:82195  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82176:82266  if (signer != owner) {... */\n      tag_159\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82240:82246  signer */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82248:82253  owner */\n      dup11\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82219:82254  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      0x4b800e4600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82176:82266  if (signer != owner) {... */\n    tag_159:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82278:82309  _approve(owner, spender, value) */\n      tag_162\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82287:82292  owner */\n      dup11\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82294:82301  spender */\n      dup11\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82303:82308  value */\n      dup11\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82278:82286  _approve */\n      tag_102\n        /* \"contracts/ERC20/ERC20_flatten.sol\":82278:82309  _approve(owner, spender, value) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81819:82317  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":81622:82317  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18679:18821  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_86:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18759:18766  uint256 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18786:18797  _allowances */\n      0x01\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18786:18804  _allowances[owner] */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18798:18803  owner */\n      dup5\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18786:18804  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18786:18813  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18805:18812  spender */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18786:18813  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18779:18813  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":18679:18821  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3764:3984  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_90:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2717:2730  _checkOwner() */\n      tag_165\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2717:2728  _checkOwner */\n      tag_116\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2717:2730  _checkOwner() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3869:3870  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3849:3871  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3849:3857  newOwner */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3849:3871  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3845:3938  if (newOwner == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3923:3924  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3895:3926  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3845:3938  if (newOwner == address(0)) {... */\n    tag_167:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3948:3976  _transferOwnership(newOwner) */\n      tag_169\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3967:3975  newOwner */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3948:3966  _transferOwnership */\n      tag_125\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3948:3976  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3764:3984  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":785:883  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":838:845  address */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":865:875  msg.sender */\n      caller\n        /* \"contracts/ERC20/ERC20_flatten.sol\":858:875  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":785:883  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":23967:24097  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_102:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":24052:24089  _approve(owner, spender, value, true) */\n      tag_172\n        /* \"contracts/ERC20/ERC20_flatten.sol\":24061:24066  owner */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":24068:24075  spender */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":24077:24082  value */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":24084:24088  true */\n      0x01\n        /* \"contracts/ERC20/ERC20_flatten.sol\":24052:24060  _approve */\n      tag_173\n        /* \"contracts/ERC20/ERC20_flatten.sol\":24052:24089  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":23967:24097  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25683:26170  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_107:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25783:25807  uint256 currentAllowance */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25810:25835  allowance(owner, spender) */\n      tag_175\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25820:25825  owner */\n      dup5\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25827:25834  spender */\n      dup5\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25810:25819  allowance */\n      tag_86\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25810:25835  allowance(owner, spender) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25783:25835  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25870:25887  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25850:25866  currentAllowance */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25850:25887  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25846:26163  if (currentAllowance != type(uint256).max) {... */\n      tag_176\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25927:25932  value */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25908:25924  currentAllowance */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25908:25932  currentAllowance < value */\n      lt\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25904:26036  if (currentAllowance < value) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25987:25994  spender */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25996:26012  currentAllowance */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":26014:26019  value */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25960:26020  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25904:26036  if (currentAllowance < value) {... */\n    tag_177:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":26079:26136  _approve(owner, spender, currentAllowance - value, false) */\n      tag_180\n        /* \"contracts/ERC20/ERC20_flatten.sol\":26088:26093  owner */\n      dup5\n        /* \"contracts/ERC20/ERC20_flatten.sol\":26095:26102  spender */\n      dup5\n        /* \"contracts/ERC20/ERC20_flatten.sol\":26123:26128  value */\n      dup5\n        /* \"contracts/ERC20/ERC20_flatten.sol\":26104:26120  currentAllowance */\n      dup5\n        /* \"contracts/ERC20/ERC20_flatten.sol\":26104:26128  currentAllowance - value */\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":26130:26135  false */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":26079:26087  _approve */\n      tag_173\n        /* \"contracts/ERC20/ERC20_flatten.sol\":26079:26136  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25846:26163  if (currentAllowance != type(uint256).max) {... */\n    tag_176:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25772:26170  {... */\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25683:26170  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20542:20850  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_109:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20642:20643  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20626:20644  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20626:20630  from */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20626:20644  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20622:20710  if (from == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20695:20696  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20668:20698  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20622:20710  if (from == address(0)) {... */\n    tag_182:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20738:20739  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20724:20740  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20724:20726  to */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20724:20740  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20720:20808  if (to == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20793:20794  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20764:20796  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20720:20808  if (to == address(0)) {... */\n    tag_184:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20818:20842  _update(from, to, value) */\n      tag_186\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20826:20830  from */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20832:20834  to */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20836:20841  value */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20818:20825  _update */\n      tag_187\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20818:20842  _update(from, to, value) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":20542:20850  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75590:75858  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_113:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75643:75650  bytes32 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75684:75695  _cachedThis */\n      immutable(\"0xa19d718480110222d22b6d2951f2fd7e402bb541199804c801e8efc2019fa5ca\")\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75667:75695  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75675:75679  this */\n      address\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75667:75695  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75667:75730  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75716:75730  _cachedChainId */\n      immutable(\"0x8e6edc2e6718e67f653228e7ef9c7cb13217a05d4dce88c9b22917701f7f0736\")\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75699:75712  block.chainid */\n      chainid\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75699:75730  block.chainid == _cachedChainId */\n      eq\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75667:75730  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_189:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75663:75851  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75754:75776  _cachedDomainSeparator */\n      immutable(\"0xccfc0c959b119ee28d407ea161eaeb170333879869a337b808d1b575d1b25cde\")\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75747:75776  return _cachedDomainSeparator */\n      swap1\n      pop\n      jump(tag_188)\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75663:75851  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_190:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75816:75839  _buildDomainSeparator() */\n      tag_192\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75816:75837  _buildDomainSeparator */\n      tag_193\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75816:75839  _buildDomainSeparator() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75809:75839  return _buildDomainSeparator() */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75590:75858  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_188:\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2996:3162  function _checkOwner() internal view virtual {... */\n    tag_116:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3067:3079  _msgSender() */\n      tag_195\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3067:3077  _msgSender */\n      tag_100\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3067:3079  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3056:3079  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3056:3063  owner() */\n      tag_196\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3056:3061  owner */\n      tag_69\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3056:3063  owner() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3056:3079  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3052:3155  if (owner() != _msgSender()) {... */\n      tag_197\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3130:3142  _msgSender() */\n      tag_198\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3130:3140  _msgSender */\n      tag_100\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3130:3142  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3103:3143  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":3052:3155  if (owner() != _msgSender()) {... */\n    tag_197:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":2996:3162  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22662:22875  function _mint(address account, uint256 value) internal {... */\n    tag_119:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22752:22753  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22733:22754  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22733:22740  account */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22733:22754  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22729:22822  if (account == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22807:22808  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22778:22810  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22729:22822  if (account == address(0)) {... */\n    tag_201:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22832:22867  _update(address(0), account, value) */\n      tag_203\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22848:22849  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22852:22859  account */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22861:22866  value */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22832:22839  _update */\n      tag_187\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22832:22867  _update(address(0), account, value) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22662:22875  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":4144:4335  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_125:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":4218:4234  address oldOwner */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":4237:4243  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":4218:4243  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":4263:4271  newOwner */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":4254:4260  _owner */\n      0x05\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":4254:4271  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":4318:4326  newOwner */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":4287:4327  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":4308:4316  oldOwner */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":4287:4327  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":4207:4335  {... */\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":4144:4335  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79074:79183  function nonces(address owner) public view virtual returns (uint256) {... */\n    tag_128:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79134:79141  uint256 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79161:79168  _nonces */\n      0x08\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79161:79175  _nonces[owner] */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79169:79174  owner */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79161:79175  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79154:79175  return _nonces[owner] */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79074:79183  function nonces(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77832:77960  function _EIP712Name() internal view returns (string memory) {... */\n    tag_131:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77878:77891  string memory */\n      0x60\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77911:77952  _name.toStringWithFallback(_nameFallback) */\n      tag_207\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77938:77951  _nameFallback */\n      0x06\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77911:77916  _name */\n      immutable(\"0x94a6815ac3f39ee0f691137327eba74e351a039ac093f36725d81460ae04f412\")\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77911:77937  _name.toStringWithFallback */\n      tag_208\n      swap1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77911:77952  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77904:77952  return _name.toStringWithFallback(_nameFallback) */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":77832:77960  function _EIP712Name() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":78295:78432  function _EIP712Version() internal view returns (string memory) {... */\n    tag_133:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":78344:78357  string memory */\n      0x60\n        /* \"contracts/ERC20/ERC20_flatten.sol\":78377:78424  _version.toStringWithFallback(_versionFallback) */\n      tag_210\n        /* \"contracts/ERC20/ERC20_flatten.sol\":78407:78423  _versionFallback */\n      0x07\n        /* \"contracts/ERC20/ERC20_flatten.sol\":78377:78385  _version */\n      immutable(\"0x6a27fd8b4e034345f821626e478d5e1624295ad016c351a1e0a3d60e930e4e52\")\n        /* \"contracts/ERC20/ERC20_flatten.sol\":78377:78406  _version.toStringWithFallback */\n      tag_208\n      swap1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":78377:78424  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":78370:78424  return _version.toStringWithFallback(_versionFallback) */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":78295:78432  function _EIP712Version() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79304:79706  function _useNonce(address owner) internal virtual returns (uint256) {... */\n    tag_152:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79364:79371  uint256 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79671:79678  _nonces */\n      0x08\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79671:79685  _nonces[owner] */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79679:79684  owner */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79671:79685  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79671:79687  _nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79664:79687  return _nonces[owner]++ */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":79304:79706  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76689:76867  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_156:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76766:76773  bytes32 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76793:76859  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_213\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76826:76846  _domainSeparatorV4() */\n      tag_214\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76826:76844  _domainSeparatorV4 */\n      tag_113\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76826:76846  _domainSeparatorV4() */\n      jump\t// in\n    tag_214:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76848:76858  structHash */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76793:76825  MessageHashUtils.toTypedDataHash */\n      tag_215\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76793:76859  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76786:76859  return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76689:76867  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37221:37485  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_158:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37306:37313  address */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37327:37344  address recovered */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37346:37364  RecoverError error */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37366:37382  bytes32 errorArg */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37386:37411  tryRecover(hash, v, r, s) */\n      tag_217\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37397:37401  hash */\n      dup9\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37403:37404  v */\n      dup9\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37406:37407  r */\n      dup9\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37409:37410  s */\n      dup9\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37386:37396  tryRecover */\n      tag_218\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37386:37411  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37326:37411  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37422:37450  _throwError(error, errorArg) */\n      tag_219\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37434:37439  error */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37441:37449  errorArg */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37422:37433  _throwError */\n      tag_220\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37422:37450  _throwError(error, errorArg) */\n      jump\t// in\n    tag_219:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37468:37477  recovered */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37461:37477  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37221:37485  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":24948:25391  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_173:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25078:25079  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25061:25080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25061:25066  owner */\n      dup5\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25061:25080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25057:25148  if (owner == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25133:25134  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25104:25136  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25057:25148  if (owner == address(0)) {... */\n    tag_222:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25181:25182  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25162:25183  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25162:25169  spender */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25162:25183  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25158:25250  if (spender == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25235:25236  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25207:25238  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25158:25250  if (spender == address(0)) {... */\n    tag_224:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25290:25295  value */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25260:25271  _allowances */\n      0x01\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25260:25278  _allowances[owner] */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25272:25277  owner */\n      dup7\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25260:25278  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25260:25287  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25279:25286  spender */\n      dup6\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25260:25287  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25260:25295  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25310:25319  emitEvent */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25306:25384  if (emitEvent) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25357:25364  spender */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25341:25372  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25350:25355  owner */\n      dup5\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25341:25372  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25366:25371  value */\n      dup5\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25341:25372  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":25306:25384  if (emitEvent) {... */\n    tag_226:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":24948:25391  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21174:22309  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_187:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21280:21281  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21264:21282  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21264:21268  from */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21264:21282  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21260:21812  if (from == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21418:21423  value */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21402:21414  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21402:21423  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_230\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21260:21812  if (from == address(0)) {... */\n      jump(tag_232)\n    tag_229:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21456:21475  uint256 fromBalance */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21478:21487  _balances */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21478:21493  _balances[from] */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21488:21492  from */\n      dup6\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21478:21493  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21456:21493  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21526:21531  value */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21512:21523  fromBalance */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21512:21531  fromBalance < value */\n      lt\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21508:21625  if (fromBalance < value) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21584:21588  from */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21590:21601  fromBalance */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21603:21608  value */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21559:21609  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21508:21625  if (fromBalance < value) {... */\n    tag_233:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21780:21785  value */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21766:21777  fromBalance */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21766:21785  fromBalance - value */\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21748:21757  _balances */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21748:21763  _balances[from] */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21758:21762  from */\n      dup7\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21748:21763  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21748:21785  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21441:21812  {... */\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21260:21812  if (from == address(0)) {... */\n    tag_232:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21842:21843  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21828:21844  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21828:21830  to */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21828:21844  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21824:22259  if (to == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22010:22015  value */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21994:22006  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21994:22015  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21824:22259  if (to == address(0)) {... */\n      jump(tag_236)\n    tag_235:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22227:22232  value */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22210:22219  _balances */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22210:22223  _balances[to] */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22220:22222  to */\n      dup5\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22210:22223  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22210:22232  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21824:22259  if (to == address(0)) {... */\n    tag_236:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22291:22293  to */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22276:22301  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22285:22289  from */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22276:22301  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22295:22300  value */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":22276:22301  Transfer(from, to, value) */\n      mload(0x40)\n      tag_237\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":21174:22309  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75866:76047  function _buildDomainSeparator() private view returns (bytes32) {... */\n    tag_193:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75921:75928  bytes32 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":73782:73877  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75980:75991  _hashedName */\n      immutable(\"0xd7540fe9b6cfec114ef69b9a5e37f0df0cc41a7a00237e8b74bf5a92c0da8102\")\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75993:76007  _hashedVersion */\n      immutable(\"0x957b8855a729b67dc028ca49cb97b10aca21a5ff5ddcb5f61d4444c005a9b1c2\")\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76009:76022  block.chainid */\n      chainid\n        /* \"contracts/ERC20/ERC20_flatten.sol\":76032:76036  this */\n      address\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75958:76038  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      add(0x20, mload(0x40))\n      tag_239\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75948:76039  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75941:76039  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":75866:76047  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70802:71075  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_208:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70896:70909  string memory */\n      0x60\n        /* \"contracts/ERC20/ERC20_flatten.sol\":68748:68814  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70955:70972  FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70945:70950  value */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70926:70972  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      eq\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70922:71068  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_242\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70996:71011  toString(value) */\n      tag_243\n        /* \"contracts/ERC20/ERC20_flatten.sol\":71005:71010  value */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70996:71004  toString */\n      tag_244\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70996:71011  toString(value) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70989:71011  return toString(value) */\n      swap1\n      pop\n      jump(tag_241)\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70922:71068  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_242:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":71051:71056  store */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":71044:71056  return store */\n      dup1\n      sload\n      tag_246\n      swap1\n      tag_93\n      jump\t// in\n    tag_246:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_247\n      swap1\n      tag_93\n      jump\t// in\n    tag_247:\n      dup1\n      iszero\n      tag_248\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_249\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_248)\n    tag_249:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_250:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_250\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70802:71075  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_241:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62713:63123  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n    tag_215:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62806:62820  bytes32 digest */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62918:62922  0x40 */\n      0x40\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62912:62923  mload(0x40) */\n      mload\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62949:62959  hex\"19_01\" */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62944:62947  ptr */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62937:62960  mstore(ptr, hex\"19_01\") */\n      mstore\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62997:63012  domainSeparator */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62990:62994  0x02 */\n      0x02\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62985:62988  ptr */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62981:62995  add(ptr, 0x02) */\n      add\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62974:63013  mstore(add(ptr, 0x02), domainSeparator) */\n      mstore\n        /* \"contracts/ERC20/ERC20_flatten.sol\":63050:63060  structHash */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":63043:63047  0x22 */\n      0x22\n        /* \"contracts/ERC20/ERC20_flatten.sol\":63038:63041  ptr */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":63034:63048  add(ptr, 0x22) */\n      add\n        /* \"contracts/ERC20/ERC20_flatten.sol\":63027:63061  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"contracts/ERC20/ERC20_flatten.sol\":63100:63104  0x42 */\n      0x42\n        /* \"contracts/ERC20/ERC20_flatten.sol\":63095:63098  ptr */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":63085:63105  keccak256(ptr, 0x42) */\n      keccak256\n        /* \"contracts/ERC20/ERC20_flatten.sol\":63075:63105  digest := keccak256(ptr, 0x42) */\n      swap2\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62886:63116  {... */\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":62713:63123  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":35526:37082  function tryRecover(... */\n    tag_218:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":35657:35664  address */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":35666:35678  RecoverError */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":35680:35687  bytes32 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36600:36666  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36595:36596  s */\n      dup5\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36587:36597  uint256(s) */\n      0x00\n      shr\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36587:36666  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36583:36749  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36699:36700  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36703:36733  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36735:36736  s */\n      dup6\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36683:36737  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_252)\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36583:36749  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_253:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36846:36860  address signer */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36863:36887  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36873:36877  hash */\n      dup9\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36879:36880  v */\n      dup9\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36882:36883  r */\n      dup9\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36885:36886  s */\n      dup9\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36863:36887  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_254\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_257\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_257:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36846:36887  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36920:36921  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36902:36922  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36902:36908  signer */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36902:36922  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36898:37013  if (signer == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36955:36956  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36959:36988  RecoverError.InvalidSignature */\n      0x01\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36998:36999  0 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36990:37000  bytes32(0) */\n      dup1\n      shl\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36939:37001  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_252)\n        /* \"contracts/ERC20/ERC20_flatten.sol\":36898:37013  if (signer == address(0)) {... */\n    tag_258:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37033:37039  signer */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37041:37061  RecoverError.NoError */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37071:37072  0 */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37063:37073  bytes32(0) */\n      0x00\n      shl\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37025:37074  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":35526:37082  function tryRecover(... */\n    tag_252:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37623:38165  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_220:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37719:37739  RecoverError.NoError */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37710:37739  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_260\n      jumpi\n      tag_261\n      tag_262\n      jump\t// in\n    tag_261:\n    tag_260:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37710:37715  error */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37710:37739  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_263\n      jumpi\n      tag_264\n      tag_262\n      jump\t// in\n    tag_264:\n    tag_263:\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37706:38158  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37756:37763  return; */\n      tag_259\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37706:38158  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37817:37846  RecoverError.InvalidSignature */\n      0x01\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37808:37846  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_267\n      jumpi\n      tag_268\n      tag_262\n      jump\t// in\n    tag_268:\n    tag_267:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37808:37813  error */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37808:37846  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_269\n      jumpi\n      tag_270\n      tag_262\n      jump\t// in\n    tag_270:\n    tag_269:\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37804:38158  if (error == RecoverError.InvalidSignature) {... */\n      tag_271\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37870:37893  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37804:38158  if (error == RecoverError.InvalidSignature) {... */\n    tag_271:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37924:37959  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37915:37959  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_273\n      jumpi\n      tag_274\n      tag_262\n      jump\t// in\n    tag_274:\n    tag_273:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37915:37920  error */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37915:37959  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_275\n      jumpi\n      tag_276\n      tag_262\n      jump\t// in\n    tag_276:\n    tag_275:\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37911:38158  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_277\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":38019:38027  errorArg */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":38011:38028  uint256(errorArg) */\n      0x00\n      shr\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37983:38029  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37911:38158  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_277:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":38060:38090  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"contracts/ERC20/ERC20_flatten.sol\":38051:38090  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_280\n      jumpi\n      tag_281\n      tag_262\n      jump\t// in\n    tag_281:\n    tag_280:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":38051:38056  error */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":38051:38090  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_282\n      jumpi\n      tag_283\n      tag_262\n      jump\t// in\n    tag_283:\n    tag_282:\n      sub\n        /* \"contracts/ERC20/ERC20_flatten.sol\":38047:38158  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_284\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":38137:38145  errorArg */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":38114:38146  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":38047:38158  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_284:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":37623:38165  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_259:\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69457:69872  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_244:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69516:69529  string memory */\n      0x60\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69542:69553  uint256 len */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69556:69572  byteLength(sstr) */\n      tag_287\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69567:69571  sstr */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69556:69566  byteLength */\n      tag_288\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69556:69572  byteLength(sstr) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69542:69572  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69662:69679  string memory str */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69693:69695  32 */\n      0x20\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69682:69696  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_289\n      jumpi\n      tag_290\n      tag_136\n      jump\t// in\n    tag_290:\n    tag_289:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_291\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_291:\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69662:69696  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69787:69790  len */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69782:69785  str */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69775:69791  mstore(str, len) */\n      mstore\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69828:69832  sstr */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69821:69825  0x20 */\n      0x20\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69816:69819  str */\n      dup3\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69812:69826  add(str, 0x20) */\n      add\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69805:69833  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69861:69864  str */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69854:69864  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69457:69872  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69949:70200  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_288:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70010:70017  uint256 */\n      0x00\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70030:70044  uint256 result */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70083:70087  0xFF */\n      0xff\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70074:70078  sstr */\n      dup4\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70047:70080  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70047:70087  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70030:70087  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70111:70113  31 */\n      0x1f\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70102:70108  result */\n      dup2\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70102:70113  result > 31 */\n      gt\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70098:70169  if (result > 31) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70137:70157  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70098:70169  if (result > 31) {... */\n    tag_293:\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70186:70192  result */\n      dup1\n        /* \"contracts/ERC20/ERC20_flatten.sol\":70179:70192  return result */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20/ERC20_flatten.sol\":69949:70200  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_294:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_295:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_296:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_336:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_336)\n    tag_338:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_297:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_298:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_341\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_294\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":818:889   */\n      tag_342\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_295\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_343\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_296\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":988:1017   */\n      tag_344\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_297\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_26:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_346\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_298\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_300:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_302:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_303:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_352\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_302\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_304:\n        /* \"#utility.yul\":1983:2007   */\n      tag_354\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_303\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_355:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_305:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_357\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_304\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_306:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_307:\n        /* \"#utility.yul\":2339:2363   */\n      tag_360\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_306\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_361\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_361:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_308:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_363\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_307\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_29:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_366\n      tag_300\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2632:2751   */\n    tag_365:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_367\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_305\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_368\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_308\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_309:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_310:\n        /* \"#utility.yul\":3196:3217   */\n      tag_371\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_309\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_32:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_373\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_310\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_311:\n        /* \"#utility.yul\":3533:3557   */\n      tag_375\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_306\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_36:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_377\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_311\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_39:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_380\n      tag_300\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":3908:4027   */\n    tag_379:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_381\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_305\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_382\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_305\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_383\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_308\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_312:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_313:\n        /* \"#utility.yul\":4598:4620   */\n      tag_386\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_312\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_45:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_388\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_313\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4930   */\n    tag_314:\n        /* \"#utility.yul\":4890:4897   */\n      0x00\n        /* \"#utility.yul\":4919:4924   */\n      dup2\n        /* \"#utility.yul\":4908:4924   */\n      swap1\n      pop\n        /* \"#utility.yul\":4853:4930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4936:5054   */\n    tag_315:\n        /* \"#utility.yul\":5023:5047   */\n      tag_391\n        /* \"#utility.yul\":5041:5046   */\n      dup2\n        /* \"#utility.yul\":5023:5047   */\n      tag_314\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5018:5021   */\n      dup3\n        /* \"#utility.yul\":5011:5048   */\n      mstore\n        /* \"#utility.yul\":4936:5054   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5282   */\n    tag_49:\n        /* \"#utility.yul\":5153:5157   */\n      0x00\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"#utility.yul\":5180:5189   */\n      dup3\n        /* \"#utility.yul\":5176:5194   */\n      add\n        /* \"#utility.yul\":5168:5194   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5275   */\n      tag_393\n        /* \"#utility.yul\":5272:5273   */\n      0x00\n        /* \"#utility.yul\":5261:5270   */\n      dup4\n        /* \"#utility.yul\":5257:5274   */\n      add\n        /* \"#utility.yul\":5248:5254   */\n      dup5\n        /* \"#utility.yul\":5204:5275   */\n      tag_315\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5060:5282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5288:5617   */\n    tag_55:\n        /* \"#utility.yul\":5347:5353   */\n      0x00\n        /* \"#utility.yul\":5396:5398   */\n      0x20\n        /* \"#utility.yul\":5384:5393   */\n      dup3\n        /* \"#utility.yul\":5375:5382   */\n      dup5\n        /* \"#utility.yul\":5371:5394   */\n      sub\n        /* \"#utility.yul\":5367:5399   */\n      slt\n        /* \"#utility.yul\":5364:5483   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":5402:5481   */\n      tag_396\n      tag_300\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5364:5483   */\n    tag_395:\n        /* \"#utility.yul\":5522:5523   */\n      0x00\n        /* \"#utility.yul\":5547:5600   */\n      tag_397\n        /* \"#utility.yul\":5592:5599   */\n      dup5\n        /* \"#utility.yul\":5583:5589   */\n      dup3\n        /* \"#utility.yul\":5572:5581   */\n      dup6\n        /* \"#utility.yul\":5568:5590   */\n      add\n        /* \"#utility.yul\":5547:5600   */\n      tag_305\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":5537:5600   */\n      swap2\n      pop\n        /* \"#utility.yul\":5493:5610   */\n      pop\n        /* \"#utility.yul\":5288:5617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5772   */\n    tag_316:\n        /* \"#utility.yul\":5659:5666   */\n      0x00\n        /* \"#utility.yul\":5699:5765   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5692:5697   */\n      dup3\n        /* \"#utility.yul\":5688:5766   */\n      and\n        /* \"#utility.yul\":5677:5766   */\n      swap1\n      pop\n        /* \"#utility.yul\":5623:5772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5778:5893   */\n    tag_317:\n        /* \"#utility.yul\":5863:5886   */\n      tag_400\n        /* \"#utility.yul\":5880:5885   */\n      dup2\n        /* \"#utility.yul\":5863:5886   */\n      tag_316\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":5858:5861   */\n      dup3\n        /* \"#utility.yul\":5851:5887   */\n      mstore\n        /* \"#utility.yul\":5778:5893   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5899:6017   */\n    tag_318:\n        /* \"#utility.yul\":5986:6010   */\n      tag_402\n        /* \"#utility.yul\":6004:6009   */\n      dup2\n        /* \"#utility.yul\":5986:6010   */\n      tag_303\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5981:5984   */\n      dup3\n        /* \"#utility.yul\":5974:6011   */\n      mstore\n        /* \"#utility.yul\":5899:6017   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6137   */\n    tag_319:\n        /* \"#utility.yul\":6090:6096   */\n      0x00\n        /* \"#utility.yul\":6124:6129   */\n      dup2\n        /* \"#utility.yul\":6118:6130   */\n      mload\n        /* \"#utility.yul\":6108:6130   */\n      swap1\n      pop\n        /* \"#utility.yul\":6023:6137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6143:6327   */\n    tag_320:\n        /* \"#utility.yul\":6242:6253   */\n      0x00\n        /* \"#utility.yul\":6276:6282   */\n      dup3\n        /* \"#utility.yul\":6271:6274   */\n      dup3\n        /* \"#utility.yul\":6264:6283   */\n      mstore\n        /* \"#utility.yul\":6316:6320   */\n      0x20\n        /* \"#utility.yul\":6311:6314   */\n      dup3\n        /* \"#utility.yul\":6307:6321   */\n      add\n        /* \"#utility.yul\":6292:6321   */\n      swap1\n      pop\n        /* \"#utility.yul\":6143:6327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6333:6465   */\n    tag_321:\n        /* \"#utility.yul\":6400:6404   */\n      0x00\n        /* \"#utility.yul\":6423:6426   */\n      dup2\n        /* \"#utility.yul\":6415:6426   */\n      swap1\n      pop\n        /* \"#utility.yul\":6453:6457   */\n      0x20\n        /* \"#utility.yul\":6448:6451   */\n      dup3\n        /* \"#utility.yul\":6444:6458   */\n      add\n        /* \"#utility.yul\":6436:6458   */\n      swap1\n      pop\n        /* \"#utility.yul\":6333:6465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6471:6579   */\n    tag_322:\n        /* \"#utility.yul\":6548:6572   */\n      tag_407\n        /* \"#utility.yul\":6566:6571   */\n      dup2\n        /* \"#utility.yul\":6548:6572   */\n      tag_306\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":6543:6546   */\n      dup3\n        /* \"#utility.yul\":6536:6573   */\n      mstore\n        /* \"#utility.yul\":6471:6579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6585:6764   */\n    tag_323:\n        /* \"#utility.yul\":6654:6664   */\n      0x00\n        /* \"#utility.yul\":6675:6721   */\n      tag_409\n        /* \"#utility.yul\":6717:6720   */\n      dup4\n        /* \"#utility.yul\":6709:6715   */\n      dup4\n        /* \"#utility.yul\":6675:6721   */\n      tag_322\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":6753:6757   */\n      0x20\n        /* \"#utility.yul\":6748:6751   */\n      dup4\n        /* \"#utility.yul\":6744:6758   */\n      add\n        /* \"#utility.yul\":6730:6758   */\n      swap1\n      pop\n        /* \"#utility.yul\":6585:6764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6770:6883   */\n    tag_324:\n        /* \"#utility.yul\":6840:6844   */\n      0x00\n        /* \"#utility.yul\":6872:6876   */\n      0x20\n        /* \"#utility.yul\":6867:6870   */\n      dup3\n        /* \"#utility.yul\":6863:6877   */\n      add\n        /* \"#utility.yul\":6855:6877   */\n      swap1\n      pop\n        /* \"#utility.yul\":6770:6883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6919:7651   */\n    tag_325:\n        /* \"#utility.yul\":7038:7041   */\n      0x00\n        /* \"#utility.yul\":7067:7121   */\n      tag_412\n        /* \"#utility.yul\":7115:7120   */\n      dup3\n        /* \"#utility.yul\":7067:7121   */\n      tag_319\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7137:7223   */\n      tag_413\n        /* \"#utility.yul\":7216:7222   */\n      dup2\n        /* \"#utility.yul\":7211:7214   */\n      dup6\n        /* \"#utility.yul\":7137:7223   */\n      tag_320\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7130:7223   */\n      swap4\n      pop\n        /* \"#utility.yul\":7247:7303   */\n      tag_414\n        /* \"#utility.yul\":7297:7302   */\n      dup4\n        /* \"#utility.yul\":7247:7303   */\n      tag_321\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7326:7333   */\n      dup1\n        /* \"#utility.yul\":7357:7358   */\n      0x00\n        /* \"#utility.yul\":7342:7626   */\n    tag_415:\n        /* \"#utility.yul\":7367:7373   */\n      dup4\n        /* \"#utility.yul\":7364:7365   */\n      dup2\n        /* \"#utility.yul\":7361:7374   */\n      lt\n        /* \"#utility.yul\":7342:7626   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":7443:7449   */\n      dup2\n        /* \"#utility.yul\":7437:7450   */\n      mload\n        /* \"#utility.yul\":7470:7533   */\n      tag_418\n        /* \"#utility.yul\":7529:7532   */\n      dup9\n        /* \"#utility.yul\":7514:7527   */\n      dup3\n        /* \"#utility.yul\":7470:7533   */\n      tag_323\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":7463:7533   */\n      swap8\n      pop\n        /* \"#utility.yul\":7556:7616   */\n      tag_419\n        /* \"#utility.yul\":7609:7615   */\n      dup4\n        /* \"#utility.yul\":7556:7616   */\n      tag_324\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":7546:7616   */\n      swap3\n      pop\n        /* \"#utility.yul\":7402:7626   */\n      pop\n        /* \"#utility.yul\":7389:7390   */\n      0x01\n        /* \"#utility.yul\":7386:7387   */\n      dup2\n        /* \"#utility.yul\":7382:7391   */\n      add\n        /* \"#utility.yul\":7377:7391   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7626   */\n      jump(tag_415)\n    tag_417:\n        /* \"#utility.yul\":7346:7360   */\n      pop\n        /* \"#utility.yul\":7642:7645   */\n      dup6\n        /* \"#utility.yul\":7635:7645   */\n      swap4\n      pop\n        /* \"#utility.yul\":7043:7651   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6919:7651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7657:8872   */\n    tag_67:\n        /* \"#utility.yul\":8006:8010   */\n      0x00\n        /* \"#utility.yul\":8044:8047   */\n      0xe0\n        /* \"#utility.yul\":8033:8042   */\n      dup3\n        /* \"#utility.yul\":8029:8048   */\n      add\n        /* \"#utility.yul\":8021:8048   */\n      swap1\n      pop\n        /* \"#utility.yul\":8058:8127   */\n      tag_421\n        /* \"#utility.yul\":8124:8125   */\n      0x00\n        /* \"#utility.yul\":8113:8122   */\n      dup4\n        /* \"#utility.yul\":8109:8126   */\n      add\n        /* \"#utility.yul\":8100:8106   */\n      dup11\n        /* \"#utility.yul\":8058:8127   */\n      tag_317\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8174:8183   */\n      dup2\n        /* \"#utility.yul\":8168:8172   */\n      dup2\n        /* \"#utility.yul\":8164:8184   */\n      sub\n        /* \"#utility.yul\":8159:8161   */\n      0x20\n        /* \"#utility.yul\":8148:8157   */\n      dup4\n        /* \"#utility.yul\":8144:8162   */\n      add\n        /* \"#utility.yul\":8137:8185   */\n      mstore\n        /* \"#utility.yul\":8202:8280   */\n      tag_422\n        /* \"#utility.yul\":8275:8279   */\n      dup2\n        /* \"#utility.yul\":8266:8272   */\n      dup10\n        /* \"#utility.yul\":8202:8280   */\n      tag_298\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8194:8280   */\n      swap1\n      pop\n        /* \"#utility.yul\":8327:8336   */\n      dup2\n        /* \"#utility.yul\":8321:8325   */\n      dup2\n        /* \"#utility.yul\":8317:8337   */\n      sub\n        /* \"#utility.yul\":8312:8314   */\n      0x40\n        /* \"#utility.yul\":8301:8310   */\n      dup4\n        /* \"#utility.yul\":8297:8315   */\n      add\n        /* \"#utility.yul\":8290:8338   */\n      mstore\n        /* \"#utility.yul\":8355:8433   */\n      tag_423\n        /* \"#utility.yul\":8428:8432   */\n      dup2\n        /* \"#utility.yul\":8419:8425   */\n      dup9\n        /* \"#utility.yul\":8355:8433   */\n      tag_298\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8347:8433   */\n      swap1\n      pop\n        /* \"#utility.yul\":8443:8515   */\n      tag_424\n        /* \"#utility.yul\":8511:8513   */\n      0x60\n        /* \"#utility.yul\":8500:8509   */\n      dup4\n        /* \"#utility.yul\":8496:8514   */\n      add\n        /* \"#utility.yul\":8487:8493   */\n      dup8\n        /* \"#utility.yul\":8443:8515   */\n      tag_311\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":8525:8598   */\n      tag_425\n        /* \"#utility.yul\":8593:8596   */\n      0x80\n        /* \"#utility.yul\":8582:8591   */\n      dup4\n        /* \"#utility.yul\":8578:8597   */\n      add\n        /* \"#utility.yul\":8569:8575   */\n      dup7\n        /* \"#utility.yul\":8525:8598   */\n      tag_318\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8608:8681   */\n      tag_426\n        /* \"#utility.yul\":8676:8679   */\n      0xa0\n        /* \"#utility.yul\":8665:8674   */\n      dup4\n        /* \"#utility.yul\":8661:8680   */\n      add\n        /* \"#utility.yul\":8652:8658   */\n      dup6\n        /* \"#utility.yul\":8608:8681   */\n      tag_315\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8729:8738   */\n      dup2\n        /* \"#utility.yul\":8723:8727   */\n      dup2\n        /* \"#utility.yul\":8719:8739   */\n      sub\n        /* \"#utility.yul\":8713:8716   */\n      0xc0\n        /* \"#utility.yul\":8702:8711   */\n      dup4\n        /* \"#utility.yul\":8698:8717   */\n      add\n        /* \"#utility.yul\":8691:8740   */\n      mstore\n        /* \"#utility.yul\":8757:8865   */\n      tag_427\n        /* \"#utility.yul\":8860:8864   */\n      dup2\n        /* \"#utility.yul\":8851:8857   */\n      dup5\n        /* \"#utility.yul\":8757:8865   */\n      tag_325\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":8749:8865   */\n      swap1\n      pop\n        /* \"#utility.yul\":7657:8872   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:9100   */\n    tag_71:\n        /* \"#utility.yul\":8971:8975   */\n      0x00\n        /* \"#utility.yul\":9009:9011   */\n      0x20\n        /* \"#utility.yul\":8998:9007   */\n      dup3\n        /* \"#utility.yul\":8994:9012   */\n      add\n        /* \"#utility.yul\":8986:9012   */\n      swap1\n      pop\n        /* \"#utility.yul\":9022:9093   */\n      tag_429\n        /* \"#utility.yul\":9090:9091   */\n      0x00\n        /* \"#utility.yul\":9079:9088   */\n      dup4\n        /* \"#utility.yul\":9075:9092   */\n      add\n        /* \"#utility.yul\":9066:9072   */\n      dup5\n        /* \"#utility.yul\":9022:9093   */\n      tag_318\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":8878:9100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9106:9224   */\n    tag_326:\n        /* \"#utility.yul\":9177:9199   */\n      tag_431\n        /* \"#utility.yul\":9193:9198   */\n      dup2\n        /* \"#utility.yul\":9177:9199   */\n      tag_312\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9170:9175   */\n      dup2\n        /* \"#utility.yul\":9167:9200   */\n      eq\n        /* \"#utility.yul\":9157:9218   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":9214:9215   */\n      0x00\n        /* \"#utility.yul\":9211:9212   */\n      dup1\n        /* \"#utility.yul\":9204:9216   */\n      revert\n        /* \"#utility.yul\":9157:9218   */\n    tag_432:\n        /* \"#utility.yul\":9106:9224   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9230:9365   */\n    tag_327:\n        /* \"#utility.yul\":9274:9279   */\n      0x00\n        /* \"#utility.yul\":9312:9318   */\n      dup2\n        /* \"#utility.yul\":9299:9319   */\n      calldataload\n        /* \"#utility.yul\":9290:9319   */\n      swap1\n      pop\n        /* \"#utility.yul\":9328:9359   */\n      tag_434\n        /* \"#utility.yul\":9353:9358   */\n      dup2\n        /* \"#utility.yul\":9328:9359   */\n      tag_326\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9230:9365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9371:9493   */\n    tag_328:\n        /* \"#utility.yul\":9444:9468   */\n      tag_436\n        /* \"#utility.yul\":9462:9467   */\n      dup2\n        /* \"#utility.yul\":9444:9468   */\n      tag_314\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9437:9442   */\n      dup2\n        /* \"#utility.yul\":9434:9469   */\n      eq\n        /* \"#utility.yul\":9424:9487   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":9483:9484   */\n      0x00\n        /* \"#utility.yul\":9480:9481   */\n      dup1\n        /* \"#utility.yul\":9473:9485   */\n      revert\n        /* \"#utility.yul\":9424:9487   */\n    tag_437:\n        /* \"#utility.yul\":9371:9493   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9499:9638   */\n    tag_329:\n        /* \"#utility.yul\":9545:9550   */\n      0x00\n        /* \"#utility.yul\":9583:9589   */\n      dup2\n        /* \"#utility.yul\":9570:9590   */\n      calldataload\n        /* \"#utility.yul\":9561:9590   */\n      swap1\n      pop\n        /* \"#utility.yul\":9599:9632   */\n      tag_439\n        /* \"#utility.yul\":9626:9631   */\n      dup2\n        /* \"#utility.yul\":9599:9632   */\n      tag_328\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":9499:9638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9644:10843   */\n    tag_81:\n        /* \"#utility.yul\":9755:9761   */\n      0x00\n        /* \"#utility.yul\":9763:9769   */\n      dup1\n        /* \"#utility.yul\":9771:9777   */\n      0x00\n        /* \"#utility.yul\":9779:9785   */\n      dup1\n        /* \"#utility.yul\":9787:9793   */\n      0x00\n        /* \"#utility.yul\":9795:9801   */\n      dup1\n        /* \"#utility.yul\":9803:9809   */\n      0x00\n        /* \"#utility.yul\":9852:9855   */\n      0xe0\n        /* \"#utility.yul\":9840:9849   */\n      dup9\n        /* \"#utility.yul\":9831:9838   */\n      dup11\n        /* \"#utility.yul\":9827:9850   */\n      sub\n        /* \"#utility.yul\":9823:9856   */\n      slt\n        /* \"#utility.yul\":9820:9940   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":9859:9938   */\n      tag_442\n      tag_300\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":9820:9940   */\n    tag_441:\n        /* \"#utility.yul\":9979:9980   */\n      0x00\n        /* \"#utility.yul\":10004:10057   */\n      tag_443\n        /* \"#utility.yul\":10049:10056   */\n      dup11\n        /* \"#utility.yul\":10040:10046   */\n      dup3\n        /* \"#utility.yul\":10029:10038   */\n      dup12\n        /* \"#utility.yul\":10025:10047   */\n      add\n        /* \"#utility.yul\":10004:10057   */\n      tag_305\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":9994:10057   */\n      swap8\n      pop\n        /* \"#utility.yul\":9950:10067   */\n      pop\n        /* \"#utility.yul\":10106:10108   */\n      0x20\n        /* \"#utility.yul\":10132:10185   */\n      tag_444\n        /* \"#utility.yul\":10177:10184   */\n      dup11\n        /* \"#utility.yul\":10168:10174   */\n      dup3\n        /* \"#utility.yul\":10157:10166   */\n      dup12\n        /* \"#utility.yul\":10153:10175   */\n      add\n        /* \"#utility.yul\":10132:10185   */\n      tag_305\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10122:10185   */\n      swap7\n      pop\n        /* \"#utility.yul\":10077:10195   */\n      pop\n        /* \"#utility.yul\":10234:10236   */\n      0x40\n        /* \"#utility.yul\":10260:10313   */\n      tag_445\n        /* \"#utility.yul\":10305:10312   */\n      dup11\n        /* \"#utility.yul\":10296:10302   */\n      dup3\n        /* \"#utility.yul\":10285:10294   */\n      dup12\n        /* \"#utility.yul\":10281:10303   */\n      add\n        /* \"#utility.yul\":10260:10313   */\n      tag_308\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10250:10313   */\n      swap6\n      pop\n        /* \"#utility.yul\":10205:10323   */\n      pop\n        /* \"#utility.yul\":10362:10364   */\n      0x60\n        /* \"#utility.yul\":10388:10441   */\n      tag_446\n        /* \"#utility.yul\":10433:10440   */\n      dup11\n        /* \"#utility.yul\":10424:10430   */\n      dup3\n        /* \"#utility.yul\":10413:10422   */\n      dup12\n        /* \"#utility.yul\":10409:10431   */\n      add\n        /* \"#utility.yul\":10388:10441   */\n      tag_308\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10378:10441   */\n      swap5\n      pop\n        /* \"#utility.yul\":10333:10451   */\n      pop\n        /* \"#utility.yul\":10490:10493   */\n      0x80\n        /* \"#utility.yul\":10517:10568   */\n      tag_447\n        /* \"#utility.yul\":10560:10567   */\n      dup11\n        /* \"#utility.yul\":10551:10557   */\n      dup3\n        /* \"#utility.yul\":10540:10549   */\n      dup12\n        /* \"#utility.yul\":10536:10558   */\n      add\n        /* \"#utility.yul\":10517:10568   */\n      tag_327\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":10507:10568   */\n      swap4\n      pop\n        /* \"#utility.yul\":10461:10578   */\n      pop\n        /* \"#utility.yul\":10617:10620   */\n      0xa0\n        /* \"#utility.yul\":10644:10697   */\n      tag_448\n        /* \"#utility.yul\":10689:10696   */\n      dup11\n        /* \"#utility.yul\":10680:10686   */\n      dup3\n        /* \"#utility.yul\":10669:10678   */\n      dup12\n        /* \"#utility.yul\":10665:10687   */\n      add\n        /* \"#utility.yul\":10644:10697   */\n      tag_329\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":10634:10697   */\n      swap3\n      pop\n        /* \"#utility.yul\":10588:10707   */\n      pop\n        /* \"#utility.yul\":10746:10749   */\n      0xc0\n        /* \"#utility.yul\":10773:10826   */\n      tag_449\n        /* \"#utility.yul\":10818:10825   */\n      dup11\n        /* \"#utility.yul\":10809:10815   */\n      dup3\n        /* \"#utility.yul\":10798:10807   */\n      dup12\n        /* \"#utility.yul\":10794:10816   */\n      add\n        /* \"#utility.yul\":10773:10826   */\n      tag_329\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":10763:10826   */\n      swap2\n      pop\n        /* \"#utility.yul\":10717:10836   */\n      pop\n        /* \"#utility.yul\":9644:10843   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10849:11323   */\n    tag_85:\n        /* \"#utility.yul\":10917:10923   */\n      0x00\n        /* \"#utility.yul\":10925:10931   */\n      dup1\n        /* \"#utility.yul\":10974:10976   */\n      0x40\n        /* \"#utility.yul\":10962:10971   */\n      dup4\n        /* \"#utility.yul\":10953:10960   */\n      dup6\n        /* \"#utility.yul\":10949:10972   */\n      sub\n        /* \"#utility.yul\":10945:10977   */\n      slt\n        /* \"#utility.yul\":10942:11061   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":10980:11059   */\n      tag_452\n      tag_300\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":10942:11061   */\n    tag_451:\n        /* \"#utility.yul\":11100:11101   */\n      0x00\n        /* \"#utility.yul\":11125:11178   */\n      tag_453\n        /* \"#utility.yul\":11170:11177   */\n      dup6\n        /* \"#utility.yul\":11161:11167   */\n      dup3\n        /* \"#utility.yul\":11150:11159   */\n      dup7\n        /* \"#utility.yul\":11146:11168   */\n      add\n        /* \"#utility.yul\":11125:11178   */\n      tag_305\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11115:11178   */\n      swap3\n      pop\n        /* \"#utility.yul\":11071:11188   */\n      pop\n        /* \"#utility.yul\":11227:11229   */\n      0x20\n        /* \"#utility.yul\":11253:11306   */\n      tag_454\n        /* \"#utility.yul\":11298:11305   */\n      dup6\n        /* \"#utility.yul\":11289:11295   */\n      dup3\n        /* \"#utility.yul\":11278:11287   */\n      dup7\n        /* \"#utility.yul\":11274:11296   */\n      add\n        /* \"#utility.yul\":11253:11306   */\n      tag_305\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":11243:11306   */\n      swap2\n      pop\n        /* \"#utility.yul\":11198:11316   */\n      pop\n        /* \"#utility.yul\":10849:11323   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11329:11509   */\n    tag_330:\n        /* \"#utility.yul\":11377:11454   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11374:11375   */\n      0x00\n        /* \"#utility.yul\":11367:11455   */\n      mstore\n        /* \"#utility.yul\":11474:11478   */\n      0x22\n        /* \"#utility.yul\":11471:11472   */\n      0x04\n        /* \"#utility.yul\":11464:11479   */\n      mstore\n        /* \"#utility.yul\":11498:11502   */\n      0x24\n        /* \"#utility.yul\":11495:11496   */\n      0x00\n        /* \"#utility.yul\":11488:11503   */\n      revert\n        /* \"#utility.yul\":11515:11835   */\n    tag_93:\n        /* \"#utility.yul\":11559:11565   */\n      0x00\n        /* \"#utility.yul\":11596:11597   */\n      0x02\n        /* \"#utility.yul\":11590:11594   */\n      dup3\n        /* \"#utility.yul\":11586:11598   */\n      div\n        /* \"#utility.yul\":11576:11598   */\n      swap1\n      pop\n        /* \"#utility.yul\":11643:11644   */\n      0x01\n        /* \"#utility.yul\":11637:11641   */\n      dup3\n        /* \"#utility.yul\":11633:11645   */\n      and\n        /* \"#utility.yul\":11664:11682   */\n      dup1\n        /* \"#utility.yul\":11654:11735   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":11720:11724   */\n      0x7f\n        /* \"#utility.yul\":11712:11718   */\n      dup3\n        /* \"#utility.yul\":11708:11725   */\n      and\n        /* \"#utility.yul\":11698:11725   */\n      swap2\n      pop\n        /* \"#utility.yul\":11654:11735   */\n    tag_457:\n        /* \"#utility.yul\":11782:11784   */\n      0x20\n        /* \"#utility.yul\":11774:11780   */\n      dup3\n        /* \"#utility.yul\":11771:11785   */\n      lt\n        /* \"#utility.yul\":11751:11769   */\n      dup2\n        /* \"#utility.yul\":11748:11786   */\n      sub\n        /* \"#utility.yul\":11745:11829   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":11801:11819   */\n      tag_459\n      tag_330\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":11745:11829   */\n    tag_458:\n        /* \"#utility.yul\":11566:11835   */\n      pop\n        /* \"#utility.yul\":11515:11835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11841:12021   */\n    tag_136:\n        /* \"#utility.yul\":11889:11966   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11886:11887   */\n      0x00\n        /* \"#utility.yul\":11879:11967   */\n      mstore\n        /* \"#utility.yul\":11986:11990   */\n      0x41\n        /* \"#utility.yul\":11983:11984   */\n      0x04\n        /* \"#utility.yul\":11976:11991   */\n      mstore\n        /* \"#utility.yul\":12010:12014   */\n      0x24\n        /* \"#utility.yul\":12007:12008   */\n      0x00\n        /* \"#utility.yul\":12000:12015   */\n      revert\n        /* \"#utility.yul\":12027:12802   */\n    tag_154:\n        /* \"#utility.yul\":12260:12264   */\n      0x00\n        /* \"#utility.yul\":12298:12301   */\n      0xc0\n        /* \"#utility.yul\":12287:12296   */\n      dup3\n        /* \"#utility.yul\":12283:12302   */\n      add\n        /* \"#utility.yul\":12275:12302   */\n      swap1\n      pop\n        /* \"#utility.yul\":12312:12383   */\n      tag_462\n        /* \"#utility.yul\":12380:12381   */\n      0x00\n        /* \"#utility.yul\":12369:12378   */\n      dup4\n        /* \"#utility.yul\":12365:12382   */\n      add\n        /* \"#utility.yul\":12356:12362   */\n      dup10\n        /* \"#utility.yul\":12312:12383   */\n      tag_315\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":12393:12465   */\n      tag_463\n        /* \"#utility.yul\":12461:12463   */\n      0x20\n        /* \"#utility.yul\":12450:12459   */\n      dup4\n        /* \"#utility.yul\":12446:12464   */\n      add\n        /* \"#utility.yul\":12437:12443   */\n      dup9\n        /* \"#utility.yul\":12393:12465   */\n      tag_318\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":12475:12547   */\n      tag_464\n        /* \"#utility.yul\":12543:12545   */\n      0x40\n        /* \"#utility.yul\":12532:12541   */\n      dup4\n        /* \"#utility.yul\":12528:12546   */\n      add\n        /* \"#utility.yul\":12519:12525   */\n      dup8\n        /* \"#utility.yul\":12475:12547   */\n      tag_318\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":12557:12629   */\n      tag_465\n        /* \"#utility.yul\":12625:12627   */\n      0x60\n        /* \"#utility.yul\":12614:12623   */\n      dup4\n        /* \"#utility.yul\":12610:12628   */\n      add\n        /* \"#utility.yul\":12601:12607   */\n      dup7\n        /* \"#utility.yul\":12557:12629   */\n      tag_311\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":12639:12712   */\n      tag_466\n        /* \"#utility.yul\":12707:12710   */\n      0x80\n        /* \"#utility.yul\":12696:12705   */\n      dup4\n        /* \"#utility.yul\":12692:12711   */\n      add\n        /* \"#utility.yul\":12683:12689   */\n      dup6\n        /* \"#utility.yul\":12639:12712   */\n      tag_311\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":12722:12795   */\n      tag_467\n        /* \"#utility.yul\":12790:12793   */\n      0xa0\n        /* \"#utility.yul\":12779:12788   */\n      dup4\n        /* \"#utility.yul\":12775:12794   */\n      add\n        /* \"#utility.yul\":12766:12772   */\n      dup5\n        /* \"#utility.yul\":12722:12795   */\n      tag_311\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12027:12802   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12808:13140   */\n    tag_161:\n        /* \"#utility.yul\":12929:12933   */\n      0x00\n        /* \"#utility.yul\":12967:12969   */\n      0x40\n        /* \"#utility.yul\":12956:12965   */\n      dup3\n        /* \"#utility.yul\":12952:12970   */\n      add\n        /* \"#utility.yul\":12944:12970   */\n      swap1\n      pop\n        /* \"#utility.yul\":12980:13051   */\n      tag_469\n        /* \"#utility.yul\":13048:13049   */\n      0x00\n        /* \"#utility.yul\":13037:13046   */\n      dup4\n        /* \"#utility.yul\":13033:13050   */\n      add\n        /* \"#utility.yul\":13024:13030   */\n      dup6\n        /* \"#utility.yul\":12980:13051   */\n      tag_318\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13061:13133   */\n      tag_470\n        /* \"#utility.yul\":13129:13131   */\n      0x20\n        /* \"#utility.yul\":13118:13127   */\n      dup4\n        /* \"#utility.yul\":13114:13132   */\n      add\n        /* \"#utility.yul\":13105:13111   */\n      dup5\n        /* \"#utility.yul\":13061:13133   */\n      tag_318\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":12808:13140   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13146:13588   */\n    tag_179:\n        /* \"#utility.yul\":13295:13299   */\n      0x00\n        /* \"#utility.yul\":13333:13335   */\n      0x60\n        /* \"#utility.yul\":13322:13331   */\n      dup3\n        /* \"#utility.yul\":13318:13336   */\n      add\n        /* \"#utility.yul\":13310:13336   */\n      swap1\n      pop\n        /* \"#utility.yul\":13346:13417   */\n      tag_472\n        /* \"#utility.yul\":13414:13415   */\n      0x00\n        /* \"#utility.yul\":13403:13412   */\n      dup4\n        /* \"#utility.yul\":13399:13416   */\n      add\n        /* \"#utility.yul\":13390:13396   */\n      dup7\n        /* \"#utility.yul\":13346:13417   */\n      tag_318\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":13427:13499   */\n      tag_473\n        /* \"#utility.yul\":13495:13497   */\n      0x20\n        /* \"#utility.yul\":13484:13493   */\n      dup4\n        /* \"#utility.yul\":13480:13498   */\n      add\n        /* \"#utility.yul\":13471:13477   */\n      dup6\n        /* \"#utility.yul\":13427:13499   */\n      tag_311\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":13509:13581   */\n      tag_474\n        /* \"#utility.yul\":13577:13579   */\n      0x40\n        /* \"#utility.yul\":13566:13575   */\n      dup4\n        /* \"#utility.yul\":13562:13580   */\n      add\n        /* \"#utility.yul\":13553:13559   */\n      dup5\n        /* \"#utility.yul\":13509:13581   */\n      tag_311\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":13146:13588   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13594:13774   */\n    tag_331:\n        /* \"#utility.yul\":13642:13719   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13639:13640   */\n      0x00\n        /* \"#utility.yul\":13632:13720   */\n      mstore\n        /* \"#utility.yul\":13739:13743   */\n      0x11\n        /* \"#utility.yul\":13736:13737   */\n      0x04\n        /* \"#utility.yul\":13729:13744   */\n      mstore\n        /* \"#utility.yul\":13763:13767   */\n      0x24\n        /* \"#utility.yul\":13760:13761   */\n      0x00\n        /* \"#utility.yul\":13753:13768   */\n      revert\n        /* \"#utility.yul\":13780:13971   */\n    tag_231:\n        /* \"#utility.yul\":13820:13823   */\n      0x00\n        /* \"#utility.yul\":13839:13859   */\n      tag_477\n        /* \"#utility.yul\":13857:13858   */\n      dup3\n        /* \"#utility.yul\":13839:13859   */\n      tag_306\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":13834:13859   */\n      swap2\n      pop\n        /* \"#utility.yul\":13873:13893   */\n      tag_478\n        /* \"#utility.yul\":13891:13892   */\n      dup4\n        /* \"#utility.yul\":13873:13893   */\n      tag_306\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":13868:13893   */\n      swap3\n      pop\n        /* \"#utility.yul\":13916:13917   */\n      dup3\n        /* \"#utility.yul\":13913:13914   */\n      dup3\n        /* \"#utility.yul\":13909:13918   */\n      add\n        /* \"#utility.yul\":13902:13918   */\n      swap1\n      pop\n        /* \"#utility.yul\":13937:13940   */\n      dup1\n        /* \"#utility.yul\":13934:13935   */\n      dup3\n        /* \"#utility.yul\":13931:13941   */\n      gt\n        /* \"#utility.yul\":13928:13964   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":13944:13962   */\n      tag_480\n      tag_331\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":13928:13964   */\n    tag_479:\n        /* \"#utility.yul\":13780:13971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13977:14641   */\n    tag_240:\n        /* \"#utility.yul\":14182:14186   */\n      0x00\n        /* \"#utility.yul\":14220:14223   */\n      0xa0\n        /* \"#utility.yul\":14209:14218   */\n      dup3\n        /* \"#utility.yul\":14205:14224   */\n      add\n        /* \"#utility.yul\":14197:14224   */\n      swap1\n      pop\n        /* \"#utility.yul\":14234:14305   */\n      tag_482\n        /* \"#utility.yul\":14302:14303   */\n      0x00\n        /* \"#utility.yul\":14291:14300   */\n      dup4\n        /* \"#utility.yul\":14287:14304   */\n      add\n        /* \"#utility.yul\":14278:14284   */\n      dup9\n        /* \"#utility.yul\":14234:14305   */\n      tag_315\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":14315:14387   */\n      tag_483\n        /* \"#utility.yul\":14383:14385   */\n      0x20\n        /* \"#utility.yul\":14372:14381   */\n      dup4\n        /* \"#utility.yul\":14368:14386   */\n      add\n        /* \"#utility.yul\":14359:14365   */\n      dup8\n        /* \"#utility.yul\":14315:14387   */\n      tag_315\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":14397:14469   */\n      tag_484\n        /* \"#utility.yul\":14465:14467   */\n      0x40\n        /* \"#utility.yul\":14454:14463   */\n      dup4\n        /* \"#utility.yul\":14450:14468   */\n      add\n        /* \"#utility.yul\":14441:14447   */\n      dup7\n        /* \"#utility.yul\":14397:14469   */\n      tag_315\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":14479:14551   */\n      tag_485\n        /* \"#utility.yul\":14547:14549   */\n      0x60\n        /* \"#utility.yul\":14536:14545   */\n      dup4\n        /* \"#utility.yul\":14532:14550   */\n      add\n        /* \"#utility.yul\":14523:14529   */\n      dup6\n        /* \"#utility.yul\":14479:14551   */\n      tag_311\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":14561:14634   */\n      tag_486\n        /* \"#utility.yul\":14629:14632   */\n      0x80\n        /* \"#utility.yul\":14618:14627   */\n      dup4\n        /* \"#utility.yul\":14614:14633   */\n      add\n        /* \"#utility.yul\":14605:14611   */\n      dup5\n        /* \"#utility.yul\":14561:14634   */\n      tag_318\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":13977:14641   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14647:15192   */\n    tag_255:\n        /* \"#utility.yul\":14820:14824   */\n      0x00\n        /* \"#utility.yul\":14858:14861   */\n      0x80\n        /* \"#utility.yul\":14847:14856   */\n      dup3\n        /* \"#utility.yul\":14843:14862   */\n      add\n        /* \"#utility.yul\":14835:14862   */\n      swap1\n      pop\n        /* \"#utility.yul\":14872:14943   */\n      tag_488\n        /* \"#utility.yul\":14940:14941   */\n      0x00\n        /* \"#utility.yul\":14929:14938   */\n      dup4\n        /* \"#utility.yul\":14925:14942   */\n      add\n        /* \"#utility.yul\":14916:14922   */\n      dup8\n        /* \"#utility.yul\":14872:14943   */\n      tag_315\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":14953:15021   */\n      tag_489\n        /* \"#utility.yul\":15017:15019   */\n      0x20\n        /* \"#utility.yul\":15006:15015   */\n      dup4\n        /* \"#utility.yul\":15002:15020   */\n      add\n        /* \"#utility.yul\":14993:14999   */\n      dup7\n        /* \"#utility.yul\":14953:15021   */\n      tag_313\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":15031:15103   */\n      tag_490\n        /* \"#utility.yul\":15099:15101   */\n      0x40\n        /* \"#utility.yul\":15088:15097   */\n      dup4\n        /* \"#utility.yul\":15084:15102   */\n      add\n        /* \"#utility.yul\":15075:15081   */\n      dup6\n        /* \"#utility.yul\":15031:15103   */\n      tag_315\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":15113:15185   */\n      tag_491\n        /* \"#utility.yul\":15181:15183   */\n      0x60\n        /* \"#utility.yul\":15170:15179   */\n      dup4\n        /* \"#utility.yul\":15166:15184   */\n      add\n        /* \"#utility.yul\":15157:15163   */\n      dup5\n        /* \"#utility.yul\":15113:15185   */\n      tag_315\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":14647:15192   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15198:15378   */\n    tag_262:\n        /* \"#utility.yul\":15246:15323   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15243:15244   */\n      0x00\n        /* \"#utility.yul\":15236:15324   */\n      mstore\n        /* \"#utility.yul\":15343:15347   */\n      0x21\n        /* \"#utility.yul\":15340:15341   */\n      0x04\n        /* \"#utility.yul\":15333:15348   */\n      mstore\n        /* \"#utility.yul\":15367:15371   */\n      0x24\n        /* \"#utility.yul\":15364:15365   */\n      0x00\n        /* \"#utility.yul\":15357:15372   */\n      revert\n\n    auxdata: 0xa2646970667358221220248be0e498ad7e6bb902218b0faefe6c2a92cfe002cdf7c1059b210a9eb9135d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3212": {
									"entryPoint": null,
									"id": 3212,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3447": {
									"entryPoint": null,
									"id": 3447,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3580": {
									"entryPoint": null,
									"id": 3580,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_453": {
									"entryPoint": null,
									"id": 453,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_3259": {
									"entryPoint": 898,
									"id": 3259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_756": {
									"entryPoint": 990,
									"id": 756,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_173": {
									"entryPoint": 618,
									"id": 173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_723": {
									"entryPoint": 1243,
									"id": 723,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getStringSlot_2886": {
									"entryPoint": 1234,
									"id": 2886,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_3064": {
									"entryPoint": 813,
									"id": 3064,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_2966": {
									"entryPoint": 1128,
									"id": 2966,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3292,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 2768,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2252,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 3078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3189,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 3056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10100:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5279:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5289:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5300:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5261:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5271:7:1",
														"type": ""
													}
												],
												"src": "5234:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5411:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5421:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5432:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5403:7:1",
														"type": ""
													}
												],
												"src": "5366:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5533:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5521:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5528:3:1",
														"type": ""
													}
												],
												"src": "5468:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5690:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5700:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5708:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5736:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5662:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5674:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5685:4:1",
														"type": ""
													}
												],
												"src": "5592:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5865:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5875:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5886:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5875:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5847:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5857:7:1",
														"type": ""
													}
												],
												"src": "5820:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5968:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5985:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6008:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5990:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5990:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5978:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5978:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5978:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5956:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5963:3:1",
														"type": ""
													}
												],
												"src": "5903:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6092:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6109:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6132:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6114:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6114:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6102:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6102:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6102:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6080:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6087:3:1",
														"type": ""
													}
												],
												"src": "6027:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6361:454:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6371:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6383:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6394:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6379:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6379:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6371:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6452:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6465:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6476:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6461:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6461:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6408:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6408:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6408:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6533:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6546:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6557:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6542:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6489:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6489:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6489:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6615:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6628:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6639:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6624:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6624:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6571:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6571:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6571:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6697:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6710:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6721:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6706:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6706:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6653:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6653:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6653:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6779:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6792:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6803:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6788:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6788:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6735:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6735:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6735:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6301:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6313:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6321:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6329:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6337:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6345:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6356:4:1",
														"type": ""
													}
												],
												"src": "6151:664:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6917:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6934:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6939:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6927:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6927:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6955:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6974:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6979:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6970:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6955:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6889:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6894:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6905:11:1",
														"type": ""
													}
												],
												"src": "6821:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7058:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7068:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7077:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7072:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7137:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7162:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7167:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7158:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7158:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "7181:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7186:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7177:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7177:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7171:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7171:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7151:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7151:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7151:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7098:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7101:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7095:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7095:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7109:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7111:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7120:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7123:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7116:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7116:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7111:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7091:3:1",
																"statements": []
															},
															"src": "7087:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7220:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7225:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7216:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7234:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7209:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7209:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7209:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7040:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7045:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7050:6:1",
														"type": ""
													}
												],
												"src": "6996:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7296:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7306:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7324:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7331:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7320:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7340:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7336:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7336:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7316:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7316:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7306:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7279:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7289:6:1",
														"type": ""
													}
												],
												"src": "7248:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7448:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7458:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7505:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7472:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7472:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7462:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7520:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7586:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7591:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7527:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7527:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7520:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7646:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7653:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7642:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7642:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7660:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7665:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7607:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7607:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7607:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7681:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7692:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7719:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7697:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7697:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7688:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7681:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7429:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7436:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7444:3:1",
														"type": ""
													}
												],
												"src": "7356:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7867:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7875:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7914:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7925:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7910:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7910:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7933:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7939:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7929:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7929:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7903:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7903:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7959:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8031:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8040:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7967:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7967:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7959:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7829:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7841:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7852:4:1",
														"type": ""
													}
												],
												"src": "7739:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8116:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8127:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8143:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8137:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8137:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8127:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8099:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8109:6:1",
														"type": ""
													}
												],
												"src": "8058:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8218:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8228:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "8236:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8228:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8249:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8261:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8266:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8257:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8257:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8249:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8205:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8213:4:1",
														"type": ""
													}
												],
												"src": "8162:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:99:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8350:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "8387:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8381:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8381:10:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "8363:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8363:29:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8354:5:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8402:29:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8426:5:1"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "8402:11:1"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8319:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nodeType": "YulTypedName",
														"src": "8327:11:1",
														"type": ""
													}
												],
												"src": "8284:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8534:504:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8545:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8591:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8559:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8559:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8549:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8606:21:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "8622:5:1"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nodeType": "YulTypedName",
																	"src": "8610:8:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8637:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8683:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8649:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8649:40:1"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nodeType": "YulIdentifier",
																	"src": "8637:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8699:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nodeType": "YulIdentifier",
																		"src": "8734:8:1"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "8708:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8708:35:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8699:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8771:260:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8785:236:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "8815:5:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8882:1:1",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8889:2:1",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nodeType": "YulIdentifier",
																											"src": "8893:6:1"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "8885:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8885:15:1"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "8878:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8878:23:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8923:66:1",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nodeType": "YulIdentifier",
																						"src": "8838:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8838:169:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8794:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8794:227:1"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8785:5:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8759:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8767:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8756:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8756:14:1"
															},
															"nodeType": "YulIf",
															"src": "8753:278:1"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8518:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8528:5:1",
														"type": ""
													}
												],
												"src": "8444:594:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9072:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9089:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9092:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9082:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9082:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9082:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9186:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9189:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9179:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9179:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9179:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9213:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9203:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9203:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9044:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9274:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9284:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9307:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9289:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9289:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9284:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9318:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9341:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9323:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9323:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9318:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9352:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9363:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9366:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9359:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9359:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9352:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9392:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9394:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9394:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9394:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9384:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9387:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9381:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9381:10:1"
															},
															"nodeType": "YulIf",
															"src": "9378:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9261:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9264:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9270:3:1",
														"type": ""
													}
												],
												"src": "9230:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9581:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9591:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9603:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9614:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9599:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9599:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9591:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9671:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9684:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9695:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9680:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9680:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9627:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9627:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9627:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9752:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9765:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9776:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9761:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9708:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9708:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9708:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9834:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9847:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9858:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9843:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9843:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9790:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9790:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9790:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9537:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9549:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9557:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9565:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9576:4:1",
														"type": ""
													}
												],
												"src": "9427:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9973:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9983:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9995:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10006:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9991:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9991:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9983:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10063:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10076:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10087:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10072:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10072:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10019:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10019:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10019:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9945:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9957:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9968:4:1",
														"type": ""
													}
												],
												"src": "9875:222:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xFD SWAP2 SWAP1 PUSH3 0x963 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x10F SWAP2 SWAP1 PUSH3 0x963 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x185 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17C SWAP2 SWAP1 PUSH3 0xA8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x196 DUP2 PUSH3 0x26A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1AD PUSH1 0x6 DUP4 PUSH3 0x32D PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x1CB PUSH1 0x7 DUP3 PUSH3 0x32D PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x20A PUSH3 0x382 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x264 CALLER PUSH10 0xD3C21BCECCEDA1000000 PUSH3 0x3DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xD32 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x352 JUMPI PUSH3 0x34A DUP4 PUSH3 0x468 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x37C JUMP JUMPDEST DUP3 PUSH3 0x364 DUP4 PUSH3 0x4D2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH3 0x374 SWAP2 SWAP1 PUSH3 0x963 JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x3C3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x451 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x448 SWAP2 SWAP1 PUSH3 0xA8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x464 PUSH0 DUP4 DUP4 PUSH3 0x4DB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x4B7 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4AE SWAP2 SWAP1 PUSH3 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x4C5 SWAP1 PUSH3 0xC06 JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x52F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x522 SWAP2 SWAP1 PUSH3 0xCA2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x600 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x5BB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5B2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xCDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x649 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x693 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x6F2 SWAP2 SWAP1 PUSH3 0xD17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x77B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x791 JUMPI PUSH3 0x790 PUSH3 0x736 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x7F5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x7B8 JUMP JUMPDEST PUSH3 0x801 DUP7 DUP4 PUSH3 0x7B8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x84B PUSH3 0x845 PUSH3 0x83F DUP5 PUSH3 0x819 JUMP JUMPDEST PUSH3 0x822 JUMP JUMPDEST PUSH3 0x819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x866 DUP4 PUSH3 0x82B JUMP JUMPDEST PUSH3 0x87E PUSH3 0x875 DUP3 PUSH3 0x852 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x7C4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x894 PUSH3 0x886 JUMP JUMPDEST PUSH3 0x8A1 DUP2 DUP5 DUP5 PUSH3 0x85B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x8C8 JUMPI PUSH3 0x8BC PUSH0 DUP3 PUSH3 0x88A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x8A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x917 JUMPI PUSH3 0x8E1 DUP2 PUSH3 0x797 JUMP JUMPDEST PUSH3 0x8EC DUP5 PUSH3 0x7A9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x8FC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x914 PUSH3 0x90B DUP6 PUSH3 0x7A9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x8A6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x939 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x91C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x953 DUP4 DUP4 PUSH3 0x928 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x96E DUP3 PUSH3 0x6FF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x98A JUMPI PUSH3 0x989 PUSH3 0x709 JUMP JUMPDEST JUMPDEST PUSH3 0x996 DUP3 SLOAD PUSH3 0x763 JUMP JUMPDEST PUSH3 0x9A3 DUP3 DUP3 DUP6 PUSH3 0x8CC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x9D9 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x9C4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x9D0 DUP6 DUP3 PUSH3 0x946 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xA3F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x9E9 DUP7 PUSH3 0x797 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xA12 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x9EB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xA32 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xA2E PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x928 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xA72 DUP3 PUSH3 0xA47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA84 DUP2 PUSH3 0xA66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA9F PUSH0 DUP4 ADD DUP5 PUSH3 0xA79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xAB9 DUP2 PUSH3 0xAA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xACA DUP2 PUSH3 0x819 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xAE5 PUSH0 DUP4 ADD DUP9 PUSH3 0xAAE JUMP JUMPDEST PUSH3 0xAF4 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xAAE JUMP JUMPDEST PUSH3 0xB03 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xAAE JUMP JUMPDEST PUSH3 0xB12 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xABF JUMP JUMPDEST PUSH3 0xB21 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0xA79 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB5A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xB3D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xB81 DUP3 PUSH3 0x6FF JUMP JUMPDEST PUSH3 0xB8D DUP2 DUP6 PUSH3 0xB2B JUMP JUMPDEST SWAP4 POP PUSH3 0xB9F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xB3B JUMP JUMPDEST PUSH3 0xBAA DUP2 PUSH3 0xB65 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0xBCF DUP2 DUP5 PUSH3 0xB75 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xBFD DUP3 MLOAD PUSH3 0xAA5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xC12 DUP3 PUSH3 0xBD7 JUMP JUMPDEST DUP3 PUSH3 0xC1E DUP5 PUSH3 0xBE1 JUMP JUMPDEST SWAP1 POP PUSH3 0xC2B DUP2 PUSH3 0xBF0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xC6E JUMPI PUSH3 0xC69 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x7B8 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0xCAE DUP3 PUSH3 0x819 JUMP JUMPDEST SWAP2 POP PUSH3 0xCBB DUP4 PUSH3 0x819 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xCD6 JUMPI PUSH3 0xCD5 PUSH3 0xC75 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xCF1 PUSH0 DUP4 ADD DUP7 PUSH3 0xA79 JUMP JUMPDEST PUSH3 0xD00 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xABF JUMP JUMPDEST PUSH3 0xD0F PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xABF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xD2C PUSH0 DUP4 ADD DUP5 PUSH3 0xABF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1EA8 PUSH3 0xD84 PUSH0 CODECOPY PUSH0 PUSH2 0xD4F ADD MSTORE PUSH0 PUSH2 0xD14 ADD MSTORE PUSH0 PUSH2 0x1248 ADD MSTORE PUSH0 PUSH2 0x1227 ADD MSTORE PUSH0 PUSH2 0xA49 ADD MSTORE PUSH0 PUSH2 0xA9F ADD MSTORE PUSH0 PUSH2 0xAC8 ADD MSTORE PUSH2 0x1EA8 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x347 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x4BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1BCE JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3FD PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x40A DUP2 DUP6 DUP6 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x428 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x435 DUP6 DUP3 DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x440 DUP6 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x45D PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x46A PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x474 DUP3 DUP3 PUSH2 0xB83 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C5 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x4CE PUSH0 PUSH2 0xC02 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x4DA DUP3 PUSH2 0xCC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x4F2 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x4FA PUSH2 0xD46 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x518 PUSH2 0x1C69 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x547 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5BD SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E9 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x634 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x634 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x617 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x648 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x655 DUP2 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6A5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6D3 DUP13 PUSH2 0xD81 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x70B DUP3 PUSH2 0xDD4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x71A DUP3 DUP8 DUP8 DUP8 PUSH2 0xDED JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78E JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x785 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x799 DUP11 DUP11 DUP11 PUSH2 0x8B2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x82F PUSH2 0xAFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A8 DUP2 PUSH2 0xC02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CF DUP5 DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x950 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x941 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE1B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 DUP4 DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAC1 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xAEE JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB22 PUSH2 0x586 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB81 JUMPI PUSH2 0xB45 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFE PUSH0 DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD41 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1298 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD7C PUSH1 0x7 PUSH32 0x0 PUSH2 0x1298 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE6 PUSH2 0xDE0 PUSH2 0xA46 JUMP JUMPDEST DUP4 PUSH2 0x1345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xDFD DUP9 DUP9 DUP9 DUP9 PUSH2 0x1385 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE0D DUP3 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF2 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFE4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFDB SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x1D7E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1108 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10C3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1199 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11F6 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x127D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x12B4 JUMPI PUSH2 0x12AD DUP4 PUSH2 0x15CE JUMP JUMPDEST SWAP1 POP PUSH2 0x133F JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x12C0 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12EC SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1337 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x130E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1337 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x131A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x13C1 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1462 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x13E4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1455 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1462 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x15CA JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14BF JUMPI PUSH2 0x14BE PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x14F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x151D JUMPI PUSH2 0x151C PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1561 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1573 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1587 JUMPI PUSH2 0x1586 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15C9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C0 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x15DA DUP4 PUSH2 0x1640 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F7 PUSH2 0x1C69 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x162A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1685 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16AA JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16EA DUP3 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x16F4 DUP2 DUP6 PUSH2 0x1698 JUMP JUMPDEST SWAP4 POP PUSH2 0x1704 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x170D DUP2 PUSH2 0x16D0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1730 DUP2 DUP5 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1765 DUP3 PUSH2 0x173C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1775 DUP2 PUSH2 0x175B JUMP JUMPDEST DUP2 EQ PUSH2 0x177F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1790 DUP2 PUSH2 0x176C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A8 DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C3 DUP2 PUSH2 0x179F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17DF JUMPI PUSH2 0x17DE PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17EC DUP6 DUP3 DUP7 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17FD DUP6 DUP3 DUP7 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181B DUP2 PUSH2 0x1807 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1834 PUSH0 DUP4 ADD DUP5 PUSH2 0x1812 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1843 DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x185C PUSH0 DUP4 ADD DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1886 DUP7 DUP3 DUP8 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1897 DUP7 DUP3 DUP8 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18A8 DUP7 DUP3 DUP8 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18C7 DUP2 PUSH2 0x18B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x18BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F8 DUP2 PUSH2 0x18E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1911 PUSH0 DUP4 ADD DUP5 PUSH2 0x18EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192C JUMPI PUSH2 0x192B PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1939 DUP5 DUP3 DUP6 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1976 DUP2 PUSH2 0x1942 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1985 DUP2 PUSH2 0x175B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BD DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19CE DUP4 DUP4 PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19F0 DUP3 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x19FA DUP2 DUP6 PUSH2 0x1995 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A05 DUP4 PUSH2 0x19A5 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A35 JUMPI DUP2 MLOAD PUSH2 0x1A1C DUP9 DUP3 PUSH2 0x19C3 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A27 DUP4 PUSH2 0x19DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A08 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1A55 PUSH0 DUP4 ADD DUP11 PUSH2 0x196D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1A67 DUP2 DUP10 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A7B DUP2 DUP9 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A8A PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1A97 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1AA4 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x18EF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1AB6 DUP2 DUP5 PUSH2 0x19E6 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD7 PUSH0 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AE6 DUP2 PUSH2 0x18B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B01 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B10 DUP2 PUSH2 0x18E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2B DUP2 PUSH2 0x1B07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1B4C JUMPI PUSH2 0x1B4B PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B59 DUP11 DUP3 DUP12 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1B6A DUP11 DUP3 DUP12 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1B7B DUP11 DUP3 DUP12 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1B8C DUP11 DUP3 DUP12 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1B9D DUP11 DUP3 DUP12 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1BAE DUP11 DUP3 DUP12 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1BBF DUP11 DUP3 DUP12 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BE4 JUMPI PUSH2 0x1BE3 PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BF1 DUP6 DUP3 DUP7 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C02 DUP6 DUP3 DUP7 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C50 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C63 JUMPI PUSH2 0x1C62 PUSH2 0x1C0C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1CA9 PUSH0 DUP4 ADD DUP10 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1CB6 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1CC3 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1CD0 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1CDD PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1CEA PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D08 PUSH0 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1D15 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D2F PUSH0 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1D3C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1D49 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D88 DUP3 PUSH2 0x1796 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D93 DUP4 PUSH2 0x1796 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DAB JUMPI PUSH2 0x1DAA PUSH2 0x1D51 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1DC4 PUSH0 DUP4 ADD DUP9 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1DD1 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1DDE PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1DEB PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1DF8 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E15 PUSH0 DUP4 ADD DUP8 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1E22 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x1E2F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1E3C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x18EF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 DUP12 0xE0 0xE4 SWAP9 0xAD PUSH31 0x6BB902218B0FAEFE6C2A92CFE002CDF7C1059B210A9EB9135D64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "82820:310:0:-:0;;;82875:149;;;;;;;;;;81511:52;;;;;;;;;;;;;;;;;81550:4;75059:440;;;;;;;;;;;;;;;;;82940:10;16661:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16736:5;16728;:13;;;;;;:::i;:::-;;16762:7;16752;:17;;;;;;:::i;:::-;;16661:116;;2473:1;2449:26;;:12;:26;;;2445:97;;2527:1;2499:31;;;;;;;;;;;:::i;:::-;;;;;;;;2445:97;2552:32;2571:12;2552:18;;;:32;;:::i;:::-;2400:192;75133:45;75164:13;75133:4;:30;;;;:45;;;;:::i;:::-;75125:53;;;;;;75200:51;75234:16;75200:7;:33;;;;:51;;;;:::i;:::-;75189:62;;;;;;75292:4;75276:22;;;;;;75262:36;;;;;;75342:7;75326:25;;;;;;75309:42;;;;;;75381:13;75364:30;;;;;;75430:23;:21;;;:23;;:::i;:::-;75405:48;;;;;;75486:4;75464:27;;;;;;;;;;75059:440;;81511:52;82990:32:::3;82996:10;83008:13;82990:5;;;:32;;:::i;:::-;82820:310:::0;;4144:191;4218:16;4237:6;;;;;;;;;;;4218:25;;4263:8;4254:6;;:17;;;;;;;;;;;;;;;;;;4318:8;4287:40;;4308:8;4287:40;;;;;;;;;;;;4207:128;4144:191;:::o;70319:347::-;70415:11;70465:2;70449:5;70443:19;:24;70439:220;;;70491:20;70505:5;70491:13;;;:20;;:::i;:::-;70484:27;;;;70439:220;70585:5;70544:32;70570:5;70544:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;68748:66;70629:17;;70605:42;;70319:347;;;;;:::o;75866:181::-;75921:7;73782:95;75980:11;;75993:14;;76009:13;76032:4;75958:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;75948:91;;;;;;75941:98;;75866:181;:::o;22662:213::-;22752:1;22733:21;;:7;:21;;;22729:93;;22807:1;22778:32;;;;;;;;;;;:::i;:::-;;;;;;;;22729:93;22832:35;22848:1;22852:7;22861:5;22832:7;;;:35;;:::i;:::-;22662:213;;:::o;69076:292::-;69141:11;69165:17;69191:3;69165:30;;69224:2;69210:4;:11;:16;69206:74;;;69264:3;69250:18;;;;;;;;;;;:::i;:::-;;;;;;;;69206:74;69347:4;:11;69338:4;69330:13;;;:::i;:::-;69322:22;;:36;69314:45;;69290:70;;;69076:292;;;:::o;66457:207::-;66525:20;66636:10;66626:20;;66457:207;;;:::o;21174:1135::-;21280:1;21264:18;;:4;:18;;;21260:552;;21418:5;21402:12;;:21;;;;;;;:::i;:::-;;;;;;;;21260:552;;;21456:19;21478:9;:15;21488:4;21478:15;;;;;;;;;;;;;;;;21456:37;;21526:5;21512:11;:19;21508:117;;;21584:4;21590:11;21603:5;21559:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;21508:117;21780:5;21766:11;:19;21748:9;:15;21758:4;21748:15;;;;;;;;;;;;;;;:37;;;;21441:371;21260:552;21842:1;21828:16;;:2;:16;;;21824:435;;22010:5;21994:12;;:21;;;;;;;;;;;21824:435;;;22227:5;22210:9;:13;22220:2;22210:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;21824:435;22291:2;22276:25;;22285:4;22276:25;;;22295:5;22276:25;;;;;;:::i;:::-;;;;;;;;21174:1135;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:77::-;5857:7;5886:5;5875:16;;5820:77;;;:::o;5903:118::-;5990:24;6008:5;5990:24;:::i;:::-;5985:3;5978:37;5903:118;;:::o;6027:::-;6114:24;6132:5;6114:24;:::i;:::-;6109:3;6102:37;6027:118;;:::o;6151:664::-;6356:4;6394:3;6383:9;6379:19;6371:27;;6408:71;6476:1;6465:9;6461:17;6452:6;6408:71;:::i;:::-;6489:72;6557:2;6546:9;6542:18;6533:6;6489:72;:::i;:::-;6571;6639:2;6628:9;6624:18;6615:6;6571:72;:::i;:::-;6653;6721:2;6710:9;6706:18;6697:6;6653:72;:::i;:::-;6735:73;6803:3;6792:9;6788:19;6779:6;6735:73;:::i;:::-;6151:664;;;;;;;;:::o;6821:169::-;6905:11;6939:6;6934:3;6927:19;6979:4;6974:3;6970:14;6955:29;;6821:169;;;;:::o;6996:246::-;7077:1;7087:113;7101:6;7098:1;7095:13;7087:113;;;7186:1;7181:3;7177:11;7171:18;7167:1;7162:3;7158:11;7151:39;7123:2;7120:1;7116:10;7111:15;;7087:113;;;7234:1;7225:6;7220:3;7216:16;7209:27;7058:184;6996:246;;;:::o;7248:102::-;7289:6;7340:2;7336:7;7331:2;7324:5;7320:14;7316:28;7306:38;;7248:102;;;:::o;7356:377::-;7444:3;7472:39;7505:5;7472:39;:::i;:::-;7527:71;7591:6;7586:3;7527:71;:::i;:::-;7520:78;;7607:65;7665:6;7660:3;7653:4;7646:5;7642:16;7607:65;:::i;:::-;7697:29;7719:6;7697:29;:::i;:::-;7692:3;7688:39;7681:46;;7448:285;7356:377;;;;:::o;7739:313::-;7852:4;7890:2;7879:9;7875:18;7867:26;;7939:9;7933:4;7929:20;7925:1;7914:9;7910:17;7903:47;7967:78;8040:4;8031:6;7967:78;:::i;:::-;7959:86;;7739:313;;;;:::o;8058:98::-;8109:6;8143:5;8137:12;8127:22;;8058:98;;;:::o;8162:116::-;8213:4;8236:3;8228:11;;8266:4;8261:3;8257:14;8249:22;;8162:116;;;:::o;8284:154::-;8327:11;8363:29;8387:3;8381:10;8363:29;:::i;:::-;8426:5;8402:29;;8339:99;8284:154;;;:::o;8444:594::-;8528:5;8559:38;8591:5;8559:38;:::i;:::-;8622:5;8649:40;8683:5;8649:40;:::i;:::-;8637:52;;8708:35;8734:8;8708:35;:::i;:::-;8699:44;;8767:2;8759:6;8756:14;8753:278;;;8838:169;8923:66;8893:6;8889:2;8885:15;8882:1;8878:23;8838:169;:::i;:::-;8815:5;8794:227;8785:236;;8753:278;8534:504;;8444:594;;;:::o;9044:180::-;9092:77;9089:1;9082:88;9189:4;9186:1;9179:15;9213:4;9210:1;9203:15;9230:191;9270:3;9289:20;9307:1;9289:20;:::i;:::-;9284:25;;9323:20;9341:1;9323:20;:::i;:::-;9318:25;;9366:1;9363;9359:9;9352:16;;9387:3;9384:1;9381:10;9378:36;;;9394:18;;:::i;:::-;9378:36;9230:191;;;;:::o;9427:442::-;9576:4;9614:2;9603:9;9599:18;9591:26;;9627:71;9695:1;9684:9;9680:17;9671:6;9627:71;:::i;:::-;9708:72;9776:2;9765:9;9761:18;9752:6;9708:72;:::i;:::-;9790;9858:2;9847:9;9843:18;9834:6;9790:72;:::i;:::-;9427:442;;;;;;:::o;9875:222::-;9968:4;10006:2;9995:9;9991:18;9983:26;;10019:71;10087:1;10076:9;10072:17;10063:6;10019:71;:::i;:::-;9875:222;;;;:::o;82820:310:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_3551": {
									"entryPoint": 1108,
									"id": 3551,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_3329": {
									"entryPoint": 3339,
									"id": 3329,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_3341": {
									"entryPoint": 3398,
									"id": 3341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_807": {
									"entryPoint": 2226,
									"id": 807,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_867": {
									"entryPoint": 3611,
									"id": 867,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_3259": {
									"entryPoint": 4611,
									"id": 3259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkOwner_111": {
									"entryPoint": 2812,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_domainSeparatorV4_3238": {
									"entryPoint": 2630,
									"id": 3238,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_3275": {
									"entryPoint": 3540,
									"id": 3275,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_756": {
									"entryPoint": 2947,
									"id": 756,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 2219,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_915": {
									"entryPoint": 2244,
									"id": 915,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_1297": {
									"entryPoint": 5228,
									"id": 1297,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_173": {
									"entryPoint": 3074,
									"id": 173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_646": {
									"entryPoint": 2390,
									"id": 646,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_723": {
									"entryPoint": 4074,
									"id": 723,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_3383": {
									"entryPoint": 3457,
									"id": 3383,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_543": {
									"entryPoint": 1957,
									"id": 543,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_567": {
									"entryPoint": 1011,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_502": {
									"entryPoint": 1144,
									"id": 502,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@byteLength_3024": {
									"entryPoint": 5696,
									"id": 3024,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_480": {
									"entryPoint": 1100,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_3317": {
									"entryPoint": 1249,
									"id": 3317,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@mint_3595": {
									"entryPoint": 1122,
									"id": 3595,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_462": {
									"entryPoint": 867,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_3368": {
									"entryPoint": 3269,
									"id": 3368,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_3541": {
									"entryPoint": 1232,
									"id": 3541,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_94": {
									"entryPoint": 1414,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permit_3524": {
									"entryPoint": 1632,
									"id": 3524,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_1248": {
									"entryPoint": 3565,
									"id": 1248,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceOwnership_125": {
									"entryPoint": 1213,
									"id": 125,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_471": {
									"entryPoint": 1454,
									"id": 471,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_3091": {
									"entryPoint": 4760,
									"id": 3091,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_2992": {
									"entryPoint": 5582,
									"id": 2992,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_2799": {
									"entryPoint": 4933,
									"id": 2799,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_489": {
									"entryPoint": 1045,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_599": {
									"entryPoint": 1054,
									"id": 599,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_153": {
									"entryPoint": 2087,
									"id": 153,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_526": {
									"entryPoint": 1598,
									"id": 526,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_1212": {
									"entryPoint": 4997,
									"id": 1212,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_t_address": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 6899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 6961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 6509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7413,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7452,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7318,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7601,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 6466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5800,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7180,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5944,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15381:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:1",
														"type": ""
													}
												],
												"src": "1349:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:1",
														"type": ""
													}
												],
												"src": "1676:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:1",
														"type": ""
													}
												],
												"src": "1808:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:1"
															},
															"nodeType": "YulIf",
															"src": "1963:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:1",
														"type": ""
													}
												],
												"src": "1910:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:1",
														"type": ""
													}
												],
												"src": "2038:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:1",
														"type": ""
													}
												],
												"src": "2183:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:1"
															},
															"nodeType": "YulIf",
															"src": "2319:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:1",
														"type": ""
													}
												],
												"src": "2266:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:1",
														"type": ""
													}
												],
												"src": "2394:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:1"
															},
															"nodeType": "YulIf",
															"src": "2632:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:1",
														"type": ""
													}
												],
												"src": "2539:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:1",
														"type": ""
													}
												],
												"src": "3019:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:1",
														"type": ""
													}
												],
												"src": "3115:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:1",
														"type": ""
													}
												],
												"src": "3230:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:1",
														"type": ""
													}
												],
												"src": "3446:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:1",
														"type": ""
													}
												],
												"src": "3570:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:1"
															},
															"nodeType": "YulIf",
															"src": "3908:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:1",
														"type": ""
													}
												],
												"src": "3798:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:1",
														"type": ""
													}
												],
												"src": "4423:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:1",
														"type": ""
													}
												],
												"src": "4515:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:1",
														"type": ""
													}
												],
												"src": "4633:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4898:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4908:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4919:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4908:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4880:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4890:7:1",
														"type": ""
													}
												],
												"src": "4853:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5001:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5018:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5041:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5023:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5023:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5011:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5011:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4989:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4996:3:1",
														"type": ""
													}
												],
												"src": "4936:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5158:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5168:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5180:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5176:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5176:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5168:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5248:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5272:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5257:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5257:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5204:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5204:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5130:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5142:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5153:4:1",
														"type": ""
													}
												],
												"src": "5060:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5354:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5400:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5402:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5402:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5375:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5371:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5396:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:32:1"
															},
															"nodeType": "YulIf",
															"src": "5364:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5493:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5508:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5522:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5512:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5537:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5572:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5583:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5568:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5568:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5592:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5547:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5537:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5324:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5335:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5347:6:1",
														"type": ""
													}
												],
												"src": "5288:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5667:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5677:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5692:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5699:66:1",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5688:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5677:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5649:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5659:7:1",
														"type": ""
													}
												],
												"src": "5623:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5841:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5858:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5880:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nodeType": "YulIdentifier",
																			"src": "5863:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5863:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5851:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5851:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5829:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5836:3:1",
														"type": ""
													}
												],
												"src": "5778:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5964:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5981:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6004:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5986:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5986:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5974:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5974:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5974:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5952:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5959:3:1",
														"type": ""
													}
												],
												"src": "5899:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6097:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6108:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6124:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6118:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6108:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6080:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6090:6:1",
														"type": ""
													}
												],
												"src": "6023:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6254:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6271:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6276:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6264:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6264:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6292:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6316:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6292:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6226:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6242:11:1",
														"type": ""
													}
												],
												"src": "6143:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6405:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6415:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6423:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6415:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6436:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6448:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6453:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6444:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6444:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6436:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6392:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6400:4:1",
														"type": ""
													}
												],
												"src": "6333:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6526:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6543:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6566:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6548:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6548:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6536:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6536:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6514:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6521:3:1",
														"type": ""
													}
												],
												"src": "6471:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6665:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6709:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6717:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6675:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6675:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6675:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6730:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6748:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6753:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6744:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6744:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "6730:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6638:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6646:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "6654:10:1",
														"type": ""
													}
												],
												"src": "6585:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6845:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6855:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6867:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6872:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6863:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6863:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "6855:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6832:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "6840:4:1",
														"type": ""
													}
												],
												"src": "6770:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7043:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7053:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7115:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7067:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7067:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7057:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7130:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7211:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7216:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7137:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7137:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7130:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7232:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7297:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7247:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7247:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "7236:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7312:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "7326:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7316:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7402:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7416:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7443:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "7437:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7437:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "7420:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7463:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "7514:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7529:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "7470:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7470:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7463:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7546:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7609:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "7556:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7556:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7546:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7364:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7367:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7361:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7361:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7375:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7377:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7386:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7389:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7382:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7382:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7377:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7346:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7348:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7357:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "7352:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7342:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7635:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7642:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7635:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7022:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7029:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7038:3:1",
														"type": ""
													}
												],
												"src": "6919:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8011:861:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8021:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8033:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8044:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8029:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8029:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8021:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8100:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8113:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8124:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8109:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8109:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8058:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8058:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8058:69:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8148:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8159:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8144:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8168:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8174:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8164:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8164:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8137:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8137:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8194:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8266:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8275:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8202:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8202:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8194:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8301:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8312:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8297:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8297:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8321:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8327:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8317:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8290:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8290:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8347:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8419:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8428:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8355:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8355:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8347:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8487:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8500:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8511:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8496:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8443:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8443:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8443:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8569:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8582:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8593:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8578:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8525:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8525:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8525:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "8652:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8665:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8676:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8661:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8661:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8608:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8608:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8702:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8713:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8698:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8723:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8729:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8719:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8691:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8691:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8749:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "8851:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8860:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8757:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8757:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8749:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7935:9:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "7947:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "7955:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7963:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7971:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7979:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7987:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8006:4:1",
														"type": ""
													}
												],
												"src": "7657:1215:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8976:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8986:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8998:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9009:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8994:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8994:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8986:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9066:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9079:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9090:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9075:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9075:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9022:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9022:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9022:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8948:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8960:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8971:4:1",
														"type": ""
													}
												],
												"src": "8878:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9147:77:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9202:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9211:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9214:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9204:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9204:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9204:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9170:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9193:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "9177:15:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9177:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9167:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9167:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9160:41:1"
															},
															"nodeType": "YulIf",
															"src": "9157:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9140:5:1",
														"type": ""
													}
												],
												"src": "9106:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9280:85:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9290:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9312:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9299:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9299:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9290:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9353:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "9328:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9328:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9328:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9258:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9266:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9274:5:1",
														"type": ""
													}
												],
												"src": "9230:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9414:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9471:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9480:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9483:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9473:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9473:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9473:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9437:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9462:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "9444:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9444:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9434:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9434:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9427:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9427:43:1"
															},
															"nodeType": "YulIf",
															"src": "9424:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9407:5:1",
														"type": ""
													}
												],
												"src": "9371:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9551:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9561:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9583:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9570:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9570:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9561:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9626:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "9599:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9599:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9599:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9529:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9537:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9545:5:1",
														"type": ""
													}
												],
												"src": "9499:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9810:1033:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9857:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9859:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9859:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9859:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9831:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9840:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9827:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9852:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9823:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9823:33:1"
															},
															"nodeType": "YulIf",
															"src": "9820:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9950:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9965:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9979:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9969:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9994:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10029:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10040:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10025:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10025:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10049:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10004:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10004:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9994:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10077:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10092:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10106:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10096:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10122:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10157:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10168:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10153:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10153:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10177:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10132:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10132:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10122:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10205:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10220:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10234:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10224:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10250:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10285:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10296:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10281:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10281:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10305:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10260:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10260:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "10250:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10333:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10348:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10362:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10352:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10378:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10413:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10424:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10409:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10409:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10433:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10388:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10388:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "10378:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10461:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10476:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10490:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10480:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10507:61:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10540:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10551:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10536:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10536:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10560:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "10517:18:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10517:51:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "10507:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10588:119:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10603:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10617:3:1",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10607:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10634:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10669:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10680:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10665:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10665:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10689:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "10644:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10644:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "10634:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10717:119:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10732:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10746:3:1",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10736:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10763:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10798:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10809:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10794:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10794:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10818:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "10773:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10773:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "10763:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9732:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9743:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9755:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9763:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9771:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9779:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9787:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "9795:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "9803:6:1",
														"type": ""
													}
												],
												"src": "9644:1199:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10932:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10978:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10980:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10980:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10980:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10953:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10962:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10949:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10949:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10974:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10945:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10945:32:1"
															},
															"nodeType": "YulIf",
															"src": "10942:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "11071:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11086:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11100:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11090:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11115:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11150:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11161:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11146:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11146:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11170:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11125:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11125:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11115:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11198:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11213:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11227:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11217:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11243:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11278:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11289:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11274:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11274:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11298:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11253:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11253:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11243:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10894:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10905:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10917:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10925:6:1",
														"type": ""
													}
												],
												"src": "10849:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11357:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11374:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11377:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11367:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11367:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11367:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11471:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11474:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11464:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11464:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11464:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11495:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11498:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11488:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11488:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "11329:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11566:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11576:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11590:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11596:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11586:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11586:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11576:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11607:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11637:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11643:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11633:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11611:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11684:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11698:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11712:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11720:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11708:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11708:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11698:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11664:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11657:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11657:26:1"
															},
															"nodeType": "YulIf",
															"src": "11654:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11787:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11801:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11801:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11801:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11751:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11774:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11782:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11771:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11771:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11748:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:38:1"
															},
															"nodeType": "YulIf",
															"src": "11745:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11550:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11559:6:1",
														"type": ""
													}
												],
												"src": "11515:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11869:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11886:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11889:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11879:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11879:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11879:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11983:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11986:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11976:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11976:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11976:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12007:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12010:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12000:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12000:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "11841:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12265:537:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12275:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12287:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12298:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12283:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12283:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12275:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12356:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12369:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12380:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12365:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12365:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12312:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12312:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12312:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12437:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12450:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12461:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12446:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12446:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12393:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12393:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12393:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12519:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12532:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12543:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12528:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12528:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12475:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12475:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12475:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12601:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12614:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12625:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12610:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12610:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12557:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12557:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12557:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "12683:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12696:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12707:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12692:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12639:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12639:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12639:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "12766:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12779:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12790:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12775:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12775:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12722:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12722:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12722:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12197:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "12209:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12217:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12225:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12233:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12241:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12249:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12260:4:1",
														"type": ""
													}
												],
												"src": "12027:775:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12934:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12944:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12956:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12967:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12952:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12952:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12944:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13024:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13037:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13048:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13033:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13033:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12980:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12980:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12980:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13105:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13118:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13129:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13114:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13114:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13061:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13061:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13061:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12898:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12910:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12918:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12929:4:1",
														"type": ""
													}
												],
												"src": "12808:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13300:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13322:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13333:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13318:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13310:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13390:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13403:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13414:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13399:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13399:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13346:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13346:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13346:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13471:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13484:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13495:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13480:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13480:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13427:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13427:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13427:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13577:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13562:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13509:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13509:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13256:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13268:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13276:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13284:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13295:4:1",
														"type": ""
													}
												],
												"src": "13146:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13622:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13639:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13642:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13632:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13632:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13632:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13736:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13739:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13729:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13729:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13760:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13763:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13753:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13753:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13753:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13594:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13824:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13834:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13857:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13839:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13839:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13834:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13868:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13891:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13873:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13873:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13868:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13902:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13913:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13916:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13909:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13909:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13902:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13942:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13944:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13944:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13944:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13934:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "13937:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13931:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13931:10:1"
															},
															"nodeType": "YulIf",
															"src": "13928:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13811:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13814:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13820:3:1",
														"type": ""
													}
												],
												"src": "13780:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14187:454:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14197:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14209:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14220:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14205:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14205:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14197:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14278:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14291:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14302:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14287:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14287:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14234:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14234:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14234:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14359:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14372:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14383:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14368:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14368:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14315:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14315:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14315:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14441:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14454:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14465:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14450:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14397:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14397:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14397:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14536:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14547:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14532:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14532:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14479:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14479:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14479:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "14605:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14618:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14629:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14614:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14614:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14561:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14561:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14561:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14127:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14139:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14147:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14155:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14163:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14171:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14182:4:1",
														"type": ""
													}
												],
												"src": "13977:664:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14825:367:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14835:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14847:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14858:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14843:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14843:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14835:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14916:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14929:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14940:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14925:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14925:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14872:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14872:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14872:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14993:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15006:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15017:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15002:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14953:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14953:68:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14953:68:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15075:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15088:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15099:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15084:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15084:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15031:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15031:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15031:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15157:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15170:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15181:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15166:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15166:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15113:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15113:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15113:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14773:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14785:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14793:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14801:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14809:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14820:4:1",
														"type": ""
													}
												],
												"src": "14647:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15226:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15243:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15246:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15236:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15236:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15340:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15343:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15333:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15333:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15364:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15367:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15357:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15357:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "15198:180:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"3136": [
									{
										"length": 32,
										"start": 2760
									}
								],
								"3138": [
									{
										"length": 32,
										"start": 2719
									}
								],
								"3140": [
									{
										"length": 32,
										"start": 2633
									}
								],
								"3142": [
									{
										"length": 32,
										"start": 4647
									}
								],
								"3144": [
									{
										"length": 32,
										"start": 4680
									}
								],
								"3147": [
									{
										"length": 32,
										"start": 3348
									}
								],
								"3150": [
									{
										"length": 32,
										"start": 3407
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c8063715018a6116100a057806395d89b411161006f57806395d89b41146102ad578063a9059cbb146102cb578063d505accf146102fb578063dd62ed3e14610317578063f2fde38b1461034757610109565b8063715018a6146102315780637ecebe001461023b57806384b0196e1461026b5780638da5cb5b1461028f57610109565b8063313ce567116100dc578063313ce567146101a95780633644e515146101c757806340c10f19146101e557806370a082311461020157610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f80fd5b610115610363565b6040516101229190611718565b60405180910390f35b610145600480360381019061014091906117c9565b6103f3565b6040516101529190611821565b60405180910390f35b610163610415565b6040516101709190611849565b60405180910390f35b610193600480360381019061018e9190611862565b61041e565b6040516101a09190611821565b60405180910390f35b6101b161044c565b6040516101be91906118cd565b60405180910390f35b6101cf610454565b6040516101dc91906118fe565b60405180910390f35b6101ff60048036038101906101fa91906117c9565b610462565b005b61021b60048036038101906102169190611917565b610478565b6040516102289190611849565b60405180910390f35b6102396104bd565b005b61025560048036038101906102509190611917565b6104d0565b6040516102629190611849565b60405180910390f35b6102736104e1565b6040516102869796959493929190611a42565b60405180910390f35b610297610586565b6040516102a49190611ac4565b60405180910390f35b6102b56105ae565b6040516102c29190611718565b60405180910390f35b6102e560048036038101906102e091906117c9565b61063e565b6040516102f29190611821565b60405180910390f35b61031560048036038101906103109190611b31565b610660565b005b610331600480360381019061032c9190611bce565b6107a5565b60405161033e9190611849565b60405180910390f35b610361600480360381019061035c9190611917565b610827565b005b60606003805461037290611c39565b80601f016020809104026020016040519081016040528092919081815260200182805461039e90611c39565b80156103e95780601f106103c0576101008083540402835291602001916103e9565b820191905f5260205f20905b8154815290600101906020018083116103cc57829003601f168201915b5050505050905090565b5f806103fd6108ab565b905061040a8185856108b2565b600191505092915050565b5f600254905090565b5f806104286108ab565b90506104358582856108c4565b610440858585610956565b60019150509392505050565b5f6012905090565b5f61045d610a46565b905090565b61046a610afc565b6104748282610b83565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104c5610afc565b6104ce5f610c02565b565b5f6104da82610cc5565b9050919050565b5f6060805f805f60606104f2610d0b565b6104fa610d46565b46305f801b5f67ffffffffffffffff81111561051957610518611c69565b5b6040519080825280602002602001820160405280156105475781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105bd90611c39565b80601f01602080910402602001604051908101604052809291908181526020018280546105e990611c39565b80156106345780601f1061060b57610100808354040283529160200191610634565b820191905f5260205f20905b81548152906001019060200180831161061757829003601f168201915b5050505050905090565b5f806106486108ab565b9050610655818585610956565b600191505092915050565b834211156106a557836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161069c9190611849565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106d38c610d81565b896040516020016106e996959493929190611c96565b6040516020818303038152906040528051906020012090505f61070b82610dd4565b90505f61071a82878787610ded565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461078e57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610785929190611cf5565b60405180910390fd5b6107998a8a8a6108b2565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61082f610afc565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361089f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108969190611ac4565b60405180910390fd5b6108a881610c02565b50565b5f33905090565b6108bf8383836001610e1b565b505050565b5f6108cf84846107a5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109505781811015610941578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161093893929190611d1c565b60405180910390fd5b61094f84848484035f610e1b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109c6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109bd9190611ac4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2d9190611ac4565b60405180910390fd5b610a41838383610fea565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610ac157507f000000000000000000000000000000000000000000000000000000000000000046145b15610aee577f00000000000000000000000000000000000000000000000000000000000000009050610af9565b610af6611203565b90505b90565b610b046108ab565b73ffffffffffffffffffffffffffffffffffffffff16610b22610586565b73ffffffffffffffffffffffffffffffffffffffff1614610b8157610b456108ab565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b789190611ac4565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf3575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bea9190611ac4565b60405180910390fd5b610bfe5f8383610fea565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610d4160067f000000000000000000000000000000000000000000000000000000000000000061129890919063ffffffff16565b905090565b6060610d7c60077f000000000000000000000000000000000000000000000000000000000000000061129890919063ffffffff16565b905090565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610de6610de0610a46565b83611345565b9050919050565b5f805f80610dfd88888888611385565b925092509250610e0d828261146c565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e8b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e829190611ac4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610efb575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ef29190611ac4565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fe4578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fdb9190611849565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361103a578060025f82825461102e9190611d7e565b92505081905550611108565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110c3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110ba93929190611d1c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361114f578060025f8282540392505081905550611199565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111f69190611849565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161127d959493929190611db1565b60405160208183030381529060405280519060200120905090565b606060ff5f1b83146112b4576112ad836115ce565b905061133f565b8180546112c090611c39565b80601f01602080910402602001604051908101604052809291908181526020018280546112ec90611c39565b80156113375780601f1061130e57610100808354040283529160200191611337565b820191905f5260205f20905b81548152906001019060200180831161131a57829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c11156113c1575f600385925092509250611462565b5f6001888888886040515f81526020016040526040516113e49493929190611e02565b6020604051602081039080840390855afa158015611404573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611455575f60015f801b93509350935050611462565b805f805f1b935093509350505b9450945094915050565b5f600381111561147f5761147e611e45565b5b82600381111561149257611491611e45565b5b03156115ca57600160038111156114ac576114ab611e45565b5b8260038111156114bf576114be611e45565b5b036114f6576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561150a57611509611e45565b5b82600381111561151d5761151c611e45565b5b0361156157805f1c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016115589190611849565b60405180910390fd5b60038081111561157457611573611e45565b5b82600381111561158757611586611e45565b5b036115c957806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016115c091906118fe565b60405180910390fd5b5b5050565b60605f6115da83611640565b90505f602067ffffffffffffffff8111156115f8576115f7611c69565b5b6040519080825280601f01601f19166020018201604052801561162a5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f811115611685576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156116c55780820151818401526020810190506116aa565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6116ea8261168e565b6116f48185611698565b93506117048185602086016116a8565b61170d816116d0565b840191505092915050565b5f6020820190508181035f83015261173081846116e0565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117658261173c565b9050919050565b6117758161175b565b811461177f575f80fd5b50565b5f813590506117908161176c565b92915050565b5f819050919050565b6117a881611796565b81146117b2575f80fd5b50565b5f813590506117c38161179f565b92915050565b5f80604083850312156117df576117de611738565b5b5f6117ec85828601611782565b92505060206117fd858286016117b5565b9150509250929050565b5f8115159050919050565b61181b81611807565b82525050565b5f6020820190506118345f830184611812565b92915050565b61184381611796565b82525050565b5f60208201905061185c5f83018461183a565b92915050565b5f805f6060848603121561187957611878611738565b5b5f61188686828701611782565b935050602061189786828701611782565b92505060406118a8868287016117b5565b9150509250925092565b5f60ff82169050919050565b6118c7816118b2565b82525050565b5f6020820190506118e05f8301846118be565b92915050565b5f819050919050565b6118f8816118e6565b82525050565b5f6020820190506119115f8301846118ef565b92915050565b5f6020828403121561192c5761192b611738565b5b5f61193984828501611782565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61197681611942565b82525050565b6119858161175b565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6119bd81611796565b82525050565b5f6119ce83836119b4565b60208301905092915050565b5f602082019050919050565b5f6119f08261198b565b6119fa8185611995565b9350611a05836119a5565b805f5b83811015611a35578151611a1c88826119c3565b9750611a27836119da565b925050600181019050611a08565b5085935050505092915050565b5f60e082019050611a555f83018a61196d565b8181036020830152611a6781896116e0565b90508181036040830152611a7b81886116e0565b9050611a8a606083018761183a565b611a97608083018661197c565b611aa460a08301856118ef565b81810360c0830152611ab681846119e6565b905098975050505050505050565b5f602082019050611ad75f83018461197c565b92915050565b611ae6816118b2565b8114611af0575f80fd5b50565b5f81359050611b0181611add565b92915050565b611b10816118e6565b8114611b1a575f80fd5b50565b5f81359050611b2b81611b07565b92915050565b5f805f805f805f60e0888a031215611b4c57611b4b611738565b5b5f611b598a828b01611782565b9750506020611b6a8a828b01611782565b9650506040611b7b8a828b016117b5565b9550506060611b8c8a828b016117b5565b9450506080611b9d8a828b01611af3565b93505060a0611bae8a828b01611b1d565b92505060c0611bbf8a828b01611b1d565b91505092959891949750929550565b5f8060408385031215611be457611be3611738565b5b5f611bf185828601611782565b9250506020611c0285828601611782565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c5057607f821691505b602082108103611c6357611c62611c0c565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60c082019050611ca95f8301896118ef565b611cb6602083018861197c565b611cc3604083018761197c565b611cd0606083018661183a565b611cdd608083018561183a565b611cea60a083018461183a565b979650505050505050565b5f604082019050611d085f83018561197c565b611d15602083018461197c565b9392505050565b5f606082019050611d2f5f83018661197c565b611d3c602083018561183a565b611d49604083018461183a565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d8882611796565b9150611d9383611796565b9250828201905080821115611dab57611daa611d51565b5b92915050565b5f60a082019050611dc45f8301886118ef565b611dd160208301876118ef565b611dde60408301866118ef565b611deb606083018561183a565b611df8608083018461197c565b9695505050505050565b5f608082019050611e155f8301876118ef565b611e2260208301866118be565b611e2f60408301856118ef565b611e3c60608301846118ef565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220248be0e498ad7e6bb902218b0faefe6c2a92cfe002cdf7c1059b210a9eb9135d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x347 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x4BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1BCE JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3FD PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x40A DUP2 DUP6 DUP6 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x428 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x435 DUP6 DUP3 DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x440 DUP6 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x45D PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x46A PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x474 DUP3 DUP3 PUSH2 0xB83 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C5 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x4CE PUSH0 PUSH2 0xC02 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x4DA DUP3 PUSH2 0xCC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x4F2 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x4FA PUSH2 0xD46 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x518 PUSH2 0x1C69 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x547 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5BD SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E9 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x634 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x634 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x617 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x648 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x655 DUP2 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6A5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6D3 DUP13 PUSH2 0xD81 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x70B DUP3 PUSH2 0xDD4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x71A DUP3 DUP8 DUP8 DUP8 PUSH2 0xDED JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78E JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x785 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x799 DUP11 DUP11 DUP11 PUSH2 0x8B2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x82F PUSH2 0xAFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A8 DUP2 PUSH2 0xC02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CF DUP5 DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x950 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x941 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE1B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 DUP4 DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAC1 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xAEE JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB22 PUSH2 0x586 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB81 JUMPI PUSH2 0xB45 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFE PUSH0 DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD41 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1298 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD7C PUSH1 0x7 PUSH32 0x0 PUSH2 0x1298 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE6 PUSH2 0xDE0 PUSH2 0xA46 JUMP JUMPDEST DUP4 PUSH2 0x1345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xDFD DUP9 DUP9 DUP9 DUP9 PUSH2 0x1385 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE0D DUP3 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF2 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFE4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFDB SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x1D7E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1108 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10C3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1199 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11F6 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x127D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x12B4 JUMPI PUSH2 0x12AD DUP4 PUSH2 0x15CE JUMP JUMPDEST SWAP1 POP PUSH2 0x133F JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x12C0 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12EC SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1337 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x130E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1337 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x131A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x13C1 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1462 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x13E4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1455 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1462 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x15CA JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14BF JUMPI PUSH2 0x14BE PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x14F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x151D JUMPI PUSH2 0x151C PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1561 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1573 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1587 JUMPI PUSH2 0x1586 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15C9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C0 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x15DA DUP4 PUSH2 0x1640 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F7 PUSH2 0x1C69 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x162A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1685 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16AA JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16EA DUP3 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x16F4 DUP2 DUP6 PUSH2 0x1698 JUMP JUMPDEST SWAP4 POP PUSH2 0x1704 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x170D DUP2 PUSH2 0x16D0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1730 DUP2 DUP5 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1765 DUP3 PUSH2 0x173C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1775 DUP2 PUSH2 0x175B JUMP JUMPDEST DUP2 EQ PUSH2 0x177F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1790 DUP2 PUSH2 0x176C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A8 DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C3 DUP2 PUSH2 0x179F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17DF JUMPI PUSH2 0x17DE PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17EC DUP6 DUP3 DUP7 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17FD DUP6 DUP3 DUP7 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181B DUP2 PUSH2 0x1807 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1834 PUSH0 DUP4 ADD DUP5 PUSH2 0x1812 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1843 DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x185C PUSH0 DUP4 ADD DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1886 DUP7 DUP3 DUP8 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1897 DUP7 DUP3 DUP8 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18A8 DUP7 DUP3 DUP8 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18C7 DUP2 PUSH2 0x18B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x18BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F8 DUP2 PUSH2 0x18E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1911 PUSH0 DUP4 ADD DUP5 PUSH2 0x18EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192C JUMPI PUSH2 0x192B PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1939 DUP5 DUP3 DUP6 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1976 DUP2 PUSH2 0x1942 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1985 DUP2 PUSH2 0x175B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BD DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19CE DUP4 DUP4 PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19F0 DUP3 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x19FA DUP2 DUP6 PUSH2 0x1995 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A05 DUP4 PUSH2 0x19A5 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A35 JUMPI DUP2 MLOAD PUSH2 0x1A1C DUP9 DUP3 PUSH2 0x19C3 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A27 DUP4 PUSH2 0x19DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A08 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1A55 PUSH0 DUP4 ADD DUP11 PUSH2 0x196D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1A67 DUP2 DUP10 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A7B DUP2 DUP9 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A8A PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1A97 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1AA4 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x18EF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1AB6 DUP2 DUP5 PUSH2 0x19E6 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD7 PUSH0 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AE6 DUP2 PUSH2 0x18B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B01 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B10 DUP2 PUSH2 0x18E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2B DUP2 PUSH2 0x1B07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1B4C JUMPI PUSH2 0x1B4B PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B59 DUP11 DUP3 DUP12 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1B6A DUP11 DUP3 DUP12 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1B7B DUP11 DUP3 DUP12 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1B8C DUP11 DUP3 DUP12 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1B9D DUP11 DUP3 DUP12 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1BAE DUP11 DUP3 DUP12 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1BBF DUP11 DUP3 DUP12 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BE4 JUMPI PUSH2 0x1BE3 PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BF1 DUP6 DUP3 DUP7 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C02 DUP6 DUP3 DUP7 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C50 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C63 JUMPI PUSH2 0x1C62 PUSH2 0x1C0C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1CA9 PUSH0 DUP4 ADD DUP10 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1CB6 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1CC3 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1CD0 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1CDD PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1CEA PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D08 PUSH0 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1D15 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D2F PUSH0 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1D3C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1D49 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D88 DUP3 PUSH2 0x1796 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D93 DUP4 PUSH2 0x1796 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DAB JUMPI PUSH2 0x1DAA PUSH2 0x1D51 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1DC4 PUSH0 DUP4 ADD DUP9 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1DD1 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1DDE PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1DEB PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1DF8 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E15 PUSH0 DUP4 ADD DUP8 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1E22 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x1E2F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1E3C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x18EF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 DUP12 0xE0 0xE4 SWAP9 0xAD PUSH31 0x6BB902218B0FAEFE6C2A92CFE002CDF7C1059B210A9EB9135D64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "82820:310:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16847:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19140:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17949:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19908:249;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17800:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;82634:114;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;83032:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;18111:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3506:103;;;:::i;:::-;;82376:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;76923:580;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2831:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17057:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18434:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;81622:695;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;18679:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3764:220;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;16847:91;16892:13;16925:5;16918:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16847:91;:::o;19140:190::-;19213:4;19230:13;19246:12;:10;:12::i;:::-;19230:28;;19269:31;19278:5;19285:7;19294:5;19269:8;:31::i;:::-;19318:4;19311:11;;;19140:190;;;;:::o;17949:99::-;18001:7;18028:12;;18021:19;;17949:99;:::o;19908:249::-;19995:4;20012:15;20030:12;:10;:12::i;:::-;20012:30;;20053:37;20069:4;20075:7;20084:5;20053:15;:37::i;:::-;20101:26;20111:4;20117:2;20121:5;20101:9;:26::i;:::-;20145:4;20138:11;;;19908:249;;;;;:::o;17800:84::-;17849:5;17874:2;17867:9;;17800:84;:::o;82634:114::-;82693:7;82720:20;:18;:20::i;:::-;82713:27;;82634:114;:::o;83032:95::-;2717:13;:11;:13::i;:::-;83102:17:::1;83108:2;83112:6;83102:5;:17::i;:::-;83032:95:::0;;:::o;18111:118::-;18176:7;18203:9;:18;18213:7;18203:18;;;;;;;;;;;;;;;;18196:25;;18111:118;;;:::o;3506:103::-;2717:13;:11;:13::i;:::-;3571:30:::1;3598:1;3571:18;:30::i;:::-;3506:103::o:0;82376:145::-;82467:7;82494:19;82507:5;82494:12;:19::i;:::-;82487:26;;82376:145;;;:::o;76923:580::-;77026:13;77054:18;77087:21;77123:15;77153:25;77193:12;77220:27;77328:13;:11;:13::i;:::-;77356:16;:14;:16::i;:::-;77387:13;77423:4;77451:1;77443:10;;77482:1;77468:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;77275:220;;;;;;;;;;;;;;;;;;;;;76923:580;;;;;;;:::o;2831:87::-;2877:7;2904:6;;;;;;;;;;;2897:13;;2831:87;:::o;17057:95::-;17104:13;17137:7;17130:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17057:95;:::o;18434:182::-;18503:4;18520:13;18536:12;:10;:12::i;:::-;18520:28;;18559:27;18569:5;18576:2;18580:5;18559:9;:27::i;:::-;18604:4;18597:11;;;18434:182;;;;:::o;81622:695::-;81852:8;81834:15;:26;81830:99;;;81908:8;81884:33;;;;;;;;;;;:::i;:::-;;;;;;;;81830:99;81941:18;80942:95;82000:5;82007:7;82016:5;82023:16;82033:5;82023:9;:16::i;:::-;82041:8;81972:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;81962:89;;;;;;81941:110;;82064:12;82079:28;82096:10;82079:16;:28::i;:::-;82064:43;;82120:14;82137:28;82151:4;82157:1;82160;82163;82137:13;:28::i;:::-;82120:45;;82190:5;82180:15;;:6;:15;;;82176:90;;82240:6;82248:5;82219:35;;;;;;;;;;;;:::i;:::-;;;;;;;;82176:90;82278:31;82287:5;82294:7;82303:5;82278:8;:31::i;:::-;81819:498;;;81622:695;;;;;;;:::o;18679:142::-;18759:7;18786:11;:18;18798:5;18786:18;;;;;;;;;;;;;;;:27;18805:7;18786:27;;;;;;;;;;;;;;;;18779:34;;18679:142;;;;:::o;3764:220::-;2717:13;:11;:13::i;:::-;3869:1:::1;3849:22;;:8;:22;;::::0;3845:93:::1;;3923:1;3895:31;;;;;;;;;;;:::i;:::-;;;;;;;;3845:93;3948:28;3967:8;3948:18;:28::i;:::-;3764:220:::0;:::o;785:98::-;838:7;865:10;858:17;;785:98;:::o;23967:130::-;24052:37;24061:5;24068:7;24077:5;24084:4;24052:8;:37::i;:::-;23967:130;;;:::o;25683:487::-;25783:24;25810:25;25820:5;25827:7;25810:9;:25::i;:::-;25783:52;;25870:17;25850:16;:37;25846:317;;25927:5;25908:16;:24;25904:132;;;25987:7;25996:16;26014:5;25960:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;25904:132;26079:57;26088:5;26095:7;26123:5;26104:16;:24;26130:5;26079:8;:57::i;:::-;25846:317;25772:398;25683:487;;;:::o;20542:308::-;20642:1;20626:18;;:4;:18;;;20622:88;;20695:1;20668:30;;;;;;;;;;;:::i;:::-;;;;;;;;20622:88;20738:1;20724:16;;:2;:16;;;20720:88;;20793:1;20764:32;;;;;;;;;;;:::i;:::-;;;;;;;;20720:88;20818:24;20826:4;20832:2;20836:5;20818:7;:24::i;:::-;20542:308;;;:::o;75590:268::-;75643:7;75684:11;75667:28;;75675:4;75667:28;;;:63;;;;;75716:14;75699:13;:31;75667:63;75663:188;;;75754:22;75747:29;;;;75663:188;75816:23;:21;:23::i;:::-;75809:30;;75590:268;;:::o;2996:166::-;3067:12;:10;:12::i;:::-;3056:23;;:7;:5;:7::i;:::-;:23;;;3052:103;;3130:12;:10;:12::i;:::-;3103:40;;;;;;;;;;;:::i;:::-;;;;;;;;3052:103;2996:166::o;22662:213::-;22752:1;22733:21;;:7;:21;;;22729:93;;22807:1;22778:32;;;;;;;;;;;:::i;:::-;;;;;;;;22729:93;22832:35;22848:1;22852:7;22861:5;22832:7;:35::i;:::-;22662:213;;:::o;4144:191::-;4218:16;4237:6;;;;;;;;;;;4218:25;;4263:8;4254:6;;:17;;;;;;;;;;;;;;;;;;4318:8;4287:40;;4308:8;4287:40;;;;;;;;;;;;4207:128;4144:191;:::o;79074:109::-;79134:7;79161;:14;79169:5;79161:14;;;;;;;;;;;;;;;;79154:21;;79074:109;;;:::o;77832:128::-;77878:13;77911:41;77938:13;77911:5;:26;;:41;;;;:::i;:::-;77904:48;;77832:128;:::o;78295:137::-;78344:13;78377:47;78407:16;78377:8;:29;;:47;;;;:::i;:::-;78370:54;;78295:137;:::o;79304:402::-;79364:7;79671;:14;79679:5;79671:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;79664:23;;79304:402;;;:::o;76689:178::-;76766:7;76793:66;76826:20;:18;:20::i;:::-;76848:10;76793:32;:66::i;:::-;76786:73;;76689:178;;;:::o;37221:264::-;37306:7;37327:17;37346:18;37366:16;37386:25;37397:4;37403:1;37406;37409;37386:10;:25::i;:::-;37326:85;;;;;;37422:28;37434:5;37441:8;37422:11;:28::i;:::-;37468:9;37461:16;;;;;37221:264;;;;;;:::o;24948:443::-;25078:1;25061:19;;:5;:19;;;25057:91;;25133:1;25104:32;;;;;;;;;;;:::i;:::-;;;;;;;;25057:91;25181:1;25162:21;;:7;:21;;;25158:92;;25235:1;25207:31;;;;;;;;;;;:::i;:::-;;;;;;;;25158:92;25290:5;25260:11;:18;25272:5;25260:18;;;;;;;;;;;;;;;:27;25279:7;25260:27;;;;;;;;;;;;;;;:35;;;;25310:9;25306:78;;;25357:7;25341:31;;25350:5;25341:31;;;25366:5;25341:31;;;;;;:::i;:::-;;;;;;;;25306:78;24948:443;;;;:::o;21174:1135::-;21280:1;21264:18;;:4;:18;;;21260:552;;21418:5;21402:12;;:21;;;;;;;:::i;:::-;;;;;;;;21260:552;;;21456:19;21478:9;:15;21488:4;21478:15;;;;;;;;;;;;;;;;21456:37;;21526:5;21512:11;:19;21508:117;;;21584:4;21590:11;21603:5;21559:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;21508:117;21780:5;21766:11;:19;21748:9;:15;21758:4;21748:15;;;;;;;;;;;;;;;:37;;;;21441:371;21260:552;21842:1;21828:16;;:2;:16;;;21824:435;;22010:5;21994:12;;:21;;;;;;;;;;;21824:435;;;22227:5;22210:9;:13;22220:2;22210:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;21824:435;22291:2;22276:25;;22285:4;22276:25;;;22295:5;22276:25;;;;;;:::i;:::-;;;;;;;;21174:1135;;;:::o;75866:181::-;75921:7;73782:95;75980:11;75993:14;76009:13;76032:4;75958:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;75948:91;;;;;;75941:98;;75866:181;:::o;70802:273::-;70896:13;68748:66;70955:17;;70945:5;70926:46;70922:146;;70996:15;71005:5;70996:8;:15::i;:::-;70989:22;;;;70922:146;71051:5;71044:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;70802:273;;;;;:::o;62713:410::-;62806:14;62918:4;62912:11;62949:10;62944:3;62937:23;62997:15;62990:4;62985:3;62981:14;62974:39;63050:10;63043:4;63038:3;63034:14;63027:34;63100:4;63095:3;63085:20;63075:30;;62886:230;62713:410;;;;:::o;35526:1556::-;35657:7;35666:12;35680:7;36600:66;36595:1;36587:10;;:79;36583:166;;;36699:1;36703:30;36735:1;36683:54;;;;;;;;36583:166;36846:14;36863:24;36873:4;36879:1;36882;36885;36863:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36846:41;;36920:1;36902:20;;:6;:20;;;36898:115;;36955:1;36959:29;36998:1;36990:10;;36939:62;;;;;;;;;36898:115;37033:6;37041:20;37071:1;37063:10;;37025:49;;;;;;;35526:1556;;;;;;;;;:::o;37623:542::-;37719:20;37710:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;37706:452;37756:7;37706:452;37817:29;37808:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;37804:354;;37870:23;;;;;;;;;;;;;;37804:354;37924:35;37915:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;37911:247;;38019:8;38011:17;;37983:46;;;;;;;;;;;:::i;:::-;;;;;;;;37911:247;38060:30;38051:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;38047:111;;38137:8;38114:32;;;;;;;;;;;:::i;:::-;;;;;;;;38047:111;37623:542;;;:::o;69457:415::-;69516:13;69542:11;69556:16;69567:4;69556:10;:16::i;:::-;69542:30;;69662:17;69693:2;69682:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;69662:34;;69787:3;69782;69775:16;69828:4;69821;69816:3;69812:14;69805:28;69861:3;69854:10;;;;69457:415;;;:::o;69949:251::-;70010:7;70030:14;70083:4;70074;70047:33;;:40;70030:57;;70111:2;70102:6;:11;70098:71;;;70137:20;;;;;;;;;;;;;;70098:71;70186:6;70179:13;;;69949:251;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:149::-;5659:7;5699:66;5692:5;5688:78;5677:89;;5623:149;;;:::o;5778:115::-;5863:23;5880:5;5863:23;:::i;:::-;5858:3;5851:36;5778:115;;:::o;5899:118::-;5986:24;6004:5;5986:24;:::i;:::-;5981:3;5974:37;5899:118;;:::o;6023:114::-;6090:6;6124:5;6118:12;6108:22;;6023:114;;;:::o;6143:184::-;6242:11;6276:6;6271:3;6264:19;6316:4;6311:3;6307:14;6292:29;;6143:184;;;;:::o;6333:132::-;6400:4;6423:3;6415:11;;6453:4;6448:3;6444:14;6436:22;;6333:132;;;:::o;6471:108::-;6548:24;6566:5;6548:24;:::i;:::-;6543:3;6536:37;6471:108;;:::o;6585:179::-;6654:10;6675:46;6717:3;6709:6;6675:46;:::i;:::-;6753:4;6748:3;6744:14;6730:28;;6585:179;;;;:::o;6770:113::-;6840:4;6872;6867:3;6863:14;6855:22;;6770:113;;;:::o;6919:732::-;7038:3;7067:54;7115:5;7067:54;:::i;:::-;7137:86;7216:6;7211:3;7137:86;:::i;:::-;7130:93;;7247:56;7297:5;7247:56;:::i;:::-;7326:7;7357:1;7342:284;7367:6;7364:1;7361:13;7342:284;;;7443:6;7437:13;7470:63;7529:3;7514:13;7470:63;:::i;:::-;7463:70;;7556:60;7609:6;7556:60;:::i;:::-;7546:70;;7402:224;7389:1;7386;7382:9;7377:14;;7342:284;;;7346:14;7642:3;7635:10;;7043:608;;;6919:732;;;;:::o;7657:1215::-;8006:4;8044:3;8033:9;8029:19;8021:27;;8058:69;8124:1;8113:9;8109:17;8100:6;8058:69;:::i;:::-;8174:9;8168:4;8164:20;8159:2;8148:9;8144:18;8137:48;8202:78;8275:4;8266:6;8202:78;:::i;:::-;8194:86;;8327:9;8321:4;8317:20;8312:2;8301:9;8297:18;8290:48;8355:78;8428:4;8419:6;8355:78;:::i;:::-;8347:86;;8443:72;8511:2;8500:9;8496:18;8487:6;8443:72;:::i;:::-;8525:73;8593:3;8582:9;8578:19;8569:6;8525:73;:::i;:::-;8608;8676:3;8665:9;8661:19;8652:6;8608:73;:::i;:::-;8729:9;8723:4;8719:20;8713:3;8702:9;8698:19;8691:49;8757:108;8860:4;8851:6;8757:108;:::i;:::-;8749:116;;7657:1215;;;;;;;;;;:::o;8878:222::-;8971:4;9009:2;8998:9;8994:18;8986:26;;9022:71;9090:1;9079:9;9075:17;9066:6;9022:71;:::i;:::-;8878:222;;;;:::o;9106:118::-;9177:22;9193:5;9177:22;:::i;:::-;9170:5;9167:33;9157:61;;9214:1;9211;9204:12;9157:61;9106:118;:::o;9230:135::-;9274:5;9312:6;9299:20;9290:29;;9328:31;9353:5;9328:31;:::i;:::-;9230:135;;;;:::o;9371:122::-;9444:24;9462:5;9444:24;:::i;:::-;9437:5;9434:35;9424:63;;9483:1;9480;9473:12;9424:63;9371:122;:::o;9499:139::-;9545:5;9583:6;9570:20;9561:29;;9599:33;9626:5;9599:33;:::i;:::-;9499:139;;;;:::o;9644:1199::-;9755:6;9763;9771;9779;9787;9795;9803;9852:3;9840:9;9831:7;9827:23;9823:33;9820:120;;;9859:79;;:::i;:::-;9820:120;9979:1;10004:53;10049:7;10040:6;10029:9;10025:22;10004:53;:::i;:::-;9994:63;;9950:117;10106:2;10132:53;10177:7;10168:6;10157:9;10153:22;10132:53;:::i;:::-;10122:63;;10077:118;10234:2;10260:53;10305:7;10296:6;10285:9;10281:22;10260:53;:::i;:::-;10250:63;;10205:118;10362:2;10388:53;10433:7;10424:6;10413:9;10409:22;10388:53;:::i;:::-;10378:63;;10333:118;10490:3;10517:51;10560:7;10551:6;10540:9;10536:22;10517:51;:::i;:::-;10507:61;;10461:117;10617:3;10644:53;10689:7;10680:6;10669:9;10665:22;10644:53;:::i;:::-;10634:63;;10588:119;10746:3;10773:53;10818:7;10809:6;10798:9;10794:22;10773:53;:::i;:::-;10763:63;;10717:119;9644:1199;;;;;;;;;;:::o;10849:474::-;10917:6;10925;10974:2;10962:9;10953:7;10949:23;10945:32;10942:119;;;10980:79;;:::i;:::-;10942:119;11100:1;11125:53;11170:7;11161:6;11150:9;11146:22;11125:53;:::i;:::-;11115:63;;11071:117;11227:2;11253:53;11298:7;11289:6;11278:9;11274:22;11253:53;:::i;:::-;11243:63;;11198:118;10849:474;;;;;:::o;11329:180::-;11377:77;11374:1;11367:88;11474:4;11471:1;11464:15;11498:4;11495:1;11488:15;11515:320;11559:6;11596:1;11590:4;11586:12;11576:22;;11643:1;11637:4;11633:12;11664:18;11654:81;;11720:4;11712:6;11708:17;11698:27;;11654:81;11782:2;11774:6;11771:14;11751:18;11748:38;11745:84;;11801:18;;:::i;:::-;11745:84;11566:269;11515:320;;;:::o;11841:180::-;11889:77;11886:1;11879:88;11986:4;11983:1;11976:15;12010:4;12007:1;12000:15;12027:775;12260:4;12298:3;12287:9;12283:19;12275:27;;12312:71;12380:1;12369:9;12365:17;12356:6;12312:71;:::i;:::-;12393:72;12461:2;12450:9;12446:18;12437:6;12393:72;:::i;:::-;12475;12543:2;12532:9;12528:18;12519:6;12475:72;:::i;:::-;12557;12625:2;12614:9;12610:18;12601:6;12557:72;:::i;:::-;12639:73;12707:3;12696:9;12692:19;12683:6;12639:73;:::i;:::-;12722;12790:3;12779:9;12775:19;12766:6;12722:73;:::i;:::-;12027:775;;;;;;;;;:::o;12808:332::-;12929:4;12967:2;12956:9;12952:18;12944:26;;12980:71;13048:1;13037:9;13033:17;13024:6;12980:71;:::i;:::-;13061:72;13129:2;13118:9;13114:18;13105:6;13061:72;:::i;:::-;12808:332;;;;;:::o;13146:442::-;13295:4;13333:2;13322:9;13318:18;13310:26;;13346:71;13414:1;13403:9;13399:17;13390:6;13346:71;:::i;:::-;13427:72;13495:2;13484:9;13480:18;13471:6;13427:72;:::i;:::-;13509;13577:2;13566:9;13562:18;13553:6;13509:72;:::i;:::-;13146:442;;;;;;:::o;13594:180::-;13642:77;13639:1;13632:88;13739:4;13736:1;13729:15;13763:4;13760:1;13753:15;13780:191;13820:3;13839:20;13857:1;13839:20;:::i;:::-;13834:25;;13873:20;13891:1;13873:20;:::i;:::-;13868:25;;13916:1;13913;13909:9;13902:16;;13937:3;13934:1;13931:10;13928:36;;;13944:18;;:::i;:::-;13928:36;13780:191;;;;:::o;13977:664::-;14182:4;14220:3;14209:9;14205:19;14197:27;;14234:71;14302:1;14291:9;14287:17;14278:6;14234:71;:::i;:::-;14315:72;14383:2;14372:9;14368:18;14359:6;14315:72;:::i;:::-;14397;14465:2;14454:9;14450:18;14441:6;14397:72;:::i;:::-;14479;14547:2;14536:9;14532:18;14523:6;14479:72;:::i;:::-;14561:73;14629:3;14618:9;14614:19;14605:6;14561:73;:::i;:::-;13977:664;;;;;;;;:::o;14647:545::-;14820:4;14858:3;14847:9;14843:19;14835:27;;14872:71;14940:1;14929:9;14925:17;14916:6;14872:71;:::i;:::-;14953:68;15017:2;15006:9;15002:18;14993:6;14953:68;:::i;:::-;15031:72;15099:2;15088:9;15084:18;15075:6;15031:72;:::i;:::-;15113;15181:2;15170:9;15166:18;15157:6;15113:72;:::i;:::-;14647:545;;;;;;;:::o;15198:180::-;15246:77;15243:1;15236:88;15343:4;15340:1;15333:15;15367:4;15364:1;15357:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1569600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"decimals()": "361",
								"eip712Domain()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2916",
								"owner()": "2604",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "160"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 82875,
									"end": 83024,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 82875,
									"end": 83024,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 82875,
									"end": 83024,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 82875,
									"end": 83024,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 82875,
									"end": 83024,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 82875,
									"end": 83024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82875,
									"end": 83024,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 82875,
									"end": 83024,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 82875,
									"end": 83024,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 82875,
									"end": 83024,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82875,
									"end": 83024,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "PUSH",
									"source": 0,
									"value": "4D79546F6B656E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81550,
									"end": 81554,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "PUSH",
									"source": 0,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 82940,
									"end": 82950,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "PUSH",
									"source": 0,
									"value": "4D79546F6B656E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "PUSH",
									"source": 0,
									"value": "4D544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16736,
									"end": 16741,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16728,
									"end": 16733,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 16728,
									"end": 16741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16728,
									"end": 16741,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16728,
									"end": 16741,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 16728,
									"end": 16741,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16728,
									"end": 16741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16728,
									"end": 16741,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 16728,
									"end": 16741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16728,
									"end": 16741,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 16728,
									"end": 16741,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16728,
									"end": 16741,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16762,
									"end": 16769,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16752,
									"end": 16759,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16752,
									"end": 16769,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16752,
									"end": 16769,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16752,
									"end": 16769,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 16752,
									"end": 16769,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16752,
									"end": 16769,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16752,
									"end": 16769,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 16752,
									"end": 16769,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16752,
									"end": 16769,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 16752,
									"end": 16769,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16752,
									"end": 16769,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16661,
									"end": 16777,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2473,
									"end": 2474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2449,
									"end": 2475,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2449,
									"end": 2475,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2449,
									"end": 2461,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2449,
									"end": 2475,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2449,
									"end": 2475,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2449,
									"end": 2475,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2445,
									"end": 2542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2445,
									"end": 2542,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2527,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2499,
									"end": 2530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2530,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2445,
									"end": 2542,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2445,
									"end": 2542,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2552,
									"end": 2584,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2571,
									"end": 2583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2552,
									"end": 2570,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2552,
									"end": 2570,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2552,
									"end": 2570,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2552,
									"end": 2584,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2552,
									"end": 2584,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2552,
									"end": 2584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2552,
									"end": 2584,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2552,
									"end": 2584,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2400,
									"end": 2592,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75133,
									"end": 75178,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 75164,
									"end": 75177,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 75133,
									"end": 75137,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 75133,
									"end": 75163,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 75133,
									"end": 75163,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75133,
									"end": 75163,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 75133,
									"end": 75163,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 75133,
									"end": 75178,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 75133,
									"end": 75178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 75133,
									"end": 75178,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75133,
									"end": 75178,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 75133,
									"end": 75178,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 75133,
									"end": 75178,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 75133,
									"end": 75178,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 75125,
									"end": 75178,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 75125,
									"end": 75178,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75125,
									"end": 75178,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75125,
									"end": 75178,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75125,
									"end": 75178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75125,
									"end": 75178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75200,
									"end": 75251,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75234,
									"end": 75250,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 75200,
									"end": 75207,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 75200,
									"end": 75233,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 75200,
									"end": 75233,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75200,
									"end": 75233,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 75200,
									"end": 75233,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 75200,
									"end": 75251,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 75200,
									"end": 75251,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 75200,
									"end": 75251,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75200,
									"end": 75251,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 75200,
									"end": 75251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 75200,
									"end": 75251,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75200,
									"end": 75251,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 75189,
									"end": 75251,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 75189,
									"end": 75251,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75189,
									"end": 75251,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75189,
									"end": 75251,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75189,
									"end": 75251,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75189,
									"end": 75251,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75292,
									"end": 75296,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75276,
									"end": 75298,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75276,
									"end": 75298,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 75276,
									"end": 75298,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 75276,
									"end": 75298,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75276,
									"end": 75298,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 75276,
									"end": 75298,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 75262,
									"end": 75298,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 75262,
									"end": 75298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75262,
									"end": 75298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75262,
									"end": 75298,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75262,
									"end": 75298,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75262,
									"end": 75298,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75342,
									"end": 75349,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75326,
									"end": 75351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75326,
									"end": 75351,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 75326,
									"end": 75351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 75326,
									"end": 75351,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75326,
									"end": 75351,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 75326,
									"end": 75351,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 75309,
									"end": 75351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 75309,
									"end": 75351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75309,
									"end": 75351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75309,
									"end": 75351,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75309,
									"end": 75351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75309,
									"end": 75351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75381,
									"end": 75394,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 75364,
									"end": 75394,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 75364,
									"end": 75394,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75364,
									"end": 75394,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75364,
									"end": 75394,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75364,
									"end": 75394,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75364,
									"end": 75394,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75430,
									"end": 75453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 75430,
									"end": 75451,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 75430,
									"end": 75451,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75430,
									"end": 75451,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 75430,
									"end": 75453,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75430,
									"end": 75453,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 75430,
									"end": 75453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 75430,
									"end": 75453,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 75430,
									"end": 75453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 75405,
									"end": 75453,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 75405,
									"end": 75453,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75405,
									"end": 75453,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75405,
									"end": 75453,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75405,
									"end": 75453,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75405,
									"end": 75453,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75486,
									"end": 75490,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 75464,
									"end": 75491,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 75464,
									"end": 75491,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 75464,
									"end": 75491,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 75464,
									"end": 75491,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75464,
									"end": 75491,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 75464,
									"end": 75491,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 75464,
									"end": 75491,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75464,
									"end": 75491,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75464,
									"end": 75491,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75464,
									"end": 75491,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75059,
									"end": 75499,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81511,
									"end": 81563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 82990,
									"end": 83022,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 82996,
									"end": 83006,
									"modifierDepth": 3,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 83008,
									"end": 83021,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 82990,
									"end": 82995,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 82990,
									"end": 82995,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 82990,
									"end": 82995,
									"modifierDepth": 3,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 82990,
									"end": 83022,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 82990,
									"end": 83022,
									"modifierDepth": 3,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 82990,
									"end": 83022,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 82990,
									"end": 83022,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 82990,
									"end": 83022,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4144,
									"end": 4335,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 4144,
									"end": 4335,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4218,
									"end": 4234,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4237,
									"end": 4243,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 4237,
									"end": 4243,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4237,
									"end": 4243,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4237,
									"end": 4243,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 4237,
									"end": 4243,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4237,
									"end": 4243,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 4237,
									"end": 4243,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 4237,
									"end": 4243,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4237,
									"end": 4243,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 4237,
									"end": 4243,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4237,
									"end": 4243,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4218,
									"end": 4243,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4218,
									"end": 4243,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4263,
									"end": 4271,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4260,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 4254,
									"end": 4260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4254,
									"end": 4271,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4318,
									"end": 4326,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4308,
									"end": 4316,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4287,
									"end": 4327,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 4207,
									"end": 4335,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4144,
									"end": 4335,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4144,
									"end": 4335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 70319,
									"end": 70666,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 70319,
									"end": 70666,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70415,
									"end": 70426,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70465,
									"end": 70467,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 70449,
									"end": 70454,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 70443,
									"end": 70462,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 70443,
									"end": 70467,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 70439,
									"end": 70659,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 70439,
									"end": 70659,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 70439,
									"end": 70659,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 70491,
									"end": 70511,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 70505,
									"end": 70510,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 70491,
									"end": 70504,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 70491,
									"end": 70504,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 70491,
									"end": 70504,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 70491,
									"end": 70511,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 70491,
									"end": 70511,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 70491,
									"end": 70511,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 70491,
									"end": 70511,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 70491,
									"end": 70511,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70484,
									"end": 70511,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70484,
									"end": 70511,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70484,
									"end": 70511,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 70484,
									"end": 70511,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 70439,
									"end": 70659,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 70439,
									"end": 70659,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70585,
									"end": 70590,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70544,
									"end": 70576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 70570,
									"end": 70575,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 70544,
									"end": 70569,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 70544,
									"end": 70569,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 70544,
									"end": 70569,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 70544,
									"end": 70576,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 70544,
									"end": 70576,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 70544,
									"end": 70576,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 70544,
									"end": 70576,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 70544,
									"end": 70576,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70544,
									"end": 70582,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70544,
									"end": 70582,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 70544,
									"end": 70590,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70544,
									"end": 70590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70544,
									"end": 70590,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 70544,
									"end": 70590,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 70544,
									"end": 70590,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70544,
									"end": 70590,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 70544,
									"end": 70590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 70544,
									"end": 70590,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 70544,
									"end": 70590,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70544,
									"end": 70590,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 68748,
									"end": 68814,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 70629,
									"end": 70646,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70629,
									"end": 70646,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 70605,
									"end": 70647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70605,
									"end": 70647,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70319,
									"end": 70666,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 70319,
									"end": 70666,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70319,
									"end": 70666,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 70319,
									"end": 70666,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 70319,
									"end": 70666,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70319,
									"end": 70666,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70319,
									"end": 70666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 75866,
									"end": 76047,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 75866,
									"end": 76047,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 75921,
									"end": 75928,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73782,
									"end": 73877,
									"name": "PUSH",
									"source": 0,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 75980,
									"end": 75991,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 75980,
									"end": 75991,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 75993,
									"end": 76007,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 75993,
									"end": 76007,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 76009,
									"end": 76022,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 76032,
									"end": 76036,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 75958,
									"end": 76038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 75958,
									"end": 76038,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75948,
									"end": 76039,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75948,
									"end": 76039,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 75948,
									"end": 76039,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 75948,
									"end": 76039,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 75948,
									"end": 76039,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 75948,
									"end": 76039,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 75941,
									"end": 76039,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 75941,
									"end": 76039,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75866,
									"end": 76047,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 75866,
									"end": 76047,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22662,
									"end": 22875,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 22662,
									"end": 22875,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22752,
									"end": 22753,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22733,
									"end": 22754,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22733,
									"end": 22754,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22733,
									"end": 22740,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22733,
									"end": 22754,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22733,
									"end": 22754,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22733,
									"end": 22754,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 22729,
									"end": 22822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 22729,
									"end": 22822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22807,
									"end": 22808,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 22778,
									"end": 22810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 22810,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22729,
									"end": 22822,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 22729,
									"end": 22822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22832,
									"end": 22867,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 22848,
									"end": 22849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22852,
									"end": 22859,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22861,
									"end": 22866,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22832,
									"end": 22839,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 22832,
									"end": 22839,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22832,
									"end": 22839,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 22832,
									"end": 22867,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22832,
									"end": 22867,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 22832,
									"end": 22867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22832,
									"end": 22867,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 22832,
									"end": 22867,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22662,
									"end": 22875,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22662,
									"end": 22875,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22662,
									"end": 22875,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 69076,
									"end": 69368,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 69076,
									"end": 69368,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69141,
									"end": 69152,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69165,
									"end": 69182,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69191,
									"end": 69194,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 69165,
									"end": 69195,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69165,
									"end": 69195,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69224,
									"end": 69226,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 69210,
									"end": 69214,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 69210,
									"end": 69221,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 69210,
									"end": 69226,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 69206,
									"end": 69280,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 69206,
									"end": 69280,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 69206,
									"end": 69280,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 69264,
									"end": 69267,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "PUSH",
									"source": 0,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 69250,
									"end": 69268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69250,
									"end": 69268,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 69206,
									"end": 69280,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 69206,
									"end": 69280,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69347,
									"end": 69351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69347,
									"end": 69358,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 69338,
									"end": 69342,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 69330,
									"end": 69343,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 69330,
									"end": 69343,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69330,
									"end": 69343,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 69330,
									"end": 69343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 69330,
									"end": 69343,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 69330,
									"end": 69343,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69322,
									"end": 69344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69322,
									"end": 69344,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 69322,
									"end": 69358,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 69314,
									"end": 69359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69314,
									"end": 69359,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 69290,
									"end": 69360,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 69290,
									"end": 69360,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69290,
									"end": 69360,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69076,
									"end": 69368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 69076,
									"end": 69368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69076,
									"end": 69368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69076,
									"end": 69368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 66457,
									"end": 66664,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 66457,
									"end": 66664,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66525,
									"end": 66545,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66636,
									"end": 66646,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 66626,
									"end": 66646,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 66626,
									"end": 66646,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66457,
									"end": 66664,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 66457,
									"end": 66664,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 66457,
									"end": 66664,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66457,
									"end": 66664,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21174,
									"end": 22309,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 21174,
									"end": 22309,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21280,
									"end": 21281,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21264,
									"end": 21282,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21264,
									"end": 21282,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21264,
									"end": 21268,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21264,
									"end": 21282,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21264,
									"end": 21282,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21264,
									"end": 21282,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21260,
									"end": 21812,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 21260,
									"end": 21812,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21418,
									"end": 21423,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21414,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 21402,
									"end": 21414,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 21402,
									"end": 21423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "tag",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21402,
									"end": 21423,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21260,
									"end": 21812,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 21260,
									"end": 21812,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21260,
									"end": 21812,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 21260,
									"end": 21812,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21456,
									"end": 21475,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21478,
									"end": 21487,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21488,
									"end": 21492,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 21478,
									"end": 21493,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21456,
									"end": 21493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21456,
									"end": 21493,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21526,
									"end": 21531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21512,
									"end": 21523,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21512,
									"end": 21531,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 21508,
									"end": 21625,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 21508,
									"end": 21625,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 21508,
									"end": 21625,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21584,
									"end": 21588,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21590,
									"end": 21601,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21603,
									"end": 21608,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 21559,
									"end": 21609,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "tag",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21559,
									"end": 21609,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 21508,
									"end": 21625,
									"name": "tag",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 21508,
									"end": 21625,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21780,
									"end": 21785,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21766,
									"end": 21777,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21766,
									"end": 21785,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21757,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21758,
									"end": 21762,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21748,
									"end": 21763,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21785,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21785,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21785,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21748,
									"end": 21785,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21441,
									"end": 21812,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21260,
									"end": 21812,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 21260,
									"end": 21812,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21842,
									"end": 21843,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21828,
									"end": 21844,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21828,
									"end": 21844,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21828,
									"end": 21830,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21828,
									"end": 21844,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21828,
									"end": 21844,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21828,
									"end": 21844,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21824,
									"end": 22259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 21824,
									"end": 22259,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22010,
									"end": 22015,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21994,
									"end": 22006,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 21994,
									"end": 22006,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21994,
									"end": 22015,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21994,
									"end": 22015,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21994,
									"end": 22015,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21994,
									"end": 22015,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21994,
									"end": 22015,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 21994,
									"end": 22015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21994,
									"end": 22015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21994,
									"end": 22015,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21994,
									"end": 22015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21994,
									"end": 22015,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21994,
									"end": 22015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21824,
									"end": 22259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 21824,
									"end": 22259,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21824,
									"end": 22259,
									"name": "tag",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 21824,
									"end": 22259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22227,
									"end": 22232,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22219,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22220,
									"end": 22222,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22223,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22210,
									"end": 22232,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22232,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22232,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22232,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22232,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22232,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22232,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22232,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22232,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22232,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22210,
									"end": 22232,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21824,
									"end": 22259,
									"name": "tag",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 21824,
									"end": 22259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22291,
									"end": 22293,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22285,
									"end": 22289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 22295,
									"end": 22300,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 22276,
									"end": 22301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "tag",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22301,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 21174,
									"end": 22309,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21174,
									"end": 22309,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21174,
									"end": 22309,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21174,
									"end": 22309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5820,
									"end": 5897,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 5820,
									"end": 5897,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5857,
									"end": 5864,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5886,
									"end": 5891,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5875,
									"end": 5891,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5875,
									"end": 5891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5820,
									"end": 5897,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5820,
									"end": 5897,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5820,
									"end": 5897,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5820,
									"end": 5897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5903,
									"end": 6021,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 5903,
									"end": 6021,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5990,
									"end": 6014,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 6008,
									"end": 6013,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5990,
									"end": 6014,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 5990,
									"end": 6014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5990,
									"end": 6014,
									"name": "tag",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 5990,
									"end": 6014,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5985,
									"end": 5988,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5978,
									"end": 6015,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5903,
									"end": 6021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5903,
									"end": 6021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5903,
									"end": 6021,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6027,
									"end": 6145,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 6027,
									"end": 6145,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6114,
									"end": 6138,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 6132,
									"end": 6137,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6114,
									"end": 6138,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 6114,
									"end": 6138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6114,
									"end": 6138,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 6114,
									"end": 6138,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6109,
									"end": 6112,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6102,
									"end": 6139,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6027,
									"end": 6145,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6027,
									"end": 6145,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6027,
									"end": 6145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6360,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6394,
									"end": 6397,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 6383,
									"end": 6392,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6379,
									"end": 6398,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6371,
									"end": 6398,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6371,
									"end": 6398,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6479,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 6476,
									"end": 6477,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6465,
									"end": 6474,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6461,
									"end": 6478,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6452,
									"end": 6458,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6479,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 6408,
									"end": 6479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6479,
									"name": "tag",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 6408,
									"end": 6479,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6489,
									"end": 6561,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 6557,
									"end": 6559,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6546,
									"end": 6555,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6542,
									"end": 6560,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6533,
									"end": 6539,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6489,
									"end": 6561,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 6489,
									"end": 6561,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6489,
									"end": 6561,
									"name": "tag",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 6489,
									"end": 6561,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 6639,
									"end": 6641,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6628,
									"end": 6637,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 6642,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6615,
									"end": 6621,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 6571,
									"end": 6643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6643,
									"name": "tag",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 6571,
									"end": 6643,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6653,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 6721,
									"end": 6723,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 6710,
									"end": 6719,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6706,
									"end": 6724,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6703,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6653,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 6653,
									"end": 6725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6653,
									"end": 6725,
									"name": "tag",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 6653,
									"end": 6725,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6735,
									"end": 6808,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 6803,
									"end": 6806,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 6792,
									"end": 6801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6788,
									"end": 6807,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6779,
									"end": 6785,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6735,
									"end": 6808,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 6735,
									"end": 6808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6735,
									"end": 6808,
									"name": "tag",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 6735,
									"end": 6808,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6151,
									"end": 6815,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6821,
									"end": 6990,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 6821,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6905,
									"end": 6916,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6939,
									"end": 6945,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6934,
									"end": 6937,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6927,
									"end": 6946,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6979,
									"end": 6983,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6974,
									"end": 6977,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6984,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6955,
									"end": 6984,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6955,
									"end": 6984,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6821,
									"end": 6990,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6821,
									"end": 6990,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6821,
									"end": 6990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6821,
									"end": 6990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6821,
									"end": 6990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6996,
									"end": 7242,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 6996,
									"end": 7242,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7077,
									"end": 7078,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "tag",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7101,
									"end": 7107,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7099,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7095,
									"end": 7108,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7186,
									"end": 7187,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7184,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7177,
									"end": 7188,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7171,
									"end": 7189,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7167,
									"end": 7168,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7162,
									"end": 7165,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7158,
									"end": 7169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7151,
									"end": 7190,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7123,
									"end": 7125,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7120,
									"end": 7121,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7116,
									"end": 7126,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7111,
									"end": 7126,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7111,
									"end": 7126,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "tag",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7234,
									"end": 7235,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7225,
									"end": 7231,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7220,
									"end": 7223,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7216,
									"end": 7232,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7209,
									"end": 7236,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7058,
									"end": 7242,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6996,
									"end": 7242,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6996,
									"end": 7242,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6996,
									"end": 7242,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6996,
									"end": 7242,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7248,
									"end": 7350,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 7248,
									"end": 7350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7289,
									"end": 7295,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7340,
									"end": 7342,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 7336,
									"end": 7343,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7331,
									"end": 7333,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 7324,
									"end": 7329,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7320,
									"end": 7334,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7316,
									"end": 7344,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7306,
									"end": 7344,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7306,
									"end": 7344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7248,
									"end": 7350,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7248,
									"end": 7350,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7248,
									"end": 7350,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7248,
									"end": 7350,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7356,
									"end": 7733,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 7356,
									"end": 7733,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7444,
									"end": 7447,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7472,
									"end": 7511,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 7505,
									"end": 7510,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7472,
									"end": 7511,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 7472,
									"end": 7511,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7472,
									"end": 7511,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 7472,
									"end": 7511,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7527,
									"end": 7598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 7591,
									"end": 7597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7586,
									"end": 7589,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7527,
									"end": 7598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 7527,
									"end": 7598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7527,
									"end": 7598,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 7527,
									"end": 7598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7520,
									"end": 7598,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 7520,
									"end": 7598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7607,
									"end": 7672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 7665,
									"end": 7671,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7660,
									"end": 7663,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7646,
									"end": 7651,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7642,
									"end": 7658,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7607,
									"end": 7672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 7607,
									"end": 7672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7607,
									"end": 7672,
									"name": "tag",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 7607,
									"end": 7672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7697,
									"end": 7726,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 7719,
									"end": 7725,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7697,
									"end": 7726,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 7697,
									"end": 7726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7697,
									"end": 7726,
									"name": "tag",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 7697,
									"end": 7726,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7692,
									"end": 7695,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7688,
									"end": 7727,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7681,
									"end": 7727,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7681,
									"end": 7727,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7448,
									"end": 7733,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7356,
									"end": 7733,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7356,
									"end": 7733,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7356,
									"end": 7733,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7356,
									"end": 7733,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7356,
									"end": 7733,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7739,
									"end": 8052,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 7739,
									"end": 8052,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7852,
									"end": 7856,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7890,
									"end": 7892,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7879,
									"end": 7888,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7893,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7867,
									"end": 7893,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7867,
									"end": 7893,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7939,
									"end": 7948,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7933,
									"end": 7937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 7949,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7925,
									"end": 7926,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7914,
									"end": 7923,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7910,
									"end": 7927,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7903,
									"end": 7950,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7967,
									"end": 8045,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 8040,
									"end": 8044,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8031,
									"end": 8037,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7967,
									"end": 8045,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 7967,
									"end": 8045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7967,
									"end": 8045,
									"name": "tag",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 7967,
									"end": 8045,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7959,
									"end": 8045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7959,
									"end": 8045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7739,
									"end": 8052,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7739,
									"end": 8052,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7739,
									"end": 8052,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7739,
									"end": 8052,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7739,
									"end": 8052,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8058,
									"end": 8156,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 8058,
									"end": 8156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8109,
									"end": 8115,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8143,
									"end": 8148,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8137,
									"end": 8149,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8127,
									"end": 8149,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8127,
									"end": 8149,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8058,
									"end": 8156,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8058,
									"end": 8156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8058,
									"end": 8156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8058,
									"end": 8156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8162,
									"end": 8278,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 8162,
									"end": 8278,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8213,
									"end": 8217,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8236,
									"end": 8239,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8228,
									"end": 8239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8228,
									"end": 8239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8270,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8261,
									"end": 8264,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8257,
									"end": 8271,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8249,
									"end": 8271,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8249,
									"end": 8271,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8162,
									"end": 8278,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8162,
									"end": 8278,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8162,
									"end": 8278,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8162,
									"end": 8278,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8284,
									"end": 8438,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 8284,
									"end": 8438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8327,
									"end": 8338,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8363,
									"end": 8392,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 8387,
									"end": 8390,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8381,
									"end": 8391,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8363,
									"end": 8392,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 8363,
									"end": 8392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8363,
									"end": 8392,
									"name": "tag",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 8363,
									"end": 8392,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8426,
									"end": 8431,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8402,
									"end": 8431,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8402,
									"end": 8431,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8339,
									"end": 8438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8284,
									"end": 8438,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8284,
									"end": 8438,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8284,
									"end": 8438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8284,
									"end": 8438,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8444,
									"end": 9038,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 8444,
									"end": 9038,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8559,
									"end": 8597,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 8591,
									"end": 8596,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8559,
									"end": 8597,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 8559,
									"end": 8597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8559,
									"end": 8597,
									"name": "tag",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 8559,
									"end": 8597,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8622,
									"end": 8627,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8649,
									"end": 8689,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 8683,
									"end": 8688,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8649,
									"end": 8689,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 8649,
									"end": 8689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8649,
									"end": 8689,
									"name": "tag",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 8649,
									"end": 8689,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8637,
									"end": 8689,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8637,
									"end": 8689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8708,
									"end": 8743,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "198"
								},
								{
									"begin": 8734,
									"end": 8742,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8708,
									"end": 8743,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 8708,
									"end": 8743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8708,
									"end": 8743,
									"name": "tag",
									"source": 1,
									"value": "198"
								},
								{
									"begin": 8708,
									"end": 8743,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8699,
									"end": 8743,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8699,
									"end": 8743,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8767,
									"end": 8769,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8759,
									"end": 8765,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8756,
									"end": 8770,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8753,
									"end": 9031,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8753,
									"end": 9031,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 8753,
									"end": 9031,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 8923,
									"end": 8989,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8893,
									"end": 8899,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8889,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8885,
									"end": 8900,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8882,
									"end": 8883,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 8878,
									"end": 8901,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 8838,
									"end": 9007,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "tag",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8815,
									"end": 8820,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8794,
									"end": 9021,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8785,
									"end": 9021,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8785,
									"end": 9021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8753,
									"end": 9031,
									"name": "tag",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 8753,
									"end": 9031,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 9038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 9038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8444,
									"end": 9038,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8444,
									"end": 9038,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8444,
									"end": 9038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8444,
									"end": 9038,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9044,
									"end": 9224,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 9044,
									"end": 9224,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9092,
									"end": 9169,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9089,
									"end": 9090,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9082,
									"end": 9170,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9189,
									"end": 9193,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 9186,
									"end": 9187,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 9179,
									"end": 9194,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9213,
									"end": 9217,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 9210,
									"end": 9211,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9203,
									"end": 9218,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 9230,
									"end": 9421,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 9230,
									"end": 9421,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9273,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9289,
									"end": 9309,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 9307,
									"end": 9308,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9289,
									"end": 9309,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 9289,
									"end": 9309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9289,
									"end": 9309,
									"name": "tag",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 9289,
									"end": 9309,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9284,
									"end": 9309,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9284,
									"end": 9309,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9323,
									"end": 9343,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 9341,
									"end": 9342,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9323,
									"end": 9343,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 9323,
									"end": 9343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9323,
									"end": 9343,
									"name": "tag",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 9323,
									"end": 9343,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9318,
									"end": 9343,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9318,
									"end": 9343,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9366,
									"end": 9367,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9363,
									"end": 9364,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9359,
									"end": 9368,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9352,
									"end": 9368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9352,
									"end": 9368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9390,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9384,
									"end": 9385,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9381,
									"end": 9391,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 9378,
									"end": 9414,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9378,
									"end": 9414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "205"
								},
								{
									"begin": 9378,
									"end": 9414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9394,
									"end": 9412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 9394,
									"end": 9412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 9394,
									"end": 9412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9394,
									"end": 9412,
									"name": "tag",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 9394,
									"end": 9412,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9378,
									"end": 9414,
									"name": "tag",
									"source": 1,
									"value": "205"
								},
								{
									"begin": 9378,
									"end": 9414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9230,
									"end": 9421,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9230,
									"end": 9421,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9230,
									"end": 9421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9230,
									"end": 9421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9230,
									"end": 9421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9427,
									"end": 9869,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 9427,
									"end": 9869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9576,
									"end": 9580,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9614,
									"end": 9616,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 9603,
									"end": 9612,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9599,
									"end": 9617,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9591,
									"end": 9617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9591,
									"end": 9617,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9627,
									"end": 9698,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 9695,
									"end": 9696,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9684,
									"end": 9693,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9680,
									"end": 9697,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9671,
									"end": 9677,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 9627,
									"end": 9698,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 9627,
									"end": 9698,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9627,
									"end": 9698,
									"name": "tag",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 9627,
									"end": 9698,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9708,
									"end": 9780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 9776,
									"end": 9778,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9765,
									"end": 9774,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9761,
									"end": 9779,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9752,
									"end": 9758,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 9708,
									"end": 9780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 9708,
									"end": 9780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9708,
									"end": 9780,
									"name": "tag",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 9708,
									"end": 9780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9790,
									"end": 9862,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 9858,
									"end": 9860,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9847,
									"end": 9856,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9843,
									"end": 9861,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9834,
									"end": 9840,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9790,
									"end": 9862,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 9790,
									"end": 9862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9790,
									"end": 9862,
									"name": "tag",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 9790,
									"end": 9862,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9427,
									"end": 9869,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 9427,
									"end": 9869,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 9427,
									"end": 9869,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9427,
									"end": 9869,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9427,
									"end": 9869,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9427,
									"end": 9869,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9427,
									"end": 9869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9875,
									"end": 10097,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 9875,
									"end": 10097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9968,
									"end": 9972,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10006,
									"end": 10008,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9995,
									"end": 10004,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9991,
									"end": 10009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9983,
									"end": 10009,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9983,
									"end": 10009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10019,
									"end": 10090,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 10087,
									"end": 10088,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10076,
									"end": 10085,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10072,
									"end": 10089,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10063,
									"end": 10069,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10019,
									"end": 10090,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 10019,
									"end": 10090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10019,
									"end": 10090,
									"name": "tag",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 10019,
									"end": 10090,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9875,
									"end": 10097,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9875,
									"end": 10097,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9875,
									"end": 10097,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9875,
									"end": 10097,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9875,
									"end": 10097,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3150"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3147"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3144"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3142"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3140"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3138"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3136"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82820,
									"end": 83130,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220248be0e498ad7e6bb902218b0faefe6c2a92cfe002cdf7c1059b210a9eb9135d64736f6c63430008140033",
									".code": [
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "84B0196E"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82820,
											"end": 83130,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16847,
											"end": 16938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16847,
											"end": 16938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 19140,
											"end": 19330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 19140,
											"end": 19330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 19140,
											"end": 19330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 17949,
											"end": 18048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 17949,
											"end": 18048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 19908,
											"end": 20157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19908,
											"end": 20157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 19908,
											"end": 20157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 17800,
											"end": 17884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 17800,
											"end": 17884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 82634,
											"end": 82748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 82634,
											"end": 82748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 83032,
											"end": 83127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 83032,
											"end": 83127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 18111,
											"end": 18229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 18111,
											"end": 18229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 18111,
											"end": 18229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3609,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3506,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3506,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3506,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3609,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3506,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3609,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 82376,
											"end": 82521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 82376,
											"end": 82521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 82376,
											"end": 82521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 76923,
											"end": 77503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 76923,
											"end": 77503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2831,
											"end": 2918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2831,
											"end": 2918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 17057,
											"end": 17152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17057,
											"end": 17152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 18434,
											"end": 18616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 18434,
											"end": 18616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18434,
											"end": 18616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 81622,
											"end": 82317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 81622,
											"end": 82317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 18679,
											"end": 18821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 18679,
											"end": 18821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 18679,
											"end": 18821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3764,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3764,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16892,
											"end": 16905,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16925,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 16918,
											"end": 16930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 16918,
											"end": 16930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19213,
											"end": 19217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19230,
											"end": 19243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19246,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 19246,
											"end": 19256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19246,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19246,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 19246,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19230,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19230,
											"end": 19258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19269,
											"end": 19300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 19278,
											"end": 19283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19292,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19299,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19269,
											"end": 19277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 19269,
											"end": 19300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19269,
											"end": 19300,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 19269,
											"end": 19300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19318,
											"end": 19322,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19311,
											"end": 19322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19311,
											"end": 19322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19311,
											"end": 19322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18001,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18028,
											"end": 18040,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18028,
											"end": 18040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18021,
											"end": 18040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18021,
											"end": 18040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 18048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19995,
											"end": 19999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20012,
											"end": 20027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20030,
											"end": 20042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 20030,
											"end": 20040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20030,
											"end": 20042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20030,
											"end": 20042,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 20030,
											"end": 20042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20012,
											"end": 20042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20012,
											"end": 20042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20053,
											"end": 20090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20069,
											"end": 20073,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20075,
											"end": 20082,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20084,
											"end": 20089,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20053,
											"end": 20068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20053,
											"end": 20090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20053,
											"end": 20090,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20053,
											"end": 20090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20101,
											"end": 20127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20111,
											"end": 20115,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20117,
											"end": 20119,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20121,
											"end": 20126,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20101,
											"end": 20110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 20101,
											"end": 20127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20101,
											"end": 20127,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20101,
											"end": 20127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20145,
											"end": 20149,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20138,
											"end": 20149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20138,
											"end": 20149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20138,
											"end": 20149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19908,
											"end": 20157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17849,
											"end": 17854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17874,
											"end": 17876,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17867,
											"end": 17876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17867,
											"end": 17876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17800,
											"end": 17884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82693,
											"end": 82700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 82720,
											"end": 82740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 82720,
											"end": 82738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 82720,
											"end": 82740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82720,
											"end": 82740,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 82720,
											"end": 82740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82713,
											"end": 82740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82713,
											"end": 82740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82634,
											"end": 82748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2717,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2717,
											"end": 2730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83102,
											"end": 83119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 83108,
											"end": 83110,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 83112,
											"end": 83118,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 83102,
											"end": 83107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 83102,
											"end": 83119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 83102,
											"end": 83119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 83102,
											"end": 83119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83032,
											"end": 83127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18203,
											"end": 18212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18213,
											"end": 18220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18203,
											"end": 18221,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18196,
											"end": 18221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3609,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3506,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2717,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2717,
											"end": 2730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3598,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3571,
											"end": 3601,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3571,
											"end": 3601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82467,
											"end": 82474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 82494,
											"end": 82513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 82507,
											"end": 82512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 82494,
											"end": 82506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 82494,
											"end": 82513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82494,
											"end": 82513,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 82494,
											"end": 82513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82487,
											"end": 82513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82487,
											"end": 82513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 82376,
											"end": 82521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77026,
											"end": 77039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77054,
											"end": 77072,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 77087,
											"end": 77108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77123,
											"end": 77138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77153,
											"end": 77178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77193,
											"end": 77205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77220,
											"end": 77247,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 77328,
											"end": 77341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 77328,
											"end": 77339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 77328,
											"end": 77341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77328,
											"end": 77341,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 77328,
											"end": 77341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77356,
											"end": 77372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 77356,
											"end": 77370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 77356,
											"end": 77372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77356,
											"end": 77372,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 77356,
											"end": 77372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77387,
											"end": 77400,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 77423,
											"end": 77427,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 77451,
											"end": 77452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77443,
											"end": 77453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77443,
											"end": 77453,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 77482,
											"end": 77483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 77468,
											"end": 77484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77468,
											"end": 77484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "PUSH",
											"source": 0,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 77275,
											"end": 77495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 76923,
											"end": 77503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2877,
											"end": 2884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2897,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2897,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17104,
											"end": 17117,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17137,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 17130,
											"end": 17144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 17130,
											"end": 17144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18503,
											"end": 18507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18520,
											"end": 18533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18536,
											"end": 18548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 18536,
											"end": 18546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18536,
											"end": 18548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18536,
											"end": 18548,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 18536,
											"end": 18548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18520,
											"end": 18548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18520,
											"end": 18548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18559,
											"end": 18586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 18569,
											"end": 18574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18576,
											"end": 18578,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18580,
											"end": 18585,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18559,
											"end": 18568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 18559,
											"end": 18586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18559,
											"end": 18586,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 18559,
											"end": 18586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18604,
											"end": 18608,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18597,
											"end": 18608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18597,
											"end": 18608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18597,
											"end": 18608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81852,
											"end": 81860,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 81834,
											"end": 81849,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 81834,
											"end": 81860,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 81830,
											"end": 81929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 81830,
											"end": 81929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 81830,
											"end": 81929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81908,
											"end": 81916,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "PUSH",
											"source": 0,
											"value": "6279130200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 81884,
											"end": 81917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81884,
											"end": 81917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 81830,
											"end": 81929,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 81830,
											"end": 81929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81941,
											"end": 81959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80942,
											"end": 81037,
											"name": "PUSH",
											"source": 0,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 82000,
											"end": 82005,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 82007,
											"end": 82014,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 82016,
											"end": 82021,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 82023,
											"end": 82039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 82033,
											"end": 82038,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 82023,
											"end": 82032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 82023,
											"end": 82039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82023,
											"end": 82039,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 82023,
											"end": 82039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82041,
											"end": 82049,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 81972,
											"end": 82050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81972,
											"end": 82050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81962,
											"end": 82051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81962,
											"end": 82051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81962,
											"end": 82051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81962,
											"end": 82051,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81962,
											"end": 82051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81962,
											"end": 82051,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 81941,
											"end": 82051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81941,
											"end": 82051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 82064,
											"end": 82076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 82079,
											"end": 82107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 82096,
											"end": 82106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 82079,
											"end": 82095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 82079,
											"end": 82107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82079,
											"end": 82107,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 82079,
											"end": 82107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82064,
											"end": 82107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82064,
											"end": 82107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 82120,
											"end": 82134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 82137,
											"end": 82165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 82151,
											"end": 82155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 82157,
											"end": 82158,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 82160,
											"end": 82161,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 82163,
											"end": 82164,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 82137,
											"end": 82150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 82137,
											"end": 82165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82137,
											"end": 82165,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 82137,
											"end": 82165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82120,
											"end": 82165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82120,
											"end": 82165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 82190,
											"end": 82195,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 82180,
											"end": 82195,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 82180,
											"end": 82195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 82180,
											"end": 82186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 82180,
											"end": 82195,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 82180,
											"end": 82195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 82180,
											"end": 82195,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 82176,
											"end": 82266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 82176,
											"end": 82266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 82240,
											"end": 82246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82248,
											"end": 82253,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "PUSH",
											"source": 0,
											"value": "4B800E4600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 82219,
											"end": 82254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82219,
											"end": 82254,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 82176,
											"end": 82266,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 82176,
											"end": 82266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82278,
											"end": 82309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 82287,
											"end": 82292,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 82294,
											"end": 82301,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 82303,
											"end": 82308,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 82278,
											"end": 82286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 82278,
											"end": 82309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82278,
											"end": 82309,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 82278,
											"end": 82309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81819,
											"end": 82317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81819,
											"end": 82317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81819,
											"end": 82317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81622,
											"end": 82317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18759,
											"end": 18766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18786,
											"end": 18797,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18798,
											"end": 18803,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18786,
											"end": 18804,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18805,
											"end": 18812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18786,
											"end": 18813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2717,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2717,
											"end": 2730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3869,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3849,
											"end": 3871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3849,
											"end": 3871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3871,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3845,
											"end": 3938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3845,
											"end": 3938,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3895,
											"end": 3926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3926,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3845,
											"end": 3938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3845,
											"end": 3938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 3976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3967,
											"end": 3975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 3966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3948,
											"end": 3976,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 3976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3948,
											"end": 3976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 883,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 785,
											"end": 883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 838,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 875,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 858,
											"end": 875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 858,
											"end": 875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23967,
											"end": 24097,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 23967,
											"end": 24097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24052,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 24061,
											"end": 24066,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24077,
											"end": 24082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24088,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24052,
											"end": 24060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 24052,
											"end": 24089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24052,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 24052,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23967,
											"end": 24097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23967,
											"end": 24097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23967,
											"end": 24097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23967,
											"end": 24097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25683,
											"end": 26170,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 25683,
											"end": 26170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25783,
											"end": 25807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25810,
											"end": 25835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 25820,
											"end": 25825,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25827,
											"end": 25834,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25810,
											"end": 25835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25835,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 25810,
											"end": 25835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25783,
											"end": 25835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25783,
											"end": 25835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25870,
											"end": 25887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25850,
											"end": 25866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25850,
											"end": 25887,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25846,
											"end": 26163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 25846,
											"end": 26163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25927,
											"end": 25932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25908,
											"end": 25924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25908,
											"end": 25932,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25904,
											"end": 26036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25904,
											"end": 26036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 25904,
											"end": 26036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25987,
											"end": 25994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25996,
											"end": 26012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26014,
											"end": 26019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 25960,
											"end": 26020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26020,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25904,
											"end": 26036,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 25904,
											"end": 26036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26079,
											"end": 26136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 26088,
											"end": 26093,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26095,
											"end": 26102,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26123,
											"end": 26128,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26104,
											"end": 26120,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26104,
											"end": 26128,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26130,
											"end": 26135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26079,
											"end": 26087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 26079,
											"end": 26136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26079,
											"end": 26136,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 26079,
											"end": 26136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25846,
											"end": 26163,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 25846,
											"end": 26163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25772,
											"end": 26170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25683,
											"end": 26170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25683,
											"end": 26170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25683,
											"end": 26170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25683,
											"end": 26170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20542,
											"end": 20850,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 20542,
											"end": 20850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 20643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20626,
											"end": 20644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20626,
											"end": 20644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20626,
											"end": 20630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20626,
											"end": 20644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20626,
											"end": 20644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20626,
											"end": 20644,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20622,
											"end": 20710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20622,
											"end": 20710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20695,
											"end": 20696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 20668,
											"end": 20698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20668,
											"end": 20698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20622,
											"end": 20710,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20622,
											"end": 20710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20738,
											"end": 20739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20724,
											"end": 20740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20724,
											"end": 20740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20724,
											"end": 20740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20740,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20720,
											"end": 20808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20720,
											"end": 20808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 20764,
											"end": 20796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20720,
											"end": 20808,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20720,
											"end": 20808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20818,
											"end": 20842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20826,
											"end": 20830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 20834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20841,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20818,
											"end": 20825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20818,
											"end": 20842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20818,
											"end": 20842,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20818,
											"end": 20842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20542,
											"end": 20850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20542,
											"end": 20850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20542,
											"end": 20850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20542,
											"end": 20850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75590,
											"end": 75858,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 75590,
											"end": 75858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75643,
											"end": 75650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75684,
											"end": 75695,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3140"
										},
										{
											"begin": 75667,
											"end": 75695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75667,
											"end": 75695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75675,
											"end": 75679,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 75667,
											"end": 75695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75667,
											"end": 75695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75667,
											"end": 75695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75667,
											"end": 75730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75667,
											"end": 75730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75667,
											"end": 75730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 75667,
											"end": 75730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75667,
											"end": 75730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75716,
											"end": 75730,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3138"
										},
										{
											"begin": 75699,
											"end": 75712,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 75699,
											"end": 75730,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75667,
											"end": 75730,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 75667,
											"end": 75730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75663,
											"end": 75851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75663,
											"end": 75851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 75663,
											"end": 75851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75776,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3136"
										},
										{
											"begin": 75747,
											"end": 75776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75747,
											"end": 75776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75747,
											"end": 75776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 75747,
											"end": 75776,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75663,
											"end": 75851,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 75663,
											"end": 75851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75816,
											"end": 75839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 75816,
											"end": 75837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 75816,
											"end": 75839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75816,
											"end": 75839,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 75816,
											"end": 75839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75809,
											"end": 75839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75809,
											"end": 75839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75590,
											"end": 75858,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 75590,
											"end": 75858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75590,
											"end": 75858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75590,
											"end": 75858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3162,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2996,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3067,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3067,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3067,
											"end": 3079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3067,
											"end": 3079,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3067,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3079,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3056,
											"end": 3079,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3056,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3056,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3079,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3056,
											"end": 3079,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3079,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3130,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3130,
											"end": 3142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3103,
											"end": 3143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3103,
											"end": 3143,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22662,
											"end": 22875,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 22662,
											"end": 22875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22752,
											"end": 22753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22733,
											"end": 22754,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22733,
											"end": 22754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22740,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22754,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22733,
											"end": 22754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22754,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22729,
											"end": 22822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 22729,
											"end": 22822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22807,
											"end": 22808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 22778,
											"end": 22810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22778,
											"end": 22810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22729,
											"end": 22822,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 22729,
											"end": 22822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22832,
											"end": 22867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 22848,
											"end": 22849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22852,
											"end": 22859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22861,
											"end": 22866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22832,
											"end": 22839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 22832,
											"end": 22867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22832,
											"end": 22867,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 22832,
											"end": 22867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22662,
											"end": 22875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22662,
											"end": 22875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22662,
											"end": 22875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4335,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4144,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4218,
											"end": 4234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4308,
											"end": 4316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4327,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4207,
											"end": 4335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79183,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 79074,
											"end": 79183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79134,
											"end": 79141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79161,
											"end": 79168,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79169,
											"end": 79174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 79161,
											"end": 79175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79154,
											"end": 79175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79154,
											"end": 79175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77832,
											"end": 77960,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 77832,
											"end": 77960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77878,
											"end": 77891,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 77911,
											"end": 77952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 77938,
											"end": 77951,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 77911,
											"end": 77916,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3147"
										},
										{
											"begin": 77911,
											"end": 77937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 77911,
											"end": 77937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77911,
											"end": 77952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77911,
											"end": 77952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77911,
											"end": 77952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 77911,
											"end": 77952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77911,
											"end": 77952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77911,
											"end": 77952,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 77911,
											"end": 77952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77904,
											"end": 77952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77904,
											"end": 77952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77832,
											"end": 77960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77832,
											"end": 77960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78295,
											"end": 78432,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 78295,
											"end": 78432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78344,
											"end": 78357,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 78377,
											"end": 78424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 78407,
											"end": 78423,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 78377,
											"end": 78385,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3150"
										},
										{
											"begin": 78377,
											"end": 78406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 78377,
											"end": 78406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78377,
											"end": 78424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78377,
											"end": 78424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78377,
											"end": 78424,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 78377,
											"end": 78424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78377,
											"end": 78424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78377,
											"end": 78424,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 78377,
											"end": 78424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78370,
											"end": 78424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78370,
											"end": 78424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78295,
											"end": 78432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78295,
											"end": 78432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79304,
											"end": 79706,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 79304,
											"end": 79706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79671,
											"end": 79678,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79679,
											"end": 79684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79671,
											"end": 79687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79687,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79687,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79671,
											"end": 79687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79671,
											"end": 79687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 79664,
											"end": 79687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79664,
											"end": 79687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79304,
											"end": 79706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79304,
											"end": 79706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79304,
											"end": 79706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79304,
											"end": 79706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76689,
											"end": 76867,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 76689,
											"end": 76867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76766,
											"end": 76773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76793,
											"end": 76859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 76826,
											"end": 76846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 76826,
											"end": 76844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 76826,
											"end": 76846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76826,
											"end": 76846,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 76826,
											"end": 76846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76848,
											"end": 76858,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76793,
											"end": 76825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 76793,
											"end": 76859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76793,
											"end": 76859,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 76793,
											"end": 76859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76786,
											"end": 76859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76786,
											"end": 76859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76689,
											"end": 76867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76689,
											"end": 76867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76689,
											"end": 76867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76689,
											"end": 76867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37221,
											"end": 37485,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 37221,
											"end": 37485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37306,
											"end": 37313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37327,
											"end": 37344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37346,
											"end": 37364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37366,
											"end": 37382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 37397,
											"end": 37401,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37403,
											"end": 37404,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37406,
											"end": 37407,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37409,
											"end": 37410,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 37386,
											"end": 37411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37411,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 37386,
											"end": 37411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37326,
											"end": 37411,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37326,
											"end": 37411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37326,
											"end": 37411,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37326,
											"end": 37411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37326,
											"end": 37411,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37326,
											"end": 37411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37422,
											"end": 37450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 37434,
											"end": 37439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37441,
											"end": 37449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37422,
											"end": 37433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 37422,
											"end": 37450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37422,
											"end": 37450,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 37422,
											"end": 37450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37468,
											"end": 37477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 37477,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 37477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 37477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 37477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 37477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37221,
											"end": 37485,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37221,
											"end": 37485,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37221,
											"end": 37485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37221,
											"end": 37485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37221,
											"end": 37485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37221,
											"end": 37485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37221,
											"end": 37485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 25391,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 24948,
											"end": 25391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25078,
											"end": 25079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25061,
											"end": 25080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25061,
											"end": 25080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25061,
											"end": 25066,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25061,
											"end": 25080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25061,
											"end": 25080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25061,
											"end": 25080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 25057,
											"end": 25148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25133,
											"end": 25134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25104,
											"end": 25136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25136,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25057,
											"end": 25148,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 25057,
											"end": 25148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25162,
											"end": 25183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25162,
											"end": 25183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25162,
											"end": 25183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25183,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25158,
											"end": 25250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 25158,
											"end": 25250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25235,
											"end": 25236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25207,
											"end": 25238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25238,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25158,
											"end": 25250,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 25158,
											"end": 25250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25290,
											"end": 25295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25271,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25272,
											"end": 25277,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25260,
											"end": 25278,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25279,
											"end": 25286,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25260,
											"end": 25287,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25295,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25310,
											"end": 25319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25306,
											"end": 25384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25306,
											"end": 25384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 25306,
											"end": 25384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25357,
											"end": 25364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25350,
											"end": 25355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 25366,
											"end": 25371,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25341,
											"end": 25372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25372,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 25306,
											"end": 25384,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 25306,
											"end": 25384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 25391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 25391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 25391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 25391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 25391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21174,
											"end": 22309,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 21174,
											"end": 22309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21280,
											"end": 21281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21264,
											"end": 21282,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21264,
											"end": 21282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21264,
											"end": 21268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21264,
											"end": 21282,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21264,
											"end": 21282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21264,
											"end": 21282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21260,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 21260,
											"end": 21812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21414,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21402,
											"end": 21414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 21402,
											"end": 21423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21260,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 21260,
											"end": 21812,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21260,
											"end": 21812,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 21260,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21478,
											"end": 21487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21488,
											"end": 21492,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21526,
											"end": 21531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21512,
											"end": 21523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21512,
											"end": 21531,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 21508,
											"end": 21625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21584,
											"end": 21588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21590,
											"end": 21601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21603,
											"end": 21608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 21559,
											"end": 21609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21609,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21625,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 21508,
											"end": 21625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21766,
											"end": 21777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21766,
											"end": 21785,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21758,
											"end": 21762,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21748,
											"end": 21763,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21785,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21441,
											"end": 21812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21260,
											"end": 21812,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 21260,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21842,
											"end": 21843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21828,
											"end": 21844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21828,
											"end": 21844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21828,
											"end": 21844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21824,
											"end": 22259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 21824,
											"end": 22259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22006,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21994,
											"end": 22006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21994,
											"end": 22015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22015,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22015,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22015,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21824,
											"end": 22259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 21824,
											"end": 22259,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21824,
											"end": 22259,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 21824,
											"end": 22259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22227,
											"end": 22232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22220,
											"end": 22222,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22210,
											"end": 22232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22232,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22232,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21824,
											"end": 22259,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 21824,
											"end": 22259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22291,
											"end": 22293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22285,
											"end": 22289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 22295,
											"end": 22300,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22276,
											"end": 22301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22301,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21174,
											"end": 22309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21174,
											"end": 22309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21174,
											"end": 22309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21174,
											"end": 22309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75866,
											"end": 76047,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 75866,
											"end": 76047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75921,
											"end": 75928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73782,
											"end": 73877,
											"name": "PUSH",
											"source": 0,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 75980,
											"end": 75991,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3142"
										},
										{
											"begin": 75993,
											"end": 76007,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3144"
										},
										{
											"begin": 76009,
											"end": 76022,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 76032,
											"end": 76036,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 75958,
											"end": 76038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75958,
											"end": 76038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75948,
											"end": 76039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75948,
											"end": 76039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75948,
											"end": 76039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75948,
											"end": 76039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75948,
											"end": 76039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75948,
											"end": 76039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 75941,
											"end": 76039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75941,
											"end": 76039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75866,
											"end": 76047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75866,
											"end": 76047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70802,
											"end": 71075,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 70802,
											"end": 71075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70896,
											"end": 70909,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 68748,
											"end": 68814,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 70955,
											"end": 70972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70955,
											"end": 70972,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 70945,
											"end": 70950,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 70926,
											"end": 70972,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70922,
											"end": 71068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 70922,
											"end": 71068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70996,
											"end": 71011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 71005,
											"end": 71010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 70996,
											"end": 71004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 70996,
											"end": 71011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70996,
											"end": 71011,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 70996,
											"end": 71011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70989,
											"end": 71011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70989,
											"end": 71011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70989,
											"end": 71011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 70989,
											"end": 71011,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70922,
											"end": 71068,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 70922,
											"end": 71068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71051,
											"end": 71056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 71044,
											"end": 71056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 71044,
											"end": 71056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71044,
											"end": 71056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70802,
											"end": 71075,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 70802,
											"end": 71075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70802,
											"end": 71075,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70802,
											"end": 71075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70802,
											"end": 71075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70802,
											"end": 71075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70802,
											"end": 71075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62713,
											"end": 63123,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 62713,
											"end": 63123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62806,
											"end": 62820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62918,
											"end": 62922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62912,
											"end": 62923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62949,
											"end": 62959,
											"name": "PUSH",
											"source": 0,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 62944,
											"end": 62947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62937,
											"end": 62960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62997,
											"end": 63012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62990,
											"end": 62994,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62985,
											"end": 62988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62981,
											"end": 62995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62974,
											"end": 63013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63050,
											"end": 63060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63043,
											"end": 63047,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 63038,
											"end": 63041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63034,
											"end": 63048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63027,
											"end": 63061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63100,
											"end": 63104,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 63095,
											"end": 63098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63085,
											"end": 63105,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 63075,
											"end": 63105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63075,
											"end": 63105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62886,
											"end": 63116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62713,
											"end": 63123,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 62713,
											"end": 63123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62713,
											"end": 63123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62713,
											"end": 63123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62713,
											"end": 63123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 37082,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 35526,
											"end": 37082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35666,
											"end": 35678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35680,
											"end": 35687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36600,
											"end": 36666,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 36595,
											"end": 36596,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36587,
											"end": 36597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36587,
											"end": 36597,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 36587,
											"end": 36666,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36583,
											"end": 36749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36583,
											"end": 36749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 36583,
											"end": 36749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36699,
											"end": 36700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36703,
											"end": 36733,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36735,
											"end": 36736,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36683,
											"end": 36737,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36683,
											"end": 36737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36683,
											"end": 36737,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36683,
											"end": 36737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36683,
											"end": 36737,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36683,
											"end": 36737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36683,
											"end": 36737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 36683,
											"end": 36737,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36583,
											"end": 36749,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 36583,
											"end": 36749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36846,
											"end": 36860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36873,
											"end": 36877,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36879,
											"end": 36880,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36882,
											"end": 36883,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36885,
											"end": 36886,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 36863,
											"end": 36887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36863,
											"end": 36887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36846,
											"end": 36887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36846,
											"end": 36887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36920,
											"end": 36921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36902,
											"end": 36922,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36902,
											"end": 36922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36902,
											"end": 36908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36902,
											"end": 36922,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36902,
											"end": 36922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36902,
											"end": 36922,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36898,
											"end": 37013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 36898,
											"end": 37013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36955,
											"end": 36956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36959,
											"end": 36988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36998,
											"end": 36999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36990,
											"end": 37000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36990,
											"end": 37000,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 36939,
											"end": 37001,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36939,
											"end": 37001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36939,
											"end": 37001,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36939,
											"end": 37001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36939,
											"end": 37001,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36939,
											"end": 37001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36939,
											"end": 37001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36939,
											"end": 37001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 36939,
											"end": 37001,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36898,
											"end": 37013,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 36898,
											"end": 37013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37033,
											"end": 37039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37071,
											"end": 37072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37063,
											"end": 37073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37063,
											"end": 37073,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 37025,
											"end": 37074,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37025,
											"end": 37074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37025,
											"end": 37074,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37025,
											"end": 37074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37025,
											"end": 37074,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37025,
											"end": 37074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37025,
											"end": 37074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 37082,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 35526,
											"end": 37082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 37082,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 37082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 37082,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 37082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 37082,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 37082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 37082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 37082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35526,
											"end": 37082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37623,
											"end": 38165,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 37623,
											"end": 38165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37719,
											"end": 37739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 37710,
											"end": 37739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 37710,
											"end": 37739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37710,
											"end": 37739,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37706,
											"end": 38158,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 37706,
											"end": 38158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37817,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 37808,
											"end": 37846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 37808,
											"end": 37846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37808,
											"end": 37846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 38158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 37804,
											"end": 38158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "PUSH",
											"source": 0,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 37893,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 38158,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 37804,
											"end": 38158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37924,
											"end": 37959,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 37915,
											"end": 37959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 37915,
											"end": 37959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37915,
											"end": 37959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37911,
											"end": 38158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 37911,
											"end": 38158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38019,
											"end": 38027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38011,
											"end": 38028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38011,
											"end": 38028,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "PUSH",
											"source": 0,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 37983,
											"end": 38029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37911,
											"end": 38158,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 37911,
											"end": 38158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38060,
											"end": 38090,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 38051,
											"end": 38090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 38051,
											"end": 38090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38090,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38047,
											"end": 38158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 38047,
											"end": 38158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38137,
											"end": 38145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "PUSH",
											"source": 0,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 38114,
											"end": 38146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38146,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38047,
											"end": 38158,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 38047,
											"end": 38158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37623,
											"end": 38165,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 37623,
											"end": 38165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37623,
											"end": 38165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37623,
											"end": 38165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37623,
											"end": 38165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69457,
											"end": 69872,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 69457,
											"end": 69872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69516,
											"end": 69529,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 69542,
											"end": 69553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69556,
											"end": 69572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 69567,
											"end": 69571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69556,
											"end": 69566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 69556,
											"end": 69572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69556,
											"end": 69572,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 69556,
											"end": 69572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69542,
											"end": 69572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69542,
											"end": 69572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69662,
											"end": 69679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69693,
											"end": 69695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 69682,
											"end": 69696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69682,
											"end": 69696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69662,
											"end": 69696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69662,
											"end": 69696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69787,
											"end": 69790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69782,
											"end": 69785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69775,
											"end": 69791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69828,
											"end": 69832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69821,
											"end": 69825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69816,
											"end": 69819,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69812,
											"end": 69826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69805,
											"end": 69833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69861,
											"end": 69864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69854,
											"end": 69864,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69854,
											"end": 69864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69854,
											"end": 69864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69854,
											"end": 69864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69457,
											"end": 69872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69457,
											"end": 69872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69457,
											"end": 69872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69457,
											"end": 69872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69949,
											"end": 70200,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 69949,
											"end": 70200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70010,
											"end": 70017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70030,
											"end": 70044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70083,
											"end": 70087,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 70074,
											"end": 70078,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 70047,
											"end": 70080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70047,
											"end": 70080,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 70047,
											"end": 70087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70030,
											"end": 70087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70030,
											"end": 70087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70111,
											"end": 70113,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 70102,
											"end": 70108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70102,
											"end": 70113,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 70098,
											"end": 70169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70098,
											"end": 70169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 70098,
											"end": 70169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "PUSH",
											"source": 0,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70137,
											"end": 70157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70098,
											"end": 70169,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 70098,
											"end": 70169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70186,
											"end": 70192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70179,
											"end": 70192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70179,
											"end": 70192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70179,
											"end": 70192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69949,
											"end": 70200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69949,
											"end": 70200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69949,
											"end": 70200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69949,
											"end": 70200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 5041,
											"end": 5046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5023,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5272,
											"end": 5273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5254,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5204,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5384,
											"end": 5393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5382,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5394,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5399,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5402,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 5592,
											"end": 5599,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5568,
											"end": 5590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5547,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5493,
											"end": 5610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5765,
											"name": "PUSH",
											"source": 1,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5692,
											"end": 5697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 5880,
											"end": 5885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5863,
											"end": 5886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5851,
											"end": 5887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 6004,
											"end": 6009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5986,
											"end": 6010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 5984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6242,
											"end": 6253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6444,
											"end": 6458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6566,
											"end": 6571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6548,
											"end": 6572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6543,
											"end": 6546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6536,
											"end": 6573,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 6717,
											"end": 6720,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6675,
											"end": 6721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 6758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6867,
											"end": 6870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6863,
											"end": 6877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 7067,
											"end": 7121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 7216,
											"end": 7222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7211,
											"end": 7214,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 7137,
											"end": 7223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 7297,
											"end": 7302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7247,
											"end": 7303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7367,
											"end": 7373,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7374,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7443,
											"end": 7449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 7529,
											"end": 7532,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7470,
											"end": 7533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7556,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7390,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7642,
											"end": 7645,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8047,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8033,
											"end": 8042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 8124,
											"end": 8125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8122,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8100,
											"end": 8106,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8058,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8164,
											"end": 8184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8144,
											"end": 8162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 8275,
											"end": 8279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8272,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 8202,
											"end": 8280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8327,
											"end": 8336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8337,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8314,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8301,
											"end": 8310,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8297,
											"end": 8315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8290,
											"end": 8338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 8428,
											"end": 8432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8425,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 8355,
											"end": 8433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8511,
											"end": 8513,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8500,
											"end": 8509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8496,
											"end": 8514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8493,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 8443,
											"end": 8515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 8593,
											"end": 8596,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8582,
											"end": 8591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 8525,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 8676,
											"end": 8679,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8665,
											"end": 8674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8661,
											"end": 8680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8658,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 8608,
											"end": 8681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8729,
											"end": 8738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8719,
											"end": 8739,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8713,
											"end": 8716,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 8702,
											"end": 8711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8691,
											"end": 8740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8851,
											"end": 8857,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 8757,
											"end": 8865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 8975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9009,
											"end": 9011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8998,
											"end": 9007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8994,
											"end": 9012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8986,
											"end": 9012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8986,
											"end": 9012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 9090,
											"end": 9091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9075,
											"end": 9092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9072,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 9022,
											"end": 9093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9224,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 9106,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 9193,
											"end": 9198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 9177,
											"end": 9199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9170,
											"end": 9175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9167,
											"end": 9200,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9211,
											"end": 9212,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9216,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 9353,
											"end": 9358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 9328,
											"end": 9359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 9462,
											"end": 9467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 9444,
											"end": 9468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9434,
											"end": 9469,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9483,
											"end": 9484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9473,
											"end": 9485,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9371,
											"end": 9493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9583,
											"end": 9589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9570,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9561,
											"end": 9590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9561,
											"end": 9590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 9626,
											"end": 9631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9599,
											"end": 9632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9763,
											"end": 9769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9779,
											"end": 9785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9787,
											"end": 9793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9801,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9852,
											"end": 9855,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9831,
											"end": 9838,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 9827,
											"end": 9850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9823,
											"end": 9856,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 9859,
											"end": 9938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 9980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10029,
											"end": 10038,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10025,
											"end": 10047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10004,
											"end": 10057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9994,
											"end": 10057,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 9994,
											"end": 10057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9950,
											"end": 10067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10106,
											"end": 10108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 10177,
											"end": 10184,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10168,
											"end": 10174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10157,
											"end": 10166,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10132,
											"end": 10185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10185,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 10305,
											"end": 10312,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10296,
											"end": 10302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10285,
											"end": 10294,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10281,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10260,
											"end": 10313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10313,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10205,
											"end": 10323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 10433,
											"end": 10440,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10424,
											"end": 10430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10422,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10388,
											"end": 10441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10441,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10490,
											"end": 10493,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 10560,
											"end": 10567,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10551,
											"end": 10557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10549,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 10517,
											"end": 10568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10568,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10461,
											"end": 10578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10620,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 10689,
											"end": 10696,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10669,
											"end": 10678,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10665,
											"end": 10687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 10644,
											"end": 10697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10588,
											"end": 10707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 10749,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 10818,
											"end": 10825,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10798,
											"end": 10807,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10794,
											"end": 10816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 10773,
											"end": 10826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10763,
											"end": 10826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10763,
											"end": 10826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10717,
											"end": 10836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10925,
											"end": 10931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10974,
											"end": 10976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10962,
											"end": 10971,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 10960,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10949,
											"end": 10972,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10945,
											"end": 10977,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 10980,
											"end": 11059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11100,
											"end": 11101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 11170,
											"end": 11177,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11150,
											"end": 11159,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11146,
											"end": 11168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 11125,
											"end": 11178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11115,
											"end": 11178,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11115,
											"end": 11178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11071,
											"end": 11188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 11298,
											"end": 11305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11274,
											"end": 11296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 11253,
											"end": 11306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11198,
											"end": 11316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11329,
											"end": 11509,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11329,
											"end": 11509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11377,
											"end": 11454,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11374,
											"end": 11375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11367,
											"end": 11455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11474,
											"end": 11478,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11471,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11464,
											"end": 11479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11498,
											"end": 11502,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11495,
											"end": 11496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11488,
											"end": 11503,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11559,
											"end": 11565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11596,
											"end": 11597,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11590,
											"end": 11594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11586,
											"end": 11598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11643,
											"end": 11644,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11637,
											"end": 11641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11645,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11664,
											"end": 11682,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11720,
											"end": 11724,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 11712,
											"end": 11718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11708,
											"end": 11725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11782,
											"end": 11784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11771,
											"end": 11785,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11751,
											"end": 11769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11748,
											"end": 11786,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11801,
											"end": 11819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11841,
											"end": 12021,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 11841,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11889,
											"end": 11966,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11886,
											"end": 11887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11879,
											"end": 11967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 11990,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 11983,
											"end": 11984,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11976,
											"end": 11991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12010,
											"end": 12014,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12007,
											"end": 12008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12260,
											"end": 12264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12298,
											"end": 12301,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 12287,
											"end": 12296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12275,
											"end": 12302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12275,
											"end": 12302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 12380,
											"end": 12381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12369,
											"end": 12378,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12365,
											"end": 12382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12356,
											"end": 12362,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 12312,
											"end": 12383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12383,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 12312,
											"end": 12383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 12461,
											"end": 12463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12450,
											"end": 12459,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12446,
											"end": 12464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12437,
											"end": 12443,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12393,
											"end": 12465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12465,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 12393,
											"end": 12465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 12543,
											"end": 12545,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12532,
											"end": 12541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12528,
											"end": 12546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12519,
											"end": 12525,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12475,
											"end": 12547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12547,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 12475,
											"end": 12547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 12625,
											"end": 12627,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12614,
											"end": 12623,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12610,
											"end": 12628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12601,
											"end": 12607,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12557,
											"end": 12629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 12707,
											"end": 12710,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12696,
											"end": 12705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12689,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12639,
											"end": 12712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12712,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 12639,
											"end": 12712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 12790,
											"end": 12793,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 12779,
											"end": 12788,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12766,
											"end": 12772,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12722,
											"end": 12795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12795,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 12722,
											"end": 12795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12967,
											"end": 12969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12956,
											"end": 12965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12944,
											"end": 12970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12944,
											"end": 12970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12980,
											"end": 13051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 13048,
											"end": 13049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13037,
											"end": 13046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13033,
											"end": 13050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13024,
											"end": 13030,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12980,
											"end": 13051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12980,
											"end": 13051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12980,
											"end": 13051,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 12980,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 13129,
											"end": 13131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13118,
											"end": 13127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13105,
											"end": 13111,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 13061,
											"end": 13133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13133,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 13061,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13295,
											"end": 13299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13333,
											"end": 13335,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13322,
											"end": 13331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13310,
											"end": 13336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13310,
											"end": 13336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 13414,
											"end": 13415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13403,
											"end": 13412,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 13416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13390,
											"end": 13396,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 13346,
											"end": 13417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 13495,
											"end": 13497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13484,
											"end": 13493,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 13498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13471,
											"end": 13477,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 13427,
											"end": 13499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13509,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 13577,
											"end": 13579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13566,
											"end": 13575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13553,
											"end": 13559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13509,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 13509,
											"end": 13581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13509,
											"end": 13581,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 13509,
											"end": 13581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13594,
											"end": 13774,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 13594,
											"end": 13774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13642,
											"end": 13719,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13639,
											"end": 13640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13632,
											"end": 13720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13739,
											"end": 13743,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 13736,
											"end": 13737,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13729,
											"end": 13744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13763,
											"end": 13767,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13760,
											"end": 13761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13753,
											"end": 13768,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13820,
											"end": 13823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 13857,
											"end": 13858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 13839,
											"end": 13859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13834,
											"end": 13859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13834,
											"end": 13859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 13891,
											"end": 13892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 13873,
											"end": 13893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13868,
											"end": 13893,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13868,
											"end": 13893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13916,
											"end": 13917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13909,
											"end": 13918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13902,
											"end": 13918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13902,
											"end": 13918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13937,
											"end": 13940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13934,
											"end": 13935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13931,
											"end": 13941,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 13944,
											"end": 13962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14182,
											"end": 14186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14223,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 14209,
											"end": 14218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14205,
											"end": 14224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14197,
											"end": 14224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14197,
											"end": 14224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 14302,
											"end": 14303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14291,
											"end": 14300,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14287,
											"end": 14304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14284,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14234,
											"end": 14305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 14383,
											"end": 14385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14372,
											"end": 14381,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14368,
											"end": 14386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14365,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14315,
											"end": 14387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 14465,
											"end": 14467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14454,
											"end": 14463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14450,
											"end": 14468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14441,
											"end": 14447,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14397,
											"end": 14469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 14547,
											"end": 14549,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14536,
											"end": 14545,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14532,
											"end": 14550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14523,
											"end": 14529,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 14479,
											"end": 14551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 14629,
											"end": 14632,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14618,
											"end": 14627,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14605,
											"end": 14611,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 14561,
											"end": 14634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14820,
											"end": 14824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14858,
											"end": 14861,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14847,
											"end": 14856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14843,
											"end": 14862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14835,
											"end": 14862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14835,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 14940,
											"end": 14941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14929,
											"end": 14938,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14916,
											"end": 14922,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14872,
											"end": 14943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 15017,
											"end": 15019,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15006,
											"end": 15015,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15002,
											"end": 15020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14993,
											"end": 14999,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 14953,
											"end": 15021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 15099,
											"end": 15101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15088,
											"end": 15097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15084,
											"end": 15102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15075,
											"end": 15081,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 15031,
											"end": 15103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 15181,
											"end": 15183,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15170,
											"end": 15179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15166,
											"end": 15184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15163,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 15113,
											"end": 15185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15198,
											"end": 15378,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 15198,
											"end": 15378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15323,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15243,
											"end": 15244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15236,
											"end": 15324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15343,
											"end": 15347,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 15340,
											"end": 15341,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15333,
											"end": 15348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15367,
											"end": 15371,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15364,
											"end": 15365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15357,
											"end": 15372,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20/ERC20_flatten.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"MyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 424,
								"contract": "contracts/ERC20/ERC20_flatten.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 430,
								"contract": "contracts/ERC20/ERC20_flatten.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 432,
								"contract": "contracts/ERC20/ERC20_flatten.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 434,
								"contract": "contracts/ERC20/ERC20_flatten.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 436,
								"contract": "contracts/ERC20/ERC20_flatten.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 35,
								"contract": "contracts/ERC20/ERC20_flatten.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 3152,
								"contract": "contracts/ERC20/ERC20_flatten.sol:MyToken",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 3154,
								"contract": "contracts/ERC20/ERC20_flatten.sol:MyToken",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 3355,
								"contract": "contracts/ERC20/ERC20_flatten.sol:MyToken",
								"label": "_nonces",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"Nonces\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3355,
								"contract": "contracts/ERC20/ERC20_flatten.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 35,
								"contract": "contracts/ERC20/ERC20_flatten.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20/ERC20_flatten.sol\":68611:71747  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20/ERC20_flatten.sol\":68611:71747  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122096b24d8a6b965280ca51dbf361ac266a0a1e53b58ab4a856dc86a6d7ccac820f64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122096b24d8a6b965280ca51dbf361ac266a0a1e53b58ab4a856dc86a6d7ccac820f64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xB2 0x4D DUP11 PUSH12 0x965280CA51DBF361AC266A0A 0x1E MSTORE8 0xB5 DUP11 0xB4 0xA8 JUMP 0xDC DUP7 0xA6 0xD7 0xCC 0xAC DUP3 0xF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "68611:3136:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122096b24d8a6b965280ca51dbf361ac266a0a1e53b58ab4a856dc86a6d7ccac820f64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xB2 0x4D DUP11 PUSH12 0x965280CA51DBF361AC266A0A 0x1E MSTORE8 0xB5 DUP11 0xB4 0xA8 JUMP 0xDC DUP7 0xA6 0xD7 0xCC 0xAC DUP3 0xF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "68611:3136:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 68611,
									"end": 71747,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122096b24d8a6b965280ca51dbf361ac266a0a1e53b58ab4a856dc86a6d7ccac820f64736f6c63430008140033",
									".code": [
										{
											"begin": 68611,
											"end": 71747,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 68611,
											"end": 71747,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 68611,
											"end": 71747,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68611,
											"end": 71747,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 68611,
											"end": 71747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68611,
											"end": 71747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68611,
											"end": 71747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68611,
											"end": 71747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68611,
											"end": 71747,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20/ERC20_flatten.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20/ERC20_flatten.sol\":54956:56037  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20/ERC20_flatten.sol\":54956:56037  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208c962e0c56b944c6231c20973e4e3cb66719e36e0197ef68d1c80399c67e6f9d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208c962e0c56b944c6231c20973e4e3cb66719e36e0197ef68d1c80399c67e6f9d64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 SWAP7 0x2E 0xC JUMP 0xB9 PREVRANDAO 0xC6 0x23 SHR KECCAK256 SWAP8 RETURNDATACOPY 0x4E EXTCODECOPY 0xB6 PUSH8 0x19E36E0197EF68D1 0xC8 SUB SWAP10 0xC6 PUSH31 0x6F9D64736F6C63430008140033000000000000000000000000000000000000 ",
							"sourceMap": "54956:1081:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208c962e0c56b944c6231c20973e4e3cb66719e36e0197ef68d1c80399c67e6f9d64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 SWAP7 0x2E 0xC JUMP 0xB9 PREVRANDAO 0xC6 0x23 SHR KECCAK256 SWAP8 RETURNDATACOPY 0x4E EXTCODECOPY 0xB6 PUSH8 0x19E36E0197EF68D1 0xC8 SUB SWAP10 0xC6 PUSH31 0x6F9D64736F6C63430008140033000000000000000000000000000000000000 ",
							"sourceMap": "54956:1081:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54956,
									"end": 56037,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208c962e0c56b944c6231c20973e4e3cb66719e36e0197ef68d1c80399c67e6f9d64736f6c63430008140033",
									".code": [
										{
											"begin": 54956,
											"end": 56037,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 54956,
											"end": 56037,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 54956,
											"end": 56037,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54956,
											"end": 56037,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 54956,
											"end": 56037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54956,
											"end": 56037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54956,
											"end": 56037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54956,
											"end": 56037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54956,
											"end": 56037,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20/ERC20_flatten.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20/ERC20_flatten.sol\":64489:67278  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20/ERC20_flatten.sol\":64489:67278  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ff6b0dd0b1058eada51a27ad730aed00201dafca0f06a648d39b3c2af7e090db64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ff6b0dd0b1058eada51a27ad730aed00201dafca0f06a648d39b3c2af7e090db64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT PUSH12 0xDD0B1058EADA51A27AD730A 0xED STOP KECCAK256 SAR 0xAF 0xCA 0xF MOD 0xA6 BASEFEE 0xD3 SWAP12 EXTCODECOPY 0x2A 0xF7 0xE0 SWAP1 0xDB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "64489:2789:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ff6b0dd0b1058eada51a27ad730aed00201dafca0f06a648d39b3c2af7e090db64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT PUSH12 0xDD0B1058EADA51A27AD730A 0xED STOP KECCAK256 SAR 0xAF 0xCA 0xF MOD 0xA6 BASEFEE 0xD3 SWAP12 EXTCODECOPY 0x2A 0xF7 0xE0 SWAP1 0xDB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "64489:2789:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 64489,
									"end": 67278,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff6b0dd0b1058eada51a27ad730aed00201dafca0f06a648d39b3c2af7e090db64736f6c63430008140033",
									".code": [
										{
											"begin": 64489,
											"end": 67278,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 64489,
											"end": 67278,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 64489,
											"end": 67278,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64489,
											"end": 67278,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 64489,
											"end": 67278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64489,
											"end": 67278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64489,
											"end": 67278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64489,
											"end": 67278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64489,
											"end": 67278,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20/ERC20_flatten.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20/ERC20_flatten.sol\":56293:59222  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20/ERC20_flatten.sol\":56293:59222  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220efe526dc4d475c49abb29788fcaa0bd6059e1ce3c8615951bb8e6bc4d64935f164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220efe526dc4d475c49abb29788fcaa0bd6059e1ce3c8615951bb8e6bc4d64935f164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xE5 0x26 0xDC 0x4D SELFBALANCE 0x5C 0x49 0xAB 0xB2 SWAP8 DUP9 0xFC 0xAA SIGNEXTEND 0xD6 SDIV SWAP15 SHR 0xE3 0xC8 PUSH2 0x5951 0xBB DUP15 PUSH12 0xC4D64935F164736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "56293:2929:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220efe526dc4d475c49abb29788fcaa0bd6059e1ce3c8615951bb8e6bc4d64935f164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xE5 0x26 0xDC 0x4D SELFBALANCE 0x5C 0x49 0xAB 0xB2 SWAP8 DUP9 0xFC 0xAA SIGNEXTEND 0xD6 SDIV SWAP15 SHR 0xE3 0xC8 PUSH2 0x5951 0xBB DUP15 PUSH12 0xC4D64935F164736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "56293:2929:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56293,
									"end": 59222,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220efe526dc4d475c49abb29788fcaa0bd6059e1ce3c8615951bb8e6bc4d64935f164736f6c63430008140033",
									".code": [
										{
											"begin": 56293,
											"end": 59222,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 56293,
											"end": 59222,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 56293,
											"end": 59222,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56293,
											"end": 59222,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56293,
											"end": 59222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56293,
											"end": 59222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56293,
											"end": 59222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56293,
											"end": 59222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56293,
											"end": 59222,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20/ERC20_flatten.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/ERC20_flatten.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/ERC20_flatten.sol\":{\"keccak256\":\"0x8bb57c3651cd6a37b83d3cff76f01e3ddf1ea0f465d615bd6a4833960f17fd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fc9e05e0b6f7bd55f7071bfcb12a6e21bfe4d209c620c55f0eb05d726ac9ee\",\"dweb:/ipfs/QmaejE8QaCzCCUbmCwCsZG2SDPhwet1aagodVDzzkoAY3K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ERC20/ERC20_flatten.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20/ERC20_flatten.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"ECDSA": [
							1298
						],
						"EIP712": [
							3342
						],
						"ERC20": [
							916
						],
						"ERC20Permit": [
							3552
						],
						"IERC1155Errors": [
							310
						],
						"IERC20": [
							387
						],
						"IERC20Errors": [
							215
						],
						"IERC20Metadata": [
							410
						],
						"IERC20Permit": [
							951
						],
						"IERC5267": [
							1322
						],
						"IERC721Errors": [
							263
						],
						"Math": [
							2375
						],
						"MessageHashUtils": [
							2800
						],
						"MyToken": [
							3596
						],
						"Nonces": [
							3409
						],
						"Ownable": [
							174
						],
						"ShortString": [
							2912
						],
						"ShortStrings": [
							3123
						],
						"SignedMath": [
							2479
						],
						"StorageSlot": [
							2909
						],
						"Strings": [
							2729
						]
					},
					"id": 3597,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "217:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "245:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "Context",
							"nameLocation": "770:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "847:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "865:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "869:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "865:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "858:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "794:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "838:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:9:0"
									},
									"scope": 29,
									"src": "785:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "958:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "976:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "980:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "976:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "969:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "900:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "942:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "942:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:16:0"
									},
									"scope": 29,
									"src": "891:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "1072:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1090:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 24,
												"id": 26,
												"nodeType": "Return",
												"src": "1083:8:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1009:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1029:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1063:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:9:0"
									},
									"scope": 29,
									"src": "1000:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3597,
							"src": "752:350:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 30,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1292:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 32,
										"name": "Context",
										"nameLocations": [
											"1849:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "1849:7:0"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "1849:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 31,
								"nodeType": "StructuredDocumentation",
								"src": "1320:498:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 174,
							"linearizedBaseContracts": [
								174,
								29
							],
							"name": "Ownable",
							"nameLocation": "1838:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1880:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "1864:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 34,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1895:87:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 40,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1994:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2029:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:17:0"
									},
									"src": "1988:50:0"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2046:84:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 45,
									"name": "OwnableInvalidOwner",
									"nameLocation": "2142:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2170:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "2162:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2161:15:0"
									},
									"src": "2136:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 51,
									"name": "OwnershipTransferred",
									"nameLocation": "2191:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "2228:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2212:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2259:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2243:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:57:0"
									},
									"src": "2185:84:0"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "2434:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 57,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2449:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2473:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2465:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 58,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2465:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2465:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2449:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 71,
												"nodeType": "IfStatement",
												"src": "2445:97:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "2477:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2527:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2519:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 64,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2519:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2519:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 63,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "2499:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2499:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 69,
															"nodeType": "RevertStatement",
															"src": "2492:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 73,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2571:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 72,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2552:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2552:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "2552:32:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2277:117:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2420:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2412:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2412:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2411:22:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2434:0:0"
									},
									"scope": 174,
									"src": "2400:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "2706:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 80,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2717:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2717:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "2717:13:0"
											},
											{
												"id": 83,
												"nodeType": "PlaceholderStatement",
												"src": "2741:1:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2600:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 85,
									"name": "onlyOwner",
									"nameLocation": "2694:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:2:0"
									},
									"src": "2685:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "2886:32:0",
										"statements": [
											{
												"expression": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "2904:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 90,
												"id": 92,
												"nodeType": "Return",
												"src": "2897:13:0"
											}
										]
									},
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "2758:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2840:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2845:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "2877:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:9:0"
									},
									"scope": 174,
									"src": "2831:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "3041:121:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 98,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "3056:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3056:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 100,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "3067:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3067:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3056:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 109,
												"nodeType": "IfStatement",
												"src": "3052:103:0",
												"trueBody": {
													"id": 108,
													"nodeType": "Block",
													"src": "3081:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 104,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "3130:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3130:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 103,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "3103:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3103:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 107,
															"nodeType": "RevertStatement",
															"src": "3096:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "2926:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "3005:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3016:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3041:0:0"
									},
									"scope": 174,
									"src": "2996:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3560:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3598:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3590:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 118,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3590:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3590:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "3571:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3571:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "3571:30:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "3170:330:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 114,
												"name": "onlyOwner",
												"nameLocations": [
													"3550:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "3550:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3550:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3515:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3532:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3560:0:0"
									},
									"scope": 174,
									"src": "3506:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3834:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 133,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3849:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3869:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3861:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 134,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3861:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3849:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "3845:93:0",
												"trueBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "3873:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3923:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3915:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 140,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3915:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3915:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 139,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "3895:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3895:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 145,
															"nodeType": "RevertStatement",
															"src": "3888:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 149,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3967:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 148,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "3948:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3948:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "3948:28:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3617:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 131,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 130,
												"name": "onlyOwner",
												"nameLocations": [
													"3824:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "3824:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3824:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3773:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3799:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3791:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:18:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3834:0:0"
									},
									"scope": 174,
									"src": "3764:220:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "4207:128:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "4226:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 172,
														"src": "4218:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 159,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4218:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 162,
												"initialValue": {
													"id": 161,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "4237:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4218:25:0"
											},
											{
												"expression": {
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 163,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "4254:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 164,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "4263:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4254:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "4254:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 168,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "4308:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4318:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "4287:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4287:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "EmitStatement",
												"src": "4282:45:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "3992:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "4153:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4180:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "4172:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4171:18:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4207:0:0"
									},
									"scope": 174,
									"src": "4144:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3597,
							"src": "1820:2518:0",
							"usedErrors": [
								40,
								45
							],
							"usedEvents": [
								51
							]
						},
						{
							"id": 175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4548:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 176,
								"nodeType": "StructuredDocumentation",
								"src": "4576:142:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 215,
							"linearizedBaseContracts": [
								215
							],
							"name": "IERC20Errors",
							"nameLocation": "4730:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "4750:314:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 185,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5076:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5109:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5101:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5125:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5117:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5142:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5134:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5100:49:0"
									},
									"src": "5070:80:0"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "5158:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 190,
									"name": "ERC20InvalidSender",
									"nameLocation": "5325:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5352:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5344:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5343:16:0"
									},
									"src": "5319:41:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5368:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 195,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5542:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5571:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "5563:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5562:18:0"
									},
									"src": "5536:45:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "5589:350:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 204,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "5951:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5986:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "5978:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5978:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6003:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "5995:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6022:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "6014:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5977:52:0"
									},
									"src": "5945:85:0"
								},
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "6038:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 209,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6227:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6256:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6248:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6247:18:0"
									},
									"src": "6221:45:0"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6274:198:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 214,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6484:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6512:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "6504:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6503:17:0"
									},
									"src": "6478:43:0"
								}
							],
							"scope": 3597,
							"src": "4720:1804:0",
							"usedErrors": [
								185,
								190,
								195,
								204,
								209,
								214
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 216,
								"nodeType": "StructuredDocumentation",
								"src": "6528:144:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 263,
							"linearizedBaseContracts": [
								263
							],
							"name": "IERC721Errors",
							"nameLocation": "6684:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "6705:223:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 221,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6940:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6967:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "6959:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6958:15:0"
									},
									"src": "6934:40:0"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "6982:135:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 226,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7129:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7160:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "7152:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7152:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7151:17:0"
									},
									"src": "7123:46:0"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "7177:294:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 235,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7483:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7512:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "7504:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7528:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "7520:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7545:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "7537:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7537:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7503:48:0"
									},
									"src": "7477:75:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "7560:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 240,
									"name": "ERC721InvalidSender",
									"nameLocation": "7727:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7755:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "7747:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7746:16:0"
									},
									"src": "7721:42:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "7771:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 245,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7945:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "7975:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7967:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7966:18:0"
									},
									"src": "7939:46:0"
								},
								{
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "7993:251:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 252,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8256:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8291:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8283:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8309:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8301:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8282:35:0"
									},
									"src": "8250:68:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "8326:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 257,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8515:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8545:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "8537:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8537:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:18:0"
									},
									"src": "8509:46:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "8563:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 262,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8775:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8805:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "8797:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8796:18:0"
									},
									"src": "8769:46:0"
								}
							],
							"scope": 3597,
							"src": "6674:2144:0",
							"usedErrors": [
								221,
								226,
								235,
								240,
								245,
								252,
								257,
								262
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 264,
								"nodeType": "StructuredDocumentation",
								"src": "8822:146:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 310,
							"linearizedBaseContracts": [
								310
							],
							"name": "IERC1155Errors",
							"nameLocation": "8980:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "9002:367:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 275,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9381:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9416:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "9408:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9432:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "9424:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9449:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "9441:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9465:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "9457:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9407:66:0"
									},
									"src": "9375:99:0"
								},
								{
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "9482:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 280,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9649:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9678:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "9670:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9669:16:0"
									},
									"src": "9643:43:0"
								},
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "9694:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 285,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9868:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9899:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "9891:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9890:18:0"
									},
									"src": "9862:47:0"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "9917:260:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 292,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10189:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10226:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "10218:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10244:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "10236:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10217:33:0"
									},
									"src": "10183:68:0"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "10259:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 297,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10448:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10479:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "10471:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10470:18:0"
									},
									"src": "10442:47:0"
								},
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "10497:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 302,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10709:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10740:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "10732:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10731:18:0"
									},
									"src": "10703:47:0"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "10758:285:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 309,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11055:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11089:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "11081:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11108:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "11100:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11080:41:0"
									},
									"src": "11049:73:0"
								}
							],
							"scope": 3597,
							"src": "8970:2155:0",
							"usedErrors": [
								275,
								280,
								285,
								292,
								297,
								302,
								309
							],
							"usedEvents": []
						},
						{
							"id": 311,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11323:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 312,
								"nodeType": "StructuredDocumentation",
								"src": "11351:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 387,
							"linearizedBaseContracts": [
								387
							],
							"name": "IERC20",
							"nameLocation": "11435:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "11449:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 321,
									"name": "Transfer",
									"nameLocation": "11624:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11649:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "11633:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11671:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "11655:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11683:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "11675:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11632:57:0"
									},
									"src": "11618:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "11698:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 330,
									"name": "Approval",
									"nameLocation": "11861:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11886:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "11870:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11909:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "11893:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11893:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11926:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "11918:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11869:63:0"
									},
									"src": "11855:78:0"
								},
								{
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "11941:67:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "12023:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12034:2:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "12060:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12059:9:0"
									},
									"scope": 387,
									"src": "12014:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "12077:73:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "12165:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12183:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "12175:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12174:17:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "12215:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12214:9:0"
									},
									"scope": 387,
									"src": "12156:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "12232:219:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "12466:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12483:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "12475:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12495:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "12487:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12474:27:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "12520:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12520:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12519:6:0"
									},
									"scope": 387,
									"src": "12457:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "12534:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "12819:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12837:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "12829:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12852:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "12844:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12828:32:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "12884:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12883:9:0"
									},
									"scope": 387,
									"src": "12810:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "12901:681:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "13597:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13613:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "13605:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13630:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "13622:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13604:32:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "13655:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13655:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13654:6:0"
									},
									"scope": 387,
									"src": "13588:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "13669:305:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "13989:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14010:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "14002:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14024:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "14016:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14036:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "14028:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14001:41:0"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "14061:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14061:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14060:6:0"
									},
									"scope": 387,
									"src": "13980:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3597,
							"src": "11425:2645:0",
							"usedErrors": [],
							"usedEvents": [
								321,
								330
							]
						},
						{
							"id": 388,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "14306:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 390,
										"name": "IERC20",
										"nameLocations": [
											"14452:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 387,
										"src": "14452:6:0"
									},
									"id": 391,
									"nodeType": "InheritanceSpecifier",
									"src": "14452:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 389,
								"nodeType": "StructuredDocumentation",
								"src": "14334:88:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 410,
							"linearizedBaseContracts": [
								410,
								387
							],
							"name": "IERC20Metadata",
							"nameLocation": "14434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "14466:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "14537:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14541:2:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "14567:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14567:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14566:15:0"
									},
									"scope": 410,
									"src": "14528:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "14590:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "14663:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14669:2:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "14695:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14695:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14694:15:0"
									},
									"scope": 410,
									"src": "14654:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "14718:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "14800:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14808:2:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "14834:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 406,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14834:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14833:7:0"
									},
									"scope": 410,
									"src": "14791:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3597,
							"src": "14424:420:0",
							"usedErrors": [],
							"usedEvents": [
								321,
								330
							]
						},
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "15040:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 413,
										"name": "Context",
										"nameLocations": [
											"16177:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "16177:7:0"
									},
									"id": 414,
									"nodeType": "InheritanceSpecifier",
									"src": "16177:7:0"
								},
								{
									"baseName": {
										"id": 415,
										"name": "IERC20",
										"nameLocations": [
											"16186:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 387,
										"src": "16186:6:0"
									},
									"id": 416,
									"nodeType": "InheritanceSpecifier",
									"src": "16186:6:0"
								},
								{
									"baseName": {
										"id": 417,
										"name": "IERC20Metadata",
										"nameLocations": [
											"16194:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 410,
										"src": "16194:14:0"
									},
									"id": 418,
									"nodeType": "InheritanceSpecifier",
									"src": "16194:14:0"
								},
								{
									"baseName": {
										"id": 419,
										"name": "IERC20Errors",
										"nameLocations": [
											"16210:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 215,
										"src": "16210:12:0"
									},
									"id": 420,
									"nodeType": "InheritanceSpecifier",
									"src": "16210:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "15074:1074:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								215,
								410,
								387,
								29
							],
							"name": "ERC20",
							"nameLocation": "16168:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 424,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "16274:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "16230:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 423,
										"keyName": "account",
										"keyNameLocation": "16246:7:0",
										"keyType": {
											"id": 421,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "16238:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "16230:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 422,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "16257:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 430,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "16364:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "16292:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 429,
										"keyName": "account",
										"keyNameLocation": "16308:7:0",
										"keyType": {
											"id": 425,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "16300:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "16292:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 428,
											"keyName": "spender",
											"keyNameLocation": "16335:7:0",
											"keyType": {
												"id": 426,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "16327:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "16319:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 427,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "16346:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 432,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "16400:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "16384:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 431,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "16384:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 434,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "16436:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "16421:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 433,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "16421:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 436,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "16463:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "16448:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 435,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "16448:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "16717:60:0",
										"statements": [
											{
												"expression": {
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 444,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "16728:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 445,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "16736:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "16728:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "16728:13:0"
											},
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "16752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 449,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "16762:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "16752:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "16752:17:0"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "16479:176:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 453,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "16687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "16673:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16673:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "16708:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "16694:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 440,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16694:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16672:44:0"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16717:0:0"
									},
									"scope": 916,
									"src": "16661:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										397
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "16907:31:0",
										"statements": [
											{
												"expression": {
													"id": 459,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 434,
													"src": "16925:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 458,
												"id": 460,
												"nodeType": "Return",
												"src": "16918:12:0"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "16785:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "16856:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16860:2:0"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "16892:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16892:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16891:15:0"
									},
									"scope": 916,
									"src": "16847:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										403
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "17119:33:0",
										"statements": [
											{
												"expression": {
													"id": 468,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 436,
													"src": "17137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 467,
												"id": 469,
												"nodeType": "Return",
												"src": "17130:14:0"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "16946:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "17066:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17072:2:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "17104:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17104:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17103:15:0"
									},
									"scope": 916,
									"src": "17057:95:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "17856:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17874:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 476,
												"id": 478,
												"nodeType": "Return",
												"src": "17867:9:0"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "17160:634:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "17809:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17817:2:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "17849:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 474,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17849:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17848:7:0"
									},
									"scope": 916,
									"src": "17800:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										336
									],
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "18010:38:0",
										"statements": [
											{
												"expression": {
													"id": 486,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 432,
													"src": "18028:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "18021:19:0"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "17892:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "17958:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17969:2:0"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "18001:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18000:9:0"
									},
									"scope": 916,
									"src": "17949:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										344
									],
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "18185:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 497,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "18203:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 499,
													"indexExpression": {
														"id": 498,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "18213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18203:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 496,
												"id": 500,
												"nodeType": "Return",
												"src": "18196:25:0"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "18056:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "18120:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18138:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "18130:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18129:17:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "18176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18175:9:0"
									},
									"scope": 916,
									"src": "18111:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "18509:107:0",
										"statements": [
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "18528:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "18520:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 512,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "18520:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 516,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 514,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "18536:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18536:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18520:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "18569:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "18576:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "18580:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "18559:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18559:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "18559:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18604:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 511,
												"id": 524,
												"nodeType": "Return",
												"src": "18597:11:0"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "18237:191:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "18443:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18460:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "18452:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18472:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "18464:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18451:27:0"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "18503:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18503:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18502:6:0"
									},
									"scope": 916,
									"src": "18434:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										364
									],
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "18768:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 536,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "18786:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 538,
														"indexExpression": {
															"id": 537,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "18798:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18786:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 540,
													"indexExpression": {
														"id": 539,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "18805:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18786:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 535,
												"id": 541,
												"nodeType": "Return",
												"src": "18779:34:0"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "18624:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "18688:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18706:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "18698:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "18721:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "18713:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18697:32:0"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "18759:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18758:9:0"
									},
									"scope": 916,
									"src": "18679:142:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										374
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "19219:111:0",
										"statements": [
											{
												"assignments": [
													554
												],
												"declarations": [
													{
														"constant": false,
														"id": 554,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "19238:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "19230:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 553,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19230:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 555,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "19246:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19246:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19230:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "19278:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "19285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "19294:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 558,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															807,
															867
														],
														"referencedDeclaration": 807,
														"src": "19269:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19269:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "19269:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19318:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 552,
												"id": 565,
												"nodeType": "Return",
												"src": "19311:11:0"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "18829:305:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "19149:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19165:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "19157:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19182:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "19174:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19156:32:0"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "19213:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19213:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19212:6:0"
									},
									"scope": 916,
									"src": "19140:190:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										386
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "20001:156:0",
										"statements": [
											{
												"assignments": [
													580
												],
												"declarations": [
													{
														"constant": false,
														"id": 580,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "20020:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "20012:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 579,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20012:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 581,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "20030:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20030:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20012:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 585,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "20069:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "20075:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "20084:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 584,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "20053:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20053:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "20053:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 591,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "20111:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 592,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "20117:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 593,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "20121:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 590,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "20101:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20101:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "20101:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20145:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 578,
												"id": 597,
												"nodeType": "Return",
												"src": "20138:11:0"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "19338:564:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "19917:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19938:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "19930:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19952:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "19944:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19964:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "19956:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:41:0"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "19995:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19995:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19994:6:0"
									},
									"scope": 916,
									"src": "19908:249:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "20611:239:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 609,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "20626:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20642:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20634:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 610,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20634:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20634:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20626:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 623,
												"nodeType": "IfStatement",
												"src": "20622:88:0",
												"trueBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "20646:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20695:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20687:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 616,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20687:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20687:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 615,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "20668:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20668:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 621,
															"nodeType": "RevertStatement",
															"src": "20661:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 624,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "20724:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20738:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20730:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 625,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20730:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20730:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20724:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 638,
												"nodeType": "IfStatement",
												"src": "20720:88:0",
												"trueBody": {
													"id": 637,
													"nodeType": "Block",
													"src": "20742:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20793:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20785:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 631,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20785:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20785:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 630,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "20764:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20764:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 636,
															"nodeType": "RevertStatement",
															"src": "20757:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 640,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "20826:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "20832:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "20836:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 639,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "20818:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20818:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "20818:24:0"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "20165:371:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "20551:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20569:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "20561:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20583:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "20575:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20595:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "20587:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20560:41:0"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20611:0:0"
									},
									"scope": 916,
									"src": "20542:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "21249:1060:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 656,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "21264:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21280:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21272:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 657,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21272:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21272:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21264:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "21441:371:0",
													"statements": [
														{
															"assignments": [
																668
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 668,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "21464:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 693,
																	"src": "21456:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 667,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21456:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 672,
															"initialValue": {
																"baseExpression": {
																	"id": 669,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "21478:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 671,
																"indexExpression": {
																	"id": 670,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "21488:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21478:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21456:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 673,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "21512:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 674,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "21526:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21512:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 683,
															"nodeType": "IfStatement",
															"src": "21508:117:0",
															"trueBody": {
																"id": 682,
																"nodeType": "Block",
																"src": "21533:92:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 677,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 649,
																					"src": "21584:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 678,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 668,
																					"src": "21590:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 679,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 653,
																					"src": "21603:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 676,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 185,
																				"src": "21559:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21559:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 681,
																		"nodeType": "RevertStatement",
																		"src": "21552:57:0"
																	}
																]
															}
														},
														{
															"id": 692,
															"nodeType": "UncheckedBlock",
															"src": "21639:162:0",
															"statements": [
																{
																	"expression": {
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 684,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 424,
																				"src": "21748:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 686,
																			"indexExpression": {
																				"id": 685,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "21758:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "21748:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 687,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 668,
																				"src": "21766:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 688,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 653,
																				"src": "21780:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21766:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21748:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 691,
																	"nodeType": "ExpressionStatement",
																	"src": "21748:37:0"
																}
															]
														}
													]
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "21260:552:0",
												"trueBody": {
													"id": 666,
													"nodeType": "Block",
													"src": "21284:151:0",
													"statements": [
														{
															"expression": {
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 662,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "21402:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 663,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "21418:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21402:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 665,
															"nodeType": "ExpressionStatement",
															"src": "21402:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 695,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "21828:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21842:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21834:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 696,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21834:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21834:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21828:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 714,
													"nodeType": "Block",
													"src": "22048:211:0",
													"statements": [
														{
															"id": 713,
															"nodeType": "UncheckedBlock",
															"src": "22063:185:0",
															"statements": [
																{
																	"expression": {
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 707,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 424,
																				"src": "22210:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 709,
																			"indexExpression": {
																				"id": 708,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 651,
																				"src": "22220:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "22210:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 710,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 653,
																			"src": "22227:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22210:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 712,
																	"nodeType": "ExpressionStatement",
																	"src": "22210:22:0"
																}
															]
														}
													]
												},
												"id": 715,
												"nodeType": "IfStatement",
												"src": "21824:435:0",
												"trueBody": {
													"id": 706,
													"nodeType": "Block",
													"src": "21846:196:0",
													"statements": [
														{
															"id": 705,
															"nodeType": "UncheckedBlock",
															"src": "21861:170:0",
															"statements": [
																{
																	"expression": {
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 701,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "21994:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 702,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 653,
																			"src": "22010:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21994:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 704,
																	"nodeType": "ExpressionStatement",
																	"src": "21994:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 717,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "22285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "22291:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "22295:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 716,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "22276:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22276:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "EmitStatement",
												"src": "22271:30:0"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "20858:310:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "21183:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21199:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "21191:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21213:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "21205:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21225:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "21217:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21190:41:0"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21249:0:0"
									},
									"scope": 916,
									"src": "21174:1135:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "22718:157:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 731,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "22733:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22744:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 732,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22744:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22744:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22733:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "IfStatement",
												"src": "22729:93:0",
												"trueBody": {
													"id": 744,
													"nodeType": "Block",
													"src": "22756:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 740,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22807:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "22799:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 738,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "22799:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22799:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 737,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "22778:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22778:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 743,
															"nodeType": "RevertStatement",
															"src": "22771:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22848:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22840:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 747,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22840:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22840:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "22852:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 752,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "22861:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 746,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "22832:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22832:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "22832:35:0"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "22317:339:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "22671:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22685:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "22677:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22702:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "22694:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22676:32:0"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22718:0:0"
									},
									"scope": 916,
									"src": "22662:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "23259:155:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 764,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "23274:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23293:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 765,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23285:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23285:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23274:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "23270:91:0",
												"trueBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "23297:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23346:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23338:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 771,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23338:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23338:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 770,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "23319:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23319:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 776,
															"nodeType": "RevertStatement",
															"src": "23312:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "23379:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23396:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23388:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 781,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23388:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23388:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 785,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "23400:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "23371:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23371:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "23371:35:0"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "22883:314:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "23212:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23226:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "23218:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23243:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "23235:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23217:32:0"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23259:0:0"
									},
									"scope": 916,
									"src": "23203:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "24041:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 800,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "24061:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 801,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "24068:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "24077:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24084:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 799,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															807,
															867
														],
														"referencedDeclaration": 867,
														"src": "24052:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24052:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "24052:37:0"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "23422:539:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "23976:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23993:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "23985:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "24008:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "24000:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24025:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "24017:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23984:47:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24041:0:0"
									},
									"scope": 916,
									"src": "23967:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "25046:345:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 819,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "25061:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25078:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25070:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 820,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25070:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25070:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25061:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 833,
												"nodeType": "IfStatement",
												"src": "25057:91:0",
												"trueBody": {
													"id": 832,
													"nodeType": "Block",
													"src": "25082:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25133:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "25125:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 826,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "25125:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25125:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 825,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "25104:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25104:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 831,
															"nodeType": "RevertStatement",
															"src": "25097:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 834,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "25162:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25181:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25173:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 835,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25173:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25173:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25162:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 848,
												"nodeType": "IfStatement",
												"src": "25158:92:0",
												"trueBody": {
													"id": 847,
													"nodeType": "Block",
													"src": "25185:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 843,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25235:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "25227:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 841,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "25227:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25227:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 840,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "25207:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25207:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 846,
															"nodeType": "RevertStatement",
															"src": "25200:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 849,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "25260:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 852,
															"indexExpression": {
																"id": 850,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "25272:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25260:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 853,
														"indexExpression": {
															"id": 851,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "25279:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25260:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 854,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "25290:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25260:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "25260:35:0"
											},
											{
												"condition": {
													"id": 857,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 816,
													"src": "25310:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 865,
												"nodeType": "IfStatement",
												"src": "25306:78:0",
												"trueBody": {
													"id": 864,
													"nodeType": "Block",
													"src": "25321:63:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 859,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "25350:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 860,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "25357:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 861,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "25366:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 858,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "25341:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25341:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 863,
															"nodeType": "EmitStatement",
															"src": "25336:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "24105:837:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "24957:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "24974:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "24966:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "24989:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "24981:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25006:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "24998:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "25018:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "25013:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 815,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25013:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24965:63:0"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25046:0:0"
									},
									"scope": 916,
									"src": "24948:443:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "25772:398:0",
										"statements": [
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "25791:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "25783:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 877,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"arguments": [
														{
															"id": 880,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "25820:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 881,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "25827:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 879,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "25810:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25810:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25783:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "25850:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25875:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 886,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "25875:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 885,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "25870:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25870:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "25884:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "25870:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25850:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 913,
												"nodeType": "IfStatement",
												"src": "25846:317:0",
												"trueBody": {
													"id": 912,
													"nodeType": "Block",
													"src": "25889:274:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 891,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "25908:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 892,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "25927:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25908:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 901,
															"nodeType": "IfStatement",
															"src": "25904:132:0",
															"trueBody": {
																"id": 900,
																"nodeType": "Block",
																"src": "25934:102:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 895,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 872,
																					"src": "25987:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 896,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 878,
																					"src": "25996:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 897,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 874,
																					"src": "26014:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 894,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 204,
																				"src": "25960:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25960:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 899,
																		"nodeType": "RevertStatement",
																		"src": "25953:67:0"
																	}
																]
															}
														},
														{
															"id": 911,
															"nodeType": "UncheckedBlock",
															"src": "26050:102:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 903,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 870,
																				"src": "26088:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 904,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "26095:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 907,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 905,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 878,
																					"src": "26104:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 906,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 874,
																					"src": "26123:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26104:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26130:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 902,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				807,
																				867
																			],
																			"referencedDeclaration": 867,
																			"src": "26079:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26079:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 910,
																	"nodeType": "ExpressionStatement",
																	"src": "26079:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "25399:278:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "25692:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "25716:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "25708:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25708:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25731:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "25723:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25723:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25748:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "25740:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25707:47:0"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25772:0:0"
									},
									"scope": 916,
									"src": "25683:487:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3597,
							"src": "16150:10023:0",
							"usedErrors": [
								185,
								190,
								195,
								204,
								209,
								214
							],
							"usedEvents": [
								321,
								330
							]
						},
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "26405:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 918,
								"nodeType": "StructuredDocumentation",
								"src": "26433:1998:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 951,
							"linearizedBaseContracts": [
								951
							],
							"name": "IERC20Permit",
							"nameLocation": "28443:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "28463:872:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "29350:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "29375:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "29367:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "29399:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "29391:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29425:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "29417:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "29449:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "29441:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "29474:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "29468:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 928,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29468:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "29494:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "29486:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 930,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "29486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "29514:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "29506:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 932,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "29506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29356:166:0"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29531:0:0"
									},
									"scope": 951,
									"src": "29341:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "29540:300:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "29855:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "29870:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "29862:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29862:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29861:15:0"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "29900:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29899:9:0"
									},
									"scope": 951,
									"src": "29846:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "29917:130:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 950,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "30116:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30132:2:0"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "30158:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 947,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30157:9:0"
									},
									"scope": 951,
									"src": "30107:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3597,
							"src": "28433:1737:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 952,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "30380:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 953,
								"nodeType": "StructuredDocumentation",
								"src": "30408:210:0",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1298,
							"linearizedBaseContracts": [
								1298
							],
							"name": "ECDSA",
							"nameLocation": "30628:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 958,
									"members": [
										{
											"id": 954,
											"name": "NoError",
											"nameLocation": "30670:7:0",
											"nodeType": "EnumValue",
											"src": "30670:7:0"
										},
										{
											"id": 955,
											"name": "InvalidSignature",
											"nameLocation": "30688:16:0",
											"nodeType": "EnumValue",
											"src": "30688:16:0"
										},
										{
											"id": 956,
											"name": "InvalidSignatureLength",
											"nameLocation": "30715:22:0",
											"nodeType": "EnumValue",
											"src": "30715:22:0"
										},
										{
											"id": 957,
											"name": "InvalidSignatureS",
											"nameLocation": "30748:17:0",
											"nodeType": "EnumValue",
											"src": "30748:17:0"
										}
									],
									"name": "RecoverError",
									"nameLocation": "30646:12:0",
									"nodeType": "EnumDefinition",
									"src": "30641:131:0"
								},
								{
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "30780:65:0",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 961,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "30857:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30878:2:0"
									},
									"src": "30851:30:0"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "30889:62:0",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 966,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "30963:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "30999:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "30991:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30990:16:0"
									},
									"src": "30957:50:0"
								},
								{
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "31015:87:0",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 971,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "31114:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "31145:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "31137:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 968,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31136:11:0"
									},
									"src": "31108:40:0"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "32562:670:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 986,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "32577:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "32587:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "32577:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32597:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "32577:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1021,
													"nodeType": "Block",
													"src": "33115:110:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33146:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33138:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1008,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33138:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33138:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1012,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "33150:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "33163:22:0",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "33150:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$958",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1016,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "33195:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "33205:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "33195:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33187:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1014,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "33187:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33187:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1019,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33137:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 985,
															"id": 1020,
															"nodeType": "Return",
															"src": "33130:83:0"
														}
													]
												},
												"id": 1022,
												"nodeType": "IfStatement",
												"src": "32573:652:0",
												"trueBody": {
													"id": 1007,
													"nodeType": "Block",
													"src": "32601:508:0",
													"statements": [
														{
															"assignments": [
																991
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 991,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "32624:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1007,
																	"src": "32616:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 990,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "32616:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 992,
															"nodeType": "VariableDeclarationStatement",
															"src": "32616:9:0"
														},
														{
															"assignments": [
																994
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 994,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "32648:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1007,
																	"src": "32640:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 993,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "32640:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 995,
															"nodeType": "VariableDeclarationStatement",
															"src": "32640:9:0"
														},
														{
															"assignments": [
																997
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 997,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "32670:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1007,
																	"src": "32664:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 996,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "32664:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 998,
															"nodeType": "VariableDeclarationStatement",
															"src": "32664:7:0"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "32876:175:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "32895:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "32910:9:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "32921:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "32906:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "32906:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "32900:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32900:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "32895:1:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "32945:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "32960:9:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "32971:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "32956:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "32956:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "32950:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32950:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "32945:1:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "32995:41:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33005:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "33018:9:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "33029:4:0",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "33014:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "33014:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "33008:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "33008:27:0"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "33000:4:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33000:36:0"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "32995:1:0"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 991,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "32895:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 994,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "32945:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 976,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "32910:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 976,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "32960:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 976,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "33018:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 997,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "32995:1:0",
																	"valueSize": 1
																}
															],
															"id": 999,
															"nodeType": "InlineAssembly",
															"src": "32867:184:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1001,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "33083:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1002,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "33089:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1003,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "33092:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1004,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "33095:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1000,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1024,
																		1104,
																		1212
																	],
																	"referencedDeclaration": 1212,
																	"src": "33072:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33072:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 985,
															"id": 1006,
															"nodeType": "Return",
															"src": "33065:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "31156:1287:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "32458:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "32477:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "32469:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 973,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "32496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "32483:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32468:38:0"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "32530:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "32539:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$958",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 981,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 980,
														"name": "RecoverError",
														"nameLocations": [
															"32539:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "32539:12:0"
													},
													"referencedDeclaration": 958,
													"src": "32539:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "32553:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 983,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32529:32:0"
									},
									"scope": 1298,
									"src": "32449:783:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "34142:172:0",
										"statements": [
											{
												"assignments": [
													1035,
													1038,
													1040
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "34162:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "34154:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1034,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34154:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1038,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "34186:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "34173:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1037,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1036,
																"name": "RecoverError",
																"nameLocations": [
																	"34173:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 958,
																"src": "34173:12:0"
															},
															"referencedDeclaration": 958,
															"src": "34173:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1040,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "34201:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "34193:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1039,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "34193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1045,
												"initialValue": {
													"arguments": [
														{
															"id": 1042,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "34224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1043,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "34230:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1041,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1024,
															1104,
															1212
														],
														"referencedDeclaration": 1024,
														"src": "34213:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34213:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34153:87:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1047,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "34263:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1048,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "34270:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1046,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "34251:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$958_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34251:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "34251:28:0"
											},
											{
												"expression": {
													"id": 1051,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1035,
													"src": "34297:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1052,
												"nodeType": "Return",
												"src": "34290:16:0"
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "33240:809:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "34064:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "34080:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "34072:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1026,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "34099:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "34086:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34086:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34071:38:0"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "34133:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34132:9:0"
									},
									"scope": 1298,
									"src": "34055:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "34649:349:0",
										"statements": [
											{
												"id": 1102,
												"nodeType": "UncheckedBlock",
												"src": "34660:331:0",
												"statements": [
													{
														"assignments": [
															1072
														],
														"declarations": [
															{
																"constant": false,
																"id": 1072,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "34693:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1102,
																"src": "34685:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1071,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "34685:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1079,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1073,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "34697:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34710:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "34702:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1074,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "34702:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34702:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "34697:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "34685:92:0"
													},
													{
														"assignments": [
															1081
														],
														"declarations": [
															{
																"constant": false,
																"id": 1081,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "34896:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1102,
																"src": "34890:7:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1080,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "34890:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1094,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1086,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1061,
																							"src": "34915:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1085,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "34907:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1084,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "34907:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1087,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "34907:11:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "34922:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "34907:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1090,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "34906:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34929:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "34906:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34900:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1082,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "34900:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34900:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "34890:42:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1096,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "34965:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1097,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "34971:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1098,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "34974:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1099,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "34977:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1095,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1024,
																	1104,
																	1212
																],
																"referencedDeclaration": 1212,
																"src": "34954:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34954:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1070,
														"id": 1101,
														"nodeType": "Return",
														"src": "34947:32:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "34322:209:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "34546:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "34565:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "34557:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "34579:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "34571:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1058,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "34590:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "34582:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34556:37:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "34617:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "34626:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$958",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1066,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1065,
														"name": "RecoverError",
														"nameLocations": [
															"34626:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "34626:12:0"
													},
													"referencedDeclaration": 958,
													"src": "34626:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "34640:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1068,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34616:32:0"
									},
									"scope": 1298,
									"src": "34537:461:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "35216:168:0",
										"statements": [
											{
												"assignments": [
													1117,
													1120,
													1122
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "35236:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "35228:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1116,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35228:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1120,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "35260:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "35247:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1119,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1118,
																"name": "RecoverError",
																"nameLocations": [
																	"35247:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 958,
																"src": "35247:12:0"
															},
															"referencedDeclaration": 958,
															"src": "35247:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1122,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "35275:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "35267:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1121,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "35267:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"arguments": [
														{
															"id": 1124,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "35298:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1125,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "35304:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1126,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "35307:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1123,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1024,
															1104,
															1212
														],
														"referencedDeclaration": 1104,
														"src": "35287:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35287:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35227:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "35333:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1131,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "35340:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1129,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "35321:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$958_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35321:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "35321:28:0"
											},
											{
												"expression": {
													"id": 1134,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1117,
													"src": "35367:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1135,
												"nodeType": "Return",
												"src": "35360:16:0"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "35006:118:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "35139:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "35155:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "35147:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1106,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "35169:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "35161:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1108,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "35180:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "35172:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35146:37:0"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "35207:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35206:9:0"
									},
									"scope": 1298,
									"src": "35130:254:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "35689:1393:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1158,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "36595:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "36587:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1156,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "36587:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36587:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36600:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "36587:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "IfStatement",
												"src": "36583:166:0",
												"trueBody": {
													"id": 1171,
													"nodeType": "Block",
													"src": "36668:81:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36699:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "36691:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1162,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "36691:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36691:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1166,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "36703:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "36716:17:0",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "36703:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$958",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1168,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "36735:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1169,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "36690:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1155,
															"id": 1170,
															"nodeType": "Return",
															"src": "36683:54:0"
														}
													]
												}
											},
											{
												"assignments": [
													1174
												],
												"declarations": [
													{
														"constant": false,
														"id": 1174,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "36854:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1211,
														"src": "36846:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1173,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36846:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"arguments": [
														{
															"id": 1176,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "36873:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1177,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "36879:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1178,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "36882:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1179,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "36885:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1175,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "36863:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36863:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36846:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1182,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "36902:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36920:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "36912:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1183,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "36912:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36912:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "36902:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1201,
												"nodeType": "IfStatement",
												"src": "36898:115:0",
												"trueBody": {
													"id": 1200,
													"nodeType": "Block",
													"src": "36924:89:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36955:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "36947:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1188,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "36947:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36947:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1192,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "36959:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "36972:16:0",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 955,
																		"src": "36959:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$958",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36998:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "36990:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1194,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "36990:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36990:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1198,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "36946:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1155,
															"id": 1199,
															"nodeType": "Return",
															"src": "36939:62:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1202,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "37033:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1203,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "37041:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "37054:7:0",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "37041:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37071:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37063:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1205,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "37063:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37063:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1209,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "37032:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1210,
												"nodeType": "Return",
												"src": "37025:49:0"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "35392:128:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "35535:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "35564:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "35556:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1139,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "35585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "35579:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1141,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "35579:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "35605:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "35597:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "35625:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "35617:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1145,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35545:88:0"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "35657:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "35666:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$958",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1151,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1150,
														"name": "RecoverError",
														"nameLocations": [
															"35666:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "35666:12:0"
													},
													"referencedDeclaration": 958,
													"src": "35666:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "35680:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35656:32:0"
									},
									"scope": 1298,
									"src": "35526:1556:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "37315:170:0",
										"statements": [
											{
												"assignments": [
													1227,
													1230,
													1232
												],
												"declarations": [
													{
														"constant": false,
														"id": 1227,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "37335:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "37327:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1226,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37327:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1230,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "37359:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "37346:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1229,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1228,
																"name": "RecoverError",
																"nameLocations": [
																	"37346:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 958,
																"src": "37346:12:0"
															},
															"referencedDeclaration": 958,
															"src": "37346:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1232,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "37374:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "37366:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1231,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "37366:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1239,
												"initialValue": {
													"arguments": [
														{
															"id": 1234,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "37397:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1235,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "37403:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1236,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "37406:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1237,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "37409:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1233,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1024,
															1104,
															1212
														],
														"referencedDeclaration": 1212,
														"src": "37386:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37386:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37326:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1241,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "37434:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1242,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "37441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1240,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "37422:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$958_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37422:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "37422:28:0"
											},
											{
												"expression": {
													"id": 1245,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1227,
													"src": "37468:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1225,
												"id": 1246,
												"nodeType": "Return",
												"src": "37461:16:0"
											}
										]
									},
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "37090:125:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "37230:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "37246:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "37238:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "37258:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "37252:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1216,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "37252:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "37269:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "37261:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "37280:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "37272:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37237:45:0"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "37306:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37305:9:0"
									},
									"scope": 1298,
									"src": "37221:264:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "37695:470:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1257,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "37710:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1258,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "37719:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "37732:7:0",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "37719:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "37710:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1263,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "37808:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1264,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "37817:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "37830:16:0",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 955,
															"src": "37817:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "37808:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1271,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "37915:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$958",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1272,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "37924:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "37937:22:0",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 956,
																"src": "37924:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$958",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "37915:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$958",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1283,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "38051:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$958",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1284,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "38060:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "38073:17:0",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "38060:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$958",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "38051:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1292,
															"nodeType": "IfStatement",
															"src": "38047:111:0",
															"trueBody": {
																"id": 1291,
																"nodeType": "Block",
																"src": "38092:66:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1288,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1254,
																					"src": "38137:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1287,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 971,
																				"src": "38114:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38114:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1290,
																		"nodeType": "RevertStatement",
																		"src": "38107:39:0"
																	}
																]
															}
														},
														"id": 1293,
														"nodeType": "IfStatement",
														"src": "37911:247:0",
														"trueBody": {
															"id": 1282,
															"nodeType": "Block",
															"src": "37961:80:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1278,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1254,
																						"src": "38019:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "38011:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1276,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "38011:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "38011:17:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1275,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 966,
																			"src": "37983:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37983:46:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1281,
																	"nodeType": "RevertStatement",
																	"src": "37976:53:0"
																}
															]
														}
													},
													"id": 1294,
													"nodeType": "IfStatement",
													"src": "37804:354:0",
													"trueBody": {
														"id": 1270,
														"nodeType": "Block",
														"src": "37848:57:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1267,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "37870:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37870:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1269,
																"nodeType": "RevertStatement",
																"src": "37863:30:0"
															}
														]
													}
												},
												"id": 1295,
												"nodeType": "IfStatement",
												"src": "37706:452:0",
												"trueBody": {
													"id": 1262,
													"nodeType": "Block",
													"src": "37741:57:0",
													"statements": [
														{
															"functionReturnParameters": 1256,
															"id": 1261,
															"nodeType": "Return",
															"src": "37756:7:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "37493:124:0",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "37632:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "37657:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "37644:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$958",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1251,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1250,
														"name": "RecoverError",
														"nameLocations": [
															"37644:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "37644:12:0"
													},
													"referencedDeclaration": 958,
													"src": "37644:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "37672:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "37664:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37643:38:0"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37695:0:0"
									},
									"scope": 1298,
									"src": "37623:542:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3597,
							"src": "30620:7548:0",
							"usedErrors": [
								961,
								966,
								971
							],
							"usedEvents": []
						},
						{
							"id": 1299,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38368:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1322,
							"linearizedBaseContracts": [
								1322
							],
							"name": "IERC5267",
							"nameLocation": "38406:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "38422:86:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 1302,
									"name": "EIP712DomainChanged",
									"nameLocation": "38520:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38539:2:0"
									},
									"src": "38514:28:0"
								},
								{
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "38550:143:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 1321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "38708:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38720:2:0"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "38794:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "38787:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "38787:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "38829:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "38815:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38815:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "38862:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "38848:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1309,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38848:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "38892:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "38884:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "38922:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "38914:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "38962:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "38954:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "38998:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "38981:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1317,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "38981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1318,
													"nodeType": "ArrayTypeName",
													"src": "38981:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38772:247:0"
									},
									"scope": 1322,
									"src": "38699:321:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3597,
							"src": "38396:627:0",
							"usedErrors": [],
							"usedEvents": [
								1302
							]
						},
						{
							"id": 1323,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "39215:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1324,
								"nodeType": "StructuredDocumentation",
								"src": "39243:75:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2375,
							"linearizedBaseContracts": [
								2375
							],
							"name": "Math",
							"nameLocation": "39328:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "39340:52:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1327,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "39404:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39424:2:0"
									},
									"src": "39398:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1332,
									"members": [
										{
											"id": 1328,
											"name": "Floor",
											"nameLocation": "39460:5:0",
											"nodeType": "EnumValue",
											"src": "39460:5:0"
										},
										{
											"id": 1329,
											"name": "Ceil",
											"nameLocation": "39504:4:0",
											"nodeType": "EnumValue",
											"src": "39504:4:0"
										},
										{
											"id": 1330,
											"name": "Trunc",
											"nameLocation": "39547:5:0",
											"nodeType": "EnumValue",
											"src": "39547:5:0"
										},
										{
											"id": 1331,
											"name": "Expand",
											"nameLocation": "39578:6:0",
											"nodeType": "EnumValue",
											"src": "39578:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "39440:8:0",
									"nodeType": "EnumDefinition",
									"src": "39435:174:0"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "39794:146:0",
										"statements": [
											{
												"id": 1362,
												"nodeType": "UncheckedBlock",
												"src": "39805:128:0",
												"statements": [
													{
														"assignments": [
															1345
														],
														"declarations": [
															{
																"constant": false,
																"id": 1345,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "39838:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1362,
																"src": "39830:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1344,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "39830:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1349,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1346,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "39842:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1347,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "39846:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39842:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "39830:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1350,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "39866:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1351,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "39870:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39866:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1357,
														"nodeType": "IfStatement",
														"src": "39862:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39881:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39888:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1355,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "39880:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1343,
															"id": 1356,
															"nodeType": "Return",
															"src": "39873:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39913:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1359,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "39919:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1360,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "39912:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1343,
														"id": 1361,
														"nodeType": "Return",
														"src": "39905:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "39617:95:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "39727:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "39742:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "39734:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "39753:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "39745:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39733:22:0"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "39779:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39779:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "39785:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39778:15:0"
									},
									"scope": 2375,
									"src": "39718:222:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "40128:118:0",
										"statements": [
											{
												"id": 1390,
												"nodeType": "UncheckedBlock",
												"src": "40139:100:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1376,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "40168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1377,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "40172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1383,
														"nodeType": "IfStatement",
														"src": "40164:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "40183:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "40190:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1381,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "40182:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1375,
															"id": 1382,
															"nodeType": "Return",
															"src": "40175:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40215:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1385,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1367,
																		"src": "40221:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1386,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "40225:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "40221:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1388,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "40214:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1375,
														"id": 1389,
														"nodeType": "Return",
														"src": "40207:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "39948:98:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "40061:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "40076:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "40068:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "40087:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "40079:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40067:22:0"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "40113:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40113:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "40119:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40112:15:0"
									},
									"scope": 2375,
									"src": "40052:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "40437:427:0",
										"statements": [
											{
												"id": 1432,
												"nodeType": "UncheckedBlock",
												"src": "40448:409:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1404,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "40710:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "40715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "40710:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1411,
														"nodeType": "IfStatement",
														"src": "40706:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "40726:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "40732:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1409,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "40725:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1403,
															"id": 1410,
															"nodeType": "Return",
															"src": "40718:16:0"
														}
													},
													{
														"assignments": [
															1413
														],
														"declarations": [
															{
																"constant": false,
																"id": 1413,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "40757:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1432,
																"src": "40749:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1412,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "40749:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1417,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1414,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "40761:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1415,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1397,
																"src": "40765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40761:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "40749:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1418,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "40785:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1419,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "40789:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "40785:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1421,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1397,
																"src": "40794:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40785:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1427,
														"nodeType": "IfStatement",
														"src": "40781:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "40805:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "40812:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1425,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "40804:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1403,
															"id": 1426,
															"nodeType": "Return",
															"src": "40797:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40837:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1429,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "40843:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1430,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "40836:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1403,
														"id": 1431,
														"nodeType": "Return",
														"src": "40829:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "40254:101:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "40370:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "40385:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "40377:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "40396:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "40388:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40376:22:0"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "40422:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40422:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "40428:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40421:15:0"
									},
									"scope": 2375,
									"src": "40361:503:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "41056:119:0",
										"statements": [
											{
												"id": 1460,
												"nodeType": "UncheckedBlock",
												"src": "41067:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1446,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "41096:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41101:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "41096:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1453,
														"nodeType": "IfStatement",
														"src": "41092:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "41112:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "41119:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1451,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "41111:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1445,
															"id": 1452,
															"nodeType": "Return",
															"src": "41104:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "41144:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1455,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1437,
																		"src": "41150:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1456,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "41154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "41150:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1458,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "41143:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1445,
														"id": 1459,
														"nodeType": "Return",
														"src": "41136:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "40872:102:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "40989:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "41004:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "40996:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40996:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "41015:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "41007:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40995:22:0"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "41041:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41041:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "41047:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41040:15:0"
									},
									"scope": 2375,
									"src": "40980:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1489,
										"nodeType": "Block",
										"src": "41377:119:0",
										"statements": [
											{
												"id": 1488,
												"nodeType": "UncheckedBlock",
												"src": "41388:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1474,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "41417:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41422:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "41417:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1481,
														"nodeType": "IfStatement",
														"src": "41413:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "41433:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "41440:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1479,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "41432:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1473,
															"id": 1480,
															"nodeType": "Return",
															"src": "41425:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "41465:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1483,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1465,
																		"src": "41471:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1484,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1467,
																		"src": "41475:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "41471:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1486,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "41464:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1473,
														"id": 1487,
														"nodeType": "Return",
														"src": "41457:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "41183:112:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "41310:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "41325:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "41317:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41317:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "41336:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "41328:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41316:22:0"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "41362:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41362:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "41368:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41361:15:0"
									},
									"scope": 2375,
									"src": "41301:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "41638:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1500,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "41656:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1501,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "41660:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "41656:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1504,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "41668:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "41656:13:0",
													"trueExpression": {
														"id": 1503,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "41664:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1499,
												"id": 1506,
												"nodeType": "Return",
												"src": "41649:20:0"
											}
										]
									},
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "41504:61:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "41580:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "41592:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "41584:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "41603:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "41595:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41583:22:0"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "41629:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41628:9:0"
									},
									"scope": 2375,
									"src": "41571:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "41820:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1518,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "41838:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1519,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "41842:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "41838:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1522,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "41850:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "41838:13:0",
													"trueExpression": {
														"id": 1521,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "41846:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1517,
												"id": 1524,
												"nodeType": "Return",
												"src": "41831:20:0"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "41685:62:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "41762:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "41774:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "41766:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "41785:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "41777:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41765:22:0"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "41811:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41810:9:0"
									},
									"scope": 2375,
									"src": "41753:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "42049:85:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1536,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "42106:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1537,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1531,
																	"src": "42110:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "42106:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1539,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "42105:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1540,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "42116:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1541,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1531,
																		"src": "42120:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "42116:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1543,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "42115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42125:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "42115:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42105:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1535,
												"id": 1547,
												"nodeType": "Return",
												"src": "42098:28:0"
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "41867:105:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "41987:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "42003:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "41995:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "42014:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "42006:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41994:22:0"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "42040:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42039:9:0"
									},
									"scope": 2375,
									"src": "41978:156:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "42434:268:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1559,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "42449:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42454:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "42449:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1567,
												"nodeType": "IfStatement",
												"src": "42445:130:0",
												"trueBody": {
													"id": 1566,
													"nodeType": "Block",
													"src": "42457:118:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1562,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "42558:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1563,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "42562:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "42558:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1558,
															"id": 1565,
															"nodeType": "Return",
															"src": "42551:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1568,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "42666:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42671:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "42666:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1572,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1552,
																			"src": "42680:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42684:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "42680:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1575,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1576,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "42689:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "42679:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42693:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "42679:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "42666:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42675:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1581,
												"nodeType": "Return",
												"src": "42659:35:0"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "42142:215:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "42372:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "42388:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "42380:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "42399:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "42391:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42379:22:0"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "42425:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42424:9:0"
									},
									"scope": 2375,
									"src": "42363:339:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "43132:4097:0",
										"statements": [
											{
												"id": 1707,
												"nodeType": "UncheckedBlock",
												"src": "43143:4079:0",
												"statements": [
													{
														"assignments": [
															1596
														],
														"declarations": [
															{
																"constant": false,
																"id": 1596,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "43476:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 1707,
																"src": "43468:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1595,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "43468:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1600,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1597,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1586,
																"src": "43484:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1598,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "43488:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43484:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "43468:21:0"
													},
													{
														"assignments": [
															1602
														],
														"declarations": [
															{
																"constant": false,
																"id": 1602,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "43557:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 1707,
																"src": "43549:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1601,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "43549:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1603,
														"nodeType": "VariableDeclarationStatement",
														"src": "43549:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "43630:125:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "43649:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "43666:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "43669:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "43676:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "43672:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "43672:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "43659:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "43659:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "43653:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "43697:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "43714:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "43718:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "43710:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "43710:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "43729:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "43733:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "43726:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "43726:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "43706:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "43706:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "43697:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "43718:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "43733:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1602,
																"isOffset": false,
																"isSlot": false,
																"src": "43697:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1586,
																"isOffset": false,
																"isSlot": false,
																"src": "43666:1:0",
																"valueSize": 1
															},
															{
																"declaration": 1588,
																"isOffset": false,
																"isSlot": false,
																"src": "43669:1:0",
																"valueSize": 1
															}
														],
														"id": 1604,
														"nodeType": "InlineAssembly",
														"src": "43621:134:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1605,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "43839:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43848:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "43839:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1613,
														"nodeType": "IfStatement",
														"src": "43835:373:0",
														"trueBody": {
															"id": 1612,
															"nodeType": "Block",
															"src": "43851:357:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1608,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1596,
																			"src": "44173:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1609,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "44181:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "44173:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1594,
																	"id": 1611,
																	"nodeType": "Return",
																	"src": "44166:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1614,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "44317:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1615,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "44332:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44317:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1621,
														"nodeType": "IfStatement",
														"src": "44313:90:0",
														"trueBody": {
															"id": 1620,
															"nodeType": "Block",
															"src": "44339:64:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1617,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1327,
																			"src": "44365:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "44365:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1619,
																	"nodeType": "RevertStatement",
																	"src": "44358:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															1623
														],
														"declarations": [
															{
																"constant": false,
																"id": 1623,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "44673:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 1707,
																"src": "44665:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1622,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "44665:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1624,
														"nodeType": "VariableDeclarationStatement",
														"src": "44665:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "44706:298:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "44777:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "44797:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "44800:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "44803:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "44790:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "44790:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "44777:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "44900:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "44913:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "44923:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "44934:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "44920:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "44920:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "44909:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "44909:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "44900:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "44959:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "44972:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "44979:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "44968:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "44968:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "44959:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1590,
																"isOffset": false,
																"isSlot": false,
																"src": "44803:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "44934:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "44959:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "44972:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1602,
																"isOffset": false,
																"isSlot": false,
																"src": "44900:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1602,
																"isOffset": false,
																"isSlot": false,
																"src": "44913:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1623,
																"isOffset": false,
																"isSlot": false,
																"src": "44777:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1623,
																"isOffset": false,
																"isSlot": false,
																"src": "44923:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1623,
																"isOffset": false,
																"isSlot": false,
																"src": "44979:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1586,
																"isOffset": false,
																"isSlot": false,
																"src": "44797:1:0",
																"valueSize": 1
															},
															{
																"declaration": 1588,
																"isOffset": false,
																"isSlot": false,
																"src": "44800:1:0",
																"valueSize": 1
															}
														],
														"id": 1625,
														"nodeType": "InlineAssembly",
														"src": "44697:307:0"
													},
													{
														"assignments": [
															1627
														],
														"declarations": [
															{
																"constant": false,
																"id": 1627,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "45221:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 1707,
																"src": "45213:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1626,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "45213:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1634,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1628,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "45228:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "45243:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1630,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "45247:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "45243:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1632,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "45242:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "45228:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "45213:46:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "45283:371:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "45350:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "45369:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "45382:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "45365:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "45365:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "45350:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "45457:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "45470:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "45477:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "45466:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "45466:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "45457:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "45600:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "45620:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "45623:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "45616:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "45616:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "45630:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "45612:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "45612:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "45637:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "45608:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "45608:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "45600:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1590,
																"isOffset": false,
																"isSlot": false,
																"src": "45350:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1590,
																"isOffset": false,
																"isSlot": false,
																"src": "45369:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "45457:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "45470:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1627,
																"isOffset": false,
																"isSlot": false,
																"src": "45382:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1627,
																"isOffset": false,
																"isSlot": false,
																"src": "45477:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1627,
																"isOffset": false,
																"isSlot": false,
																"src": "45600:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1627,
																"isOffset": false,
																"isSlot": false,
																"src": "45623:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1627,
																"isOffset": false,
																"isSlot": false,
																"src": "45630:4:0",
																"valueSize": 1
															}
														],
														"id": 1635,
														"nodeType": "InlineAssembly",
														"src": "45274:380:0"
													},
													{
														"expression": {
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1636,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "45723:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1637,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "45732:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1638,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "45740:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "45732:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "45723:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1641,
														"nodeType": "ExpressionStatement",
														"src": "45723:21:0"
													},
													{
														"assignments": [
															1643
														],
														"declarations": [
															{
																"constant": false,
																"id": 1643,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "46075:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 1707,
																"src": "46067:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1642,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "46067:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1650,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "46086:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1645,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "46090:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "46086:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1647,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "46085:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46105:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "46085:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "46067:39:0"
													},
													{
														"expression": {
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1651,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "46327:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46338:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1653,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "46342:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1654,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "46356:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46342:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "46338:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46327:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1658,
														"nodeType": "ExpressionStatement",
														"src": "46327:36:0"
													},
													{
														"expression": {
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1659,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "46397:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46408:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1661,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "46412:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1662,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "46426:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46412:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "46408:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46397:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1666,
														"nodeType": "ExpressionStatement",
														"src": "46397:36:0"
													},
													{
														"expression": {
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1667,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "46468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46479:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1669,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "46483:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1670,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "46497:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46483:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "46479:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46468:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1674,
														"nodeType": "ExpressionStatement",
														"src": "46468:36:0"
													},
													{
														"expression": {
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1675,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "46539:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46550:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1677,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "46554:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1678,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "46568:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46554:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "46550:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46539:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1682,
														"nodeType": "ExpressionStatement",
														"src": "46539:36:0"
													},
													{
														"expression": {
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1683,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "46610:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46621:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1685,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "46625:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1686,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "46639:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46625:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "46621:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46610:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1690,
														"nodeType": "ExpressionStatement",
														"src": "46610:36:0"
													},
													{
														"expression": {
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1691,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "46682:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46693:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1693,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "46697:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1694,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "46711:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46697:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "46693:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46682:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1698,
														"nodeType": "ExpressionStatement",
														"src": "46682:36:0"
													},
													{
														"expression": {
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1699,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1593,
																"src": "47158:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1700,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "47167:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1701,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1643,
																	"src": "47175:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "47167:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "47158:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1704,
														"nodeType": "ExpressionStatement",
														"src": "47158:24:0"
													},
													{
														"expression": {
															"id": 1705,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "47204:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1594,
														"id": 1706,
														"nodeType": "Return",
														"src": "47197:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "42710:318:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "43043:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "43058:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "43050:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "43069:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "43061:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "43080:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "43072:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43049:43:0"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "43124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "43116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43116:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43115:16:0"
									},
									"scope": 2375,
									"src": "43034:4195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "47476:198:0",
										"statements": [
											{
												"assignments": [
													1725
												],
												"declarations": [
													{
														"constant": false,
														"id": 1725,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "47495:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "47487:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1724,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "47487:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1731,
												"initialValue": {
													"arguments": [
														{
															"id": 1727,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "47511:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1728,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "47514:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1729,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "47517:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1726,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1709,
															1752
														],
														"referencedDeclaration": 1709,
														"src": "47504:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47504:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47487:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1733,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "47561:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1332",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1332",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1732,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "47544:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1332_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47544:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1736,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "47581:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1737,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "47584:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1738,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1716,
																	"src": "47587:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1735,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "47574:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47574:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47602:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "47574:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "47544:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1748,
												"nodeType": "IfStatement",
												"src": "47540:103:0",
												"trueBody": {
													"id": 1747,
													"nodeType": "Block",
													"src": "47605:38:0",
													"statements": [
														{
															"expression": {
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1743,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "47620:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47630:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "47620:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1746,
															"nodeType": "ExpressionStatement",
															"src": "47620:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1749,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1725,
													"src": "47660:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1723,
												"id": 1750,
												"nodeType": "Return",
												"src": "47653:13:0"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "47237:123:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "47375:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "47390:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "47382:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "47401:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "47393:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "47412:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "47404:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "47434:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "47425:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1332",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1718,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1717,
														"name": "Rounding",
														"nameLocations": [
															"47425:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1332,
														"src": "47425:8:0"
													},
													"referencedDeclaration": 1332,
													"src": "47425:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1332",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47381:62:0"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "47467:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47466:9:0"
									},
									"scope": 2375,
									"src": "47366:308:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "47973:1616:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1760,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1755,
														"src": "47988:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47993:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "47988:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1766,
												"nodeType": "IfStatement",
												"src": "47984:47:0",
												"trueBody": {
													"id": 1765,
													"nodeType": "Block",
													"src": "47996:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48018:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1759,
															"id": 1764,
															"nodeType": "Return",
															"src": "48011:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1768
												],
												"declarations": [
													{
														"constant": false,
														"id": 1768,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "48730:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1863,
														"src": "48722:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1767,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "48722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1777,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48739:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1771,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1755,
																			"src": "48750:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1770,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2031,
																			2066
																		],
																		"referencedDeclaration": 2031,
																		"src": "48745:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "48745:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "48745:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1775,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "48744:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "48739:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48722:36:0"
											},
											{
												"id": 1862,
												"nodeType": "UncheckedBlock",
												"src": "49165:417:0",
												"statements": [
													{
														"expression": {
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1778,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "49190:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1779,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1768,
																				"src": "49200:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1780,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1755,
																					"src": "49209:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1781,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1768,
																					"src": "49213:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "49209:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "49200:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1784,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "49199:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49224:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "49199:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49190:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1788,
														"nodeType": "ExpressionStatement",
														"src": "49190:35:0"
													},
													{
														"expression": {
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1789,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "49240:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1790,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1768,
																				"src": "49250:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1791,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1755,
																					"src": "49259:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1792,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1768,
																					"src": "49263:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "49259:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "49250:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1795,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "49249:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49274:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "49249:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49240:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1799,
														"nodeType": "ExpressionStatement",
														"src": "49240:35:0"
													},
													{
														"expression": {
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1800,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "49290:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1801,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1768,
																				"src": "49300:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1802,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1755,
																					"src": "49309:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1803,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1768,
																					"src": "49313:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "49309:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "49300:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1806,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "49299:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49324:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "49299:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49290:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1810,
														"nodeType": "ExpressionStatement",
														"src": "49290:35:0"
													},
													{
														"expression": {
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1811,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "49340:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1812,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1768,
																				"src": "49350:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1813,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1755,
																					"src": "49359:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1814,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1768,
																					"src": "49363:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "49359:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "49350:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1817,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "49349:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49374:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "49349:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49340:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1821,
														"nodeType": "ExpressionStatement",
														"src": "49340:35:0"
													},
													{
														"expression": {
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1822,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "49390:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1823,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1768,
																				"src": "49400:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1824,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1755,
																					"src": "49409:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1825,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1768,
																					"src": "49413:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "49409:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "49400:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1828,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "49399:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49424:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "49399:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49390:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1832,
														"nodeType": "ExpressionStatement",
														"src": "49390:35:0"
													},
													{
														"expression": {
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1833,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "49440:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1834,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1768,
																				"src": "49450:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1835,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1755,
																					"src": "49459:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1836,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1768,
																					"src": "49463:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "49459:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "49450:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1839,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "49449:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49474:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "49449:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49440:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1843,
														"nodeType": "ExpressionStatement",
														"src": "49440:35:0"
													},
													{
														"expression": {
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1844,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "49490:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1845,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1768,
																				"src": "49500:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1846,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1755,
																					"src": "49509:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1847,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1768,
																					"src": "49513:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "49509:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "49500:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1850,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "49499:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49524:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "49499:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49490:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1854,
														"nodeType": "ExpressionStatement",
														"src": "49490:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1856,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "49551:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1857,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1755,
																		"src": "49559:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1858,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "49563:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "49559:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1855,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1526,
																"src": "49547:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49547:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1759,
														"id": 1861,
														"nodeType": "Return",
														"src": "49540:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "47682:228:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "47925:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "47938:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "47930:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47929:11:0"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "47964:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47963:9:0"
									},
									"scope": 2375,
									"src": "47916:1673:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "49770:169:0",
										"statements": [
											{
												"id": 1897,
												"nodeType": "UncheckedBlock",
												"src": "49781:151:0",
												"statements": [
													{
														"assignments": [
															1876
														],
														"declarations": [
															{
																"constant": false,
																"id": 1876,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "49814:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1897,
																"src": "49806:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1875,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "49806:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1880,
														"initialValue": {
															"arguments": [
																{
																	"id": 1878,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "49828:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1877,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1864,
																	1899
																],
																"referencedDeclaration": 1864,
																"src": "49823:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49823:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "49806:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1881,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1876,
																"src": "49852:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1883,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1870,
																						"src": "49879:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1332",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1332",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1882,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2374,
																					"src": "49862:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1332_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "49862:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1887,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1885,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1876,
																						"src": "49892:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1886,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1876,
																						"src": "49901:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "49892:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1888,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1867,
																					"src": "49910:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "49892:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "49862:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49918:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "49862:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49914:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1894,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "49861:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "49852:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1874,
														"id": 1896,
														"nodeType": "Return",
														"src": "49845:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "49597:91:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "49703:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "49716:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "49708:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "49728:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "49719:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1332",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1869,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1868,
														"name": "Rounding",
														"nameLocations": [
															"49719:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1332,
														"src": "49719:8:0"
													},
													"referencedDeclaration": 1332,
													"src": "49719:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1332",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49707:30:0"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "49761:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49760:9:0"
									},
									"scope": 2375,
									"src": "49694:245:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "50136:958:0",
										"statements": [
											{
												"assignments": [
													1908
												],
												"declarations": [
													{
														"constant": false,
														"id": 1908,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "50155:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2030,
														"src": "50147:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1907,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50147:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1910,
												"initialValue": {
													"hexValue": "30",
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "50164:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50147:18:0"
											},
											{
												"id": 2027,
												"nodeType": "UncheckedBlock",
												"src": "50176:887:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1911,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "50205:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50214:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "50205:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50220:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50205:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1925,
														"nodeType": "IfStatement",
														"src": "50201:102:0",
														"trueBody": {
															"id": 1924,
															"nodeType": "Block",
															"src": "50223:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1916,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "50242:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50252:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "50242:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1919,
																	"nodeType": "ExpressionStatement",
																	"src": "50242:13:0"
																},
																{
																	"expression": {
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1920,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "50274:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50284:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "50274:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1923,
																	"nodeType": "ExpressionStatement",
																	"src": "50274:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1926,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "50321:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50330:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "50321:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50335:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50321:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1940,
														"nodeType": "IfStatement",
														"src": "50317:99:0",
														"trueBody": {
															"id": 1939,
															"nodeType": "Block",
															"src": "50338:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1931,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "50357:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50367:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "50357:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1934,
																	"nodeType": "ExpressionStatement",
																	"src": "50357:12:0"
																},
																{
																	"expression": {
																		"id": 1937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1935,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "50388:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50398:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "50388:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1938,
																	"nodeType": "ExpressionStatement",
																	"src": "50388:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "50434:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50443:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "50434:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50448:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50434:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1955,
														"nodeType": "IfStatement",
														"src": "50430:99:0",
														"trueBody": {
															"id": 1954,
															"nodeType": "Block",
															"src": "50451:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1946,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "50470:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50480:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "50470:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1949,
																	"nodeType": "ExpressionStatement",
																	"src": "50470:12:0"
																},
																{
																	"expression": {
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1950,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "50501:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50511:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "50501:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1953,
																	"nodeType": "ExpressionStatement",
																	"src": "50501:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1956,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "50547:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50556:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "50547:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50561:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50547:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1970,
														"nodeType": "IfStatement",
														"src": "50543:99:0",
														"trueBody": {
															"id": 1969,
															"nodeType": "Block",
															"src": "50564:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1961,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "50583:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50593:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "50583:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1964,
																	"nodeType": "ExpressionStatement",
																	"src": "50583:12:0"
																},
																{
																	"expression": {
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1965,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "50614:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50624:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "50614:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1968,
																	"nodeType": "ExpressionStatement",
																	"src": "50614:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1971,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "50660:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50669:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "50660:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50673:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50660:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1985,
														"nodeType": "IfStatement",
														"src": "50656:96:0",
														"trueBody": {
															"id": 1984,
															"nodeType": "Block",
															"src": "50676:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1976,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "50695:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50705:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "50695:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1979,
																	"nodeType": "ExpressionStatement",
																	"src": "50695:11:0"
																},
																{
																	"expression": {
																		"id": 1982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1980,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "50725:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50735:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "50725:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1983,
																	"nodeType": "ExpressionStatement",
																	"src": "50725:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1986,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "50770:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50779:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "50770:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50783:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50770:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2000,
														"nodeType": "IfStatement",
														"src": "50766:96:0",
														"trueBody": {
															"id": 1999,
															"nodeType": "Block",
															"src": "50786:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1991,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "50805:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50815:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "50805:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1994,
																	"nodeType": "ExpressionStatement",
																	"src": "50805:11:0"
																},
																{
																	"expression": {
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1995,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "50835:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50845:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "50835:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1998,
																	"nodeType": "ExpressionStatement",
																	"src": "50835:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2001,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "50880:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50889:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "50880:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50893:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50880:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2015,
														"nodeType": "IfStatement",
														"src": "50876:96:0",
														"trueBody": {
															"id": 2014,
															"nodeType": "Block",
															"src": "50896:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2006,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "50915:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50925:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "50915:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2009,
																	"nodeType": "ExpressionStatement",
																	"src": "50915:11:0"
																},
																{
																	"expression": {
																		"id": 2012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2010,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "50945:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50955:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "50945:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2013,
																	"nodeType": "ExpressionStatement",
																	"src": "50945:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2016,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "50990:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50999:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "50990:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51003:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50990:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2026,
														"nodeType": "IfStatement",
														"src": "50986:66:0",
														"trueBody": {
															"id": 2025,
															"nodeType": "Block",
															"src": "51006:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 2023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2021,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "51025:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51035:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "51025:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2024,
																	"nodeType": "ExpressionStatement",
																	"src": "51025:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2028,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1908,
													"src": "51080:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1906,
												"id": 2029,
												"nodeType": "Return",
												"src": "51073:13:0"
											}
										]
									},
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "49947:122:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "50084:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "50097:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "50089:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50088:15:0"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "50127:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50126:9:0"
									},
									"scope": 2375,
									"src": "50075:1019:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2065,
										"nodeType": "Block",
										"src": "51333:173:0",
										"statements": [
											{
												"id": 2064,
												"nodeType": "UncheckedBlock",
												"src": "51344:155:0",
												"statements": [
													{
														"assignments": [
															2043
														],
														"declarations": [
															{
																"constant": false,
																"id": 2043,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "51377:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2064,
																"src": "51369:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2042,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "51369:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2047,
														"initialValue": {
															"arguments": [
																{
																	"id": 2045,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "51391:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2044,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2031,
																	2066
																],
																"referencedDeclaration": 2031,
																"src": "51386:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51386:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "51369:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2048,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "51419:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2050,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2037,
																						"src": "51446:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1332",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1332",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2049,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2374,
																					"src": "51429:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1332_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "51429:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2054,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2052,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "51459:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2053,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2043,
																						"src": "51464:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "51459:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2055,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2034,
																					"src": "51473:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "51459:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "51429:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51485:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "51429:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51481:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2061,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "51428:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "51419:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2041,
														"id": 2063,
														"nodeType": "Return",
														"src": "51412:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "51102:145:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "51262:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "51275:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "51267:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "51291:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "51282:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1332",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2036,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2035,
														"name": "Rounding",
														"nameLocations": [
															"51282:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1332,
														"src": "51282:8:0"
													},
													"referencedDeclaration": 1332,
													"src": "51282:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1332",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51266:34:0"
									},
									"returnParameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "51324:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51323:9:0"
									},
									"scope": 2375,
									"src": "51253:253:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2194,
										"nodeType": "Block",
										"src": "51705:886:0",
										"statements": [
											{
												"assignments": [
													2075
												],
												"declarations": [
													{
														"constant": false,
														"id": 2075,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "51724:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2194,
														"src": "51716:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2074,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "51716:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2077,
												"initialValue": {
													"hexValue": "30",
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "51733:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51716:18:0"
											},
											{
												"id": 2191,
												"nodeType": "UncheckedBlock",
												"src": "51745:815:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2078,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "51774:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51783:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51789:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "51783:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "51774:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2094,
														"nodeType": "IfStatement",
														"src": "51770:106:0",
														"trueBody": {
															"id": 2093,
															"nodeType": "Block",
															"src": "51793:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2083,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2069,
																			"src": "51812:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "51821:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "51827:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "51821:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "51812:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2088,
																	"nodeType": "ExpressionStatement",
																	"src": "51812:17:0"
																},
																{
																	"expression": {
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2089,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "51848:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51858:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "51848:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2092,
																	"nodeType": "ExpressionStatement",
																	"src": "51848:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2095,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "51894:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51903:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51909:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "51903:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "51894:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2111,
														"nodeType": "IfStatement",
														"src": "51890:106:0",
														"trueBody": {
															"id": 2110,
															"nodeType": "Block",
															"src": "51913:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2100,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2069,
																			"src": "51932:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "51941:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "51947:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "51941:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "51932:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2105,
																	"nodeType": "ExpressionStatement",
																	"src": "51932:17:0"
																},
																{
																	"expression": {
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2106,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "51968:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51978:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "51968:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2109,
																	"nodeType": "ExpressionStatement",
																	"src": "51968:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2112,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "52014:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52023:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52029:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "52023:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "52014:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2128,
														"nodeType": "IfStatement",
														"src": "52010:106:0",
														"trueBody": {
															"id": 2127,
															"nodeType": "Block",
															"src": "52033:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 2121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2117,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2069,
																			"src": "52052:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52061:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52067:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "52061:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "52052:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2122,
																	"nodeType": "ExpressionStatement",
																	"src": "52052:17:0"
																},
																{
																	"expression": {
																		"id": 2125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2123,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "52088:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52098:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "52088:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2126,
																	"nodeType": "ExpressionStatement",
																	"src": "52088:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2129,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "52134:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52143:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52149:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "52143:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "52134:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2145,
														"nodeType": "IfStatement",
														"src": "52130:103:0",
														"trueBody": {
															"id": 2144,
															"nodeType": "Block",
															"src": "52152:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2134,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2069,
																			"src": "52171:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52180:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52186:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "52180:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "52171:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2139,
																	"nodeType": "ExpressionStatement",
																	"src": "52171:16:0"
																},
																{
																	"expression": {
																		"id": 2142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2140,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "52206:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52216:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "52206:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2143,
																	"nodeType": "ExpressionStatement",
																	"src": "52206:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "52251:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52260:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52266:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "52260:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "52251:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2162,
														"nodeType": "IfStatement",
														"src": "52247:103:0",
														"trueBody": {
															"id": 2161,
															"nodeType": "Block",
															"src": "52269:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 2155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2069,
																			"src": "52288:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52297:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52303:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "52297:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "52288:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2156,
																	"nodeType": "ExpressionStatement",
																	"src": "52288:16:0"
																},
																{
																	"expression": {
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2157,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "52323:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52333:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "52323:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2160,
																	"nodeType": "ExpressionStatement",
																	"src": "52323:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2163,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "52368:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52377:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52383:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "52377:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "52368:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2179,
														"nodeType": "IfStatement",
														"src": "52364:103:0",
														"trueBody": {
															"id": 2178,
															"nodeType": "Block",
															"src": "52386:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2168,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2069,
																			"src": "52405:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52414:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52420:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "52414:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "52405:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2173,
																	"nodeType": "ExpressionStatement",
																	"src": "52405:16:0"
																},
																{
																	"expression": {
																		"id": 2176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2174,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "52440:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52450:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "52440:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2177,
																	"nodeType": "ExpressionStatement",
																	"src": "52440:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2180,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "52485:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52494:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52500:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "52494:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "52485:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2190,
														"nodeType": "IfStatement",
														"src": "52481:68:0",
														"trueBody": {
															"id": 2189,
															"nodeType": "Block",
															"src": "52503:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2185,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "52522:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52532:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "52522:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2188,
																	"nodeType": "ExpressionStatement",
																	"src": "52522:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2192,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2075,
													"src": "52577:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2073,
												"id": 2193,
												"nodeType": "Return",
												"src": "52570:13:0"
											}
										]
									},
									"documentation": {
										"id": 2067,
										"nodeType": "StructuredDocumentation",
										"src": "51514:123:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "51652:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "51666:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "51658:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51657:15:0"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "51696:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51695:9:0"
									},
									"scope": 2375,
									"src": "51643:948:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2229,
										"nodeType": "Block",
										"src": "52832:175:0",
										"statements": [
											{
												"id": 2228,
												"nodeType": "UncheckedBlock",
												"src": "52843:157:0",
												"statements": [
													{
														"assignments": [
															2207
														],
														"declarations": [
															{
																"constant": false,
																"id": 2207,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "52876:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2228,
																"src": "52868:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2206,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "52868:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2211,
														"initialValue": {
															"arguments": [
																{
																	"id": 2209,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2198,
																	"src": "52891:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2208,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2195,
																	2230
																],
																"referencedDeclaration": 2195,
																"src": "52885:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "52885:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "52868:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2212,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "52919:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2214,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2201,
																						"src": "52946:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1332",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1332",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2213,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2374,
																					"src": "52929:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1332_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "52929:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2218,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2216,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "52959:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2217,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2207,
																						"src": "52965:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "52959:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2219,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2198,
																					"src": "52974:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "52959:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "52929:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52986:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "52929:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52982:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2225,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "52928:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "52919:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2205,
														"id": 2227,
														"nodeType": "Return",
														"src": "52912:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "52599:146:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "52760:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "52774:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "52766:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "52790:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "52781:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1332",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2200,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2199,
														"name": "Rounding",
														"nameLocations": [
															"52781:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1332,
														"src": "52781:8:0"
													},
													"referencedDeclaration": 1332,
													"src": "52781:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1332",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52765:34:0"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "52823:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52822:9:0"
									},
									"scope": 2375,
									"src": "52751:256:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2316,
										"nodeType": "Block",
										"src": "53335:624:0",
										"statements": [
											{
												"assignments": [
													2239
												],
												"declarations": [
													{
														"constant": false,
														"id": 2239,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "53354:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2316,
														"src": "53346:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2238,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "53346:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2241,
												"initialValue": {
													"hexValue": "30",
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "53363:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53346:18:0"
											},
											{
												"id": 2313,
												"nodeType": "UncheckedBlock",
												"src": "53375:553:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2242,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2233,
																	"src": "53404:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53413:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "53404:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53419:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "53404:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2256,
														"nodeType": "IfStatement",
														"src": "53400:101:0",
														"trueBody": {
															"id": 2255,
															"nodeType": "Block",
															"src": "53422:79:0",
															"statements": [
																{
																	"expression": {
																		"id": 2249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2247,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2233,
																			"src": "53441:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53451:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "53441:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2250,
																	"nodeType": "ExpressionStatement",
																	"src": "53441:13:0"
																},
																{
																	"expression": {
																		"id": 2253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2251,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2239,
																			"src": "53473:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53483:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "53473:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2254,
																	"nodeType": "ExpressionStatement",
																	"src": "53473:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2257,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2233,
																	"src": "53519:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53528:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "53519:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53533:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "53519:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2271,
														"nodeType": "IfStatement",
														"src": "53515:98:0",
														"trueBody": {
															"id": 2270,
															"nodeType": "Block",
															"src": "53536:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 2264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2262,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2233,
																			"src": "53555:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53565:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "53555:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2265,
																	"nodeType": "ExpressionStatement",
																	"src": "53555:12:0"
																},
																{
																	"expression": {
																		"id": 2268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2266,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2239,
																			"src": "53586:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53596:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "53586:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2269,
																	"nodeType": "ExpressionStatement",
																	"src": "53586:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2272,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2233,
																	"src": "53631:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53640:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "53631:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53645:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "53631:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2286,
														"nodeType": "IfStatement",
														"src": "53627:98:0",
														"trueBody": {
															"id": 2285,
															"nodeType": "Block",
															"src": "53648:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2277,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2233,
																			"src": "53667:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53677:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "53667:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2280,
																	"nodeType": "ExpressionStatement",
																	"src": "53667:12:0"
																},
																{
																	"expression": {
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2281,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2239,
																			"src": "53698:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53708:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "53698:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2284,
																	"nodeType": "ExpressionStatement",
																	"src": "53698:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2287,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2233,
																	"src": "53743:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53752:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "53743:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53757:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "53743:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2301,
														"nodeType": "IfStatement",
														"src": "53739:98:0",
														"trueBody": {
															"id": 2300,
															"nodeType": "Block",
															"src": "53760:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 2294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2292,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2233,
																			"src": "53779:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53789:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "53779:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2295,
																	"nodeType": "ExpressionStatement",
																	"src": "53779:12:0"
																},
																{
																	"expression": {
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2296,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2239,
																			"src": "53810:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53820:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "53810:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2299,
																	"nodeType": "ExpressionStatement",
																	"src": "53810:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2302,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2233,
																	"src": "53855:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53864:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "53855:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "53855:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2312,
														"nodeType": "IfStatement",
														"src": "53851:66:0",
														"trueBody": {
															"id": 2311,
															"nodeType": "Block",
															"src": "53871:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 2309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2307,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2239,
																			"src": "53890:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53900:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "53890:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2310,
																	"nodeType": "ExpressionStatement",
																	"src": "53890:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2314,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2239,
													"src": "53945:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2237,
												"id": 2315,
												"nodeType": "Return",
												"src": "53938:13:0"
											}
										]
									},
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "53015:251:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "53281:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "53296:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "53288:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53287:15:0"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "53326:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53325:9:0"
									},
									"scope": 2375,
									"src": "53272:687:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2354,
										"nodeType": "Block",
										"src": "54202:182:0",
										"statements": [
											{
												"id": 2353,
												"nodeType": "UncheckedBlock",
												"src": "54213:164:0",
												"statements": [
													{
														"assignments": [
															2329
														],
														"declarations": [
															{
																"constant": false,
																"id": 2329,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "54246:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2353,
																"src": "54238:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2328,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "54238:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2333,
														"initialValue": {
															"arguments": [
																{
																	"id": 2331,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2320,
																	"src": "54262:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2330,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2317,
																	2355
																],
																"referencedDeclaration": 2317,
																"src": "54255:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54255:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "54238:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2334,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2329,
																"src": "54290:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2336,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2323,
																						"src": "54317:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1332",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1332",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2335,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2374,
																					"src": "54300:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1332_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "54300:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2338,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "54330:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2341,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2339,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2329,
																									"src": "54336:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2340,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "54346:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "54336:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2342,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "54335:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "54330:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2344,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "54351:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "54330:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "54300:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54363:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "54300:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54359:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "54299:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "54290:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2327,
														"id": 2352,
														"nodeType": "Return",
														"src": "54283:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2318,
										"nodeType": "StructuredDocumentation",
										"src": "53967:147:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "54129:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "54144:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "54136:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "54160:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "54151:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1332",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2322,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2321,
														"name": "Rounding",
														"nameLocations": [
															"54151:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1332,
														"src": "54151:8:0"
													},
													"referencedDeclaration": 1332,
													"src": "54151:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1332",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54135:34:0"
									},
									"returnParameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "54193:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54192:9:0"
									},
									"scope": 2375,
									"src": "54120:264:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2373,
										"nodeType": "Block",
										"src": "54587:50:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2366,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2359,
																	"src": "54611:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1332",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1332",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "54605:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2364,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "54605:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54605:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54623:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "54605:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54628:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "54605:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2363,
												"id": 2372,
												"nodeType": "Return",
												"src": "54598:31:0"
											}
										]
									},
									"documentation": {
										"id": 2356,
										"nodeType": "StructuredDocumentation",
										"src": "54392:115:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "54522:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "54548:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "54539:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1332",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2357,
														"name": "Rounding",
														"nameLocations": [
															"54539:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1332,
														"src": "54539:8:0"
													},
													"referencedDeclaration": 1332,
													"src": "54539:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1332",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54538:19:0"
									},
									"returnParameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "54581:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54580:6:0"
									},
									"scope": 2375,
									"src": "54513:124:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3597,
							"src": "39320:15320:0",
							"usedErrors": [
								1327
							],
							"usedEvents": []
						},
						{
							"id": 2376,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "54844:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2377,
								"nodeType": "StructuredDocumentation",
								"src": "54872:82:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2479,
							"linearizedBaseContracts": [
								2479
							],
							"name": "SignedMath",
							"nameLocation": "54964:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2394,
										"nodeType": "Block",
										"src": "55120:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2387,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2380,
															"src": "55138:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2388,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2382,
															"src": "55142:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "55138:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2391,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2382,
														"src": "55150:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "55138:13:0",
													"trueExpression": {
														"id": 2390,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "55146:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2386,
												"id": 2393,
												"nodeType": "Return",
												"src": "55131:20:0"
											}
										]
									},
									"documentation": {
										"id": 2378,
										"nodeType": "StructuredDocumentation",
										"src": "54982:68:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "55065:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "55076:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "55069:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2379,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "55069:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "55086:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "55079:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2381,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "55079:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55068:20:0"
									},
									"returnParameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "55112:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2384,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "55112:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55111:8:0"
									},
									"scope": 2479,
									"src": "55056:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2412,
										"nodeType": "Block",
										"src": "55306:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2405,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2398,
															"src": "55324:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2406,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2400,
															"src": "55328:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "55324:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2409,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2400,
														"src": "55336:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "55324:13:0",
													"trueExpression": {
														"id": 2408,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2398,
														"src": "55332:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2404,
												"id": 2411,
												"nodeType": "Return",
												"src": "55317:20:0"
											}
										]
									},
									"documentation": {
										"id": 2396,
										"nodeType": "StructuredDocumentation",
										"src": "55167:69:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "55251:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "55262:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "55255:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2397,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "55255:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "55272:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "55265:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2399,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "55265:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55254:20:0"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "55298:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2402,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "55298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55297:8:0"
									},
									"scope": 2479,
									"src": "55242:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2456,
										"nodeType": "Block",
										"src": "55556:166:0",
										"statements": [
											{
												"assignments": [
													2424
												],
												"declarations": [
													{
														"constant": false,
														"id": 2424,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "55627:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 2456,
														"src": "55620:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2423,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "55620:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2437,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2425,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2416,
																	"src": "55632:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2426,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2418,
																	"src": "55636:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "55632:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2428,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "55631:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2429,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2416,
																				"src": "55643:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2430,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2418,
																				"src": "55647:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "55643:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2432,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "55642:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55653:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "55642:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2435,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "55641:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "55631:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55620:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2438,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2424,
														"src": "55673:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2443,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2424,
																						"src": "55693:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2442,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "55685:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2441,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "55685:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "55685:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "55699:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "55685:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "55678:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2439,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "55678:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "55678:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2448,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2416,
																				"src": "55707:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2449,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2418,
																				"src": "55711:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "55707:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2451,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "55706:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "55678:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2453,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "55677:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "55673:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2422,
												"id": 2455,
												"nodeType": "Return",
												"src": "55666:48:0"
											}
										]
									},
									"documentation": {
										"id": 2414,
										"nodeType": "StructuredDocumentation",
										"src": "55353:129:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "55497:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "55512:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "55505:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2415,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "55505:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "55522:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "55515:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2417,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "55515:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55504:20:0"
									},
									"returnParameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "55548:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2420,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "55548:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55547:8:0"
									},
									"scope": 2479,
									"src": "55488:234:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2477,
										"nodeType": "Block",
										"src": "55871:163:0",
										"statements": [
											{
												"id": 2476,
												"nodeType": "UncheckedBlock",
												"src": "55882:145:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2467,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "55999:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56004:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "55999:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "56012:2:0",
																		"subExpression": {
																			"id": 2471,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "56013:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "55999:15:0",
																	"trueExpression": {
																		"id": 2470,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2460,
																		"src": "56008:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "55991:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2465,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "55991:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55991:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2464,
														"id": 2475,
														"nodeType": "Return",
														"src": "55984:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2458,
										"nodeType": "StructuredDocumentation",
										"src": "55730:80:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "55825:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "55836:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "55829:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2459,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "55829:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55828:10:0"
									},
									"returnParameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "55862:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55861:9:0"
									},
									"scope": 2479,
									"src": "55816:218:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3597,
							"src": "54956:1081:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2480,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "56225:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2481,
								"nodeType": "StructuredDocumentation",
								"src": "56255:36:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2729,
							"linearizedBaseContracts": [
								2729
							],
							"name": "Strings",
							"nameLocation": "56301:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2484,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "56341:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2729,
									"src": "56316:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2482,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "56316:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2483,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "56354:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2487,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "56402:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2729,
									"src": "56379:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2485,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "56379:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2486,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "56419:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2488,
										"nodeType": "StructuredDocumentation",
										"src": "56430:83:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2494,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "56525:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "56562:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "56554:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "56577:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "56569:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56553:31:0"
									},
									"src": "56519:66:0"
								},
								{
									"body": {
										"id": 2541,
										"nodeType": "Block",
										"src": "56762:647:0",
										"statements": [
											{
												"id": 2540,
												"nodeType": "UncheckedBlock",
												"src": "56773:629:0",
												"statements": [
													{
														"assignments": [
															2503
														],
														"declarations": [
															{
																"constant": false,
																"id": 2503,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "56806:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2540,
																"src": "56798:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2502,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "56798:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2510,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2506,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2497,
																		"src": "56826:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2504,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2375,
																		"src": "56815:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2375_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "56820:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2195,
																	"src": "56815:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56815:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56835:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "56815:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "56798:38:0"
													},
													{
														"assignments": [
															2512
														],
														"declarations": [
															{
																"constant": false,
																"id": 2512,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "56865:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2540,
																"src": "56851:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2511,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "56851:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2517,
														"initialValue": {
															"arguments": [
																{
																	"id": 2515,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2503,
																	"src": "56885:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "56874:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2513,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "56878:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56874:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "56851:41:0"
													},
													{
														"assignments": [
															2519
														],
														"declarations": [
															{
																"constant": false,
																"id": 2519,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "56915:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 2540,
																"src": "56907:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2518,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "56907:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2520,
														"nodeType": "VariableDeclarationStatement",
														"src": "56907:11:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "56990:69:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "57009:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "57020:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "57032:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "57036:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "57028:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "57028:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "57016:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "57016:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "57009:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2512,
																"isOffset": false,
																"isSlot": false,
																"src": "57020:6:0",
																"valueSize": 1
															},
															{
																"declaration": 2503,
																"isOffset": false,
																"isSlot": false,
																"src": "57036:6:0",
																"valueSize": 1
															},
															{
																"declaration": 2519,
																"isOffset": false,
																"isSlot": false,
																"src": "57009:3:0",
																"valueSize": 1
															}
														],
														"id": 2521,
														"nodeType": "InlineAssembly",
														"src": "56981:78:0"
													},
													{
														"body": {
															"id": 2536,
															"nodeType": "Block",
															"src": "57086:277:0",
															"statements": [
																{
																	"expression": {
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "57105:5:0",
																		"subExpression": {
																			"id": 2523,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "57105:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2525,
																	"nodeType": "ExpressionStatement",
																	"src": "57105:5:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "57190:88:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "57221:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "57235:5:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "57242:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "57231:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "57231:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "57247:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "57226:4:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "57226:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "57213:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "57213:46:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "57213:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 2484,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "57247:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2519,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "57221:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2497,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "57235:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 2526,
																	"nodeType": "InlineAssembly",
																	"src": "57181:97:0"
																},
																{
																	"expression": {
																		"id": 2529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2527,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2497,
																			"src": "57296:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "57305:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "57296:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2530,
																	"nodeType": "ExpressionStatement",
																	"src": "57296:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2531,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2497,
																			"src": "57330:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "57339:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "57330:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2535,
																	"nodeType": "IfStatement",
																	"src": "57326:21:0",
																	"trueBody": {
																		"id": 2534,
																		"nodeType": "Break",
																		"src": "57342:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57080:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2537,
														"nodeType": "WhileStatement",
														"src": "57073:290:0"
													},
													{
														"expression": {
															"id": 2538,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2512,
															"src": "57384:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2501,
														"id": 2539,
														"nodeType": "Return",
														"src": "57377:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2495,
										"nodeType": "StructuredDocumentation",
										"src": "56593:92:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "56700:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "56717:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "56709:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56708:15:0"
									},
									"returnParameters": {
										"id": 2501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "56747:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2499,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "56747:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56746:15:0"
									},
									"scope": 2729,
									"src": "56691:718:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2567,
										"nodeType": "Block",
										"src": "57590:94:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2545,
																	"src": "57622:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "57630:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "57622:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "57640:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "57622:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "57634:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2562,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2545,
																			"src": "57668:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2560,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2479,
																			"src": "57653:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2479_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "57664:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2478,
																		"src": "57653:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "57653:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2559,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2542,
																"src": "57644:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57644:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "57608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2550,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "57608:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 2552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57615:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "57608:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57608:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2549,
												"id": 2566,
												"nodeType": "Return",
												"src": "57601:75:0"
											}
										]
									},
									"documentation": {
										"id": 2543,
										"nodeType": "StructuredDocumentation",
										"src": "57417:91:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "57523:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "57545:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "57538:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2544,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "57538:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57537:14:0"
									},
									"returnParameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "57575:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2547,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "57575:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57574:15:0"
									},
									"scope": 2729,
									"src": "57514:170:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2587,
										"nodeType": "Block",
										"src": "57868:104:0",
										"statements": [
											{
												"id": 2586,
												"nodeType": "UncheckedBlock",
												"src": "57879:86:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2577,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2571,
																	"src": "57923:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2580,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2571,
																				"src": "57942:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2578,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2375,
																				"src": "57930:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2375_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "57935:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2317,
																			"src": "57930:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "57930:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "57951:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "57930:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2576,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2588,
																	2671,
																	2691
																],
																"referencedDeclaration": 2671,
																"src": "57911:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57911:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2575,
														"id": 2585,
														"nodeType": "Return",
														"src": "57904:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2569,
										"nodeType": "StructuredDocumentation",
										"src": "57692:96:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "57803:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "57823:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "57815:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57814:15:0"
									},
									"returnParameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "57853:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2573,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "57853:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57852:15:0"
									},
									"scope": 2729,
									"src": "57794:178:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2670,
										"nodeType": "Block",
										"src": "58190:448:0",
										"statements": [
											{
												"assignments": [
													2599
												],
												"declarations": [
													{
														"constant": false,
														"id": 2599,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "58209:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2670,
														"src": "58201:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2598,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2601,
												"initialValue": {
													"id": 2600,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2591,
													"src": "58222:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58201:26:0"
											},
											{
												"assignments": [
													2603
												],
												"declarations": [
													{
														"constant": false,
														"id": 2603,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "58251:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2670,
														"src": "58238:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2602,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "58238:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2612,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "58270:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2607,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2593,
																	"src": "58274:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "58270:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "58283:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "58270:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "58260:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2604,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "58264:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58260:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58238:47:0"
											},
											{
												"expression": {
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2613,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "58296:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2615,
														"indexExpression": {
															"hexValue": "30",
															"id": 2614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58303:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "58296:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58308:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "58296:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2618,
												"nodeType": "ExpressionStatement",
												"src": "58296:15:0"
											},
											{
												"expression": {
													"id": 2623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2619,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "58322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2621,
														"indexExpression": {
															"hexValue": "31",
															"id": 2620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58329:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "58322:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58334:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "58322:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2624,
												"nodeType": "ExpressionStatement",
												"src": "58322:15:0"
											},
											{
												"body": {
													"id": 2653,
													"nodeType": "Block",
													"src": "58393:98:0",
													"statements": [
														{
															"expression": {
																"id": 2647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2639,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2603,
																		"src": "58408:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2641,
																	"indexExpression": {
																		"id": 2640,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2626,
																		"src": "58415:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "58408:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2642,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2484,
																		"src": "58420:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2646,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2643,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2599,
																			"src": "58431:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "58444:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "58431:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "58420:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "58408:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2648,
															"nodeType": "ExpressionStatement",
															"src": "58408:40:0"
														},
														{
															"expression": {
																"id": 2651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2649,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2599,
																	"src": "58463:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "58478:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "58463:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2652,
															"nodeType": "ExpressionStatement",
															"src": "58463:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2633,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2626,
														"src": "58381:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "58381:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2654,
												"initializationExpression": {
													"assignments": [
														2626
													],
													"declarations": [
														{
															"constant": false,
															"id": 2626,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "58361:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2654,
															"src": "58353:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2625,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "58353:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2632,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "58365:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2628,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "58369:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "58365:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58378:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "58365:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "58353:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "58388:3:0",
														"subExpression": {
															"id": 2636,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2626,
															"src": "58390:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2638,
													"nodeType": "ExpressionStatement",
													"src": "58388:3:0"
												},
												"nodeType": "ForStatement",
												"src": "58348:143:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2655,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2599,
														"src": "58505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58519:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "58505:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2664,
												"nodeType": "IfStatement",
												"src": "58501:98:0",
												"trueBody": {
													"id": 2663,
													"nodeType": "Block",
													"src": "58522:77:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2659,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2591,
																		"src": "58573:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2660,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2593,
																		"src": "58580:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2658,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2494,
																	"src": "58544:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58544:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2662,
															"nodeType": "RevertStatement",
															"src": "58537:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2667,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "58623:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "58616:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2665,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "58616:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 2668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58616:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2597,
												"id": 2669,
												"nodeType": "Return",
												"src": "58609:21:0"
											}
										]
									},
									"documentation": {
										"id": 2589,
										"nodeType": "StructuredDocumentation",
										"src": "57980:114:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "58109:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "58129:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "58121:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "58144:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "58136:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58120:31:0"
									},
									"returnParameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "58175:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2595,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "58175:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58174:15:0"
									},
									"scope": 2729,
									"src": "58100:538:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2690,
										"nodeType": "Block",
										"src": "58876:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2684,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "58922:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "58914:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2682,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "58914:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "58914:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "58906:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2680,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "58906:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58906:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2687,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2487,
															"src": "58930:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2679,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2588,
															2671,
															2691
														],
														"referencedDeclaration": 2671,
														"src": "58894:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58894:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2678,
												"id": 2689,
												"nodeType": "Return",
												"src": "58887:58:0"
											}
										]
									},
									"documentation": {
										"id": 2672,
										"nodeType": "StructuredDocumentation",
										"src": "58646:151:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "58812:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "58832:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "58824:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58823:14:0"
									},
									"returnParameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "58861:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2676,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "58861:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58860:15:0"
									},
									"scope": 2729,
									"src": "58803:150:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2727,
										"nodeType": "Block",
										"src": "59113:106:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2703,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2694,
																		"src": "59137:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "59131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2701,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "59131:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59131:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59140:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "59131:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2708,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2696,
																		"src": "59156:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "59150:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2706,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "59150:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59150:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59159:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "59150:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "59131:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2715,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2694,
																			"src": "59185:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "59179:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2713,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "59179:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "59179:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2712,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "59169:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59169:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2721,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2696,
																			"src": "59208:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "59202:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2719,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "59202:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "59202:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2718,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "59192:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59192:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "59169:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "59131:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2700,
												"id": 2726,
												"nodeType": "Return",
												"src": "59124:87:0"
											}
										]
									},
									"documentation": {
										"id": 2692,
										"nodeType": "StructuredDocumentation",
										"src": "58961:68:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "59044:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "59064:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "59050:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2693,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "59050:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "59081:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "59067:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2695,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "59067:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59049:34:0"
									},
									"returnParameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "59107:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "59107:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59106:6:0"
									},
									"scope": 2729,
									"src": "59035:184:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3597,
							"src": "56293:2929:0",
							"usedErrors": [
								2494
							],
							"usedEvents": []
						},
						{
							"id": 2730,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "59454:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2731,
								"nodeType": "StructuredDocumentation",
								"src": "59482:336:0",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2800,
							"linearizedBaseContracts": [
								2800
							],
							"name": "MessageHashUtils",
							"nameLocation": "59828:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2740,
										"nodeType": "Block",
										"src": "60628:375:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "60692:304:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60714:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "60720:34:0",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "60707:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60707:48:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "60707:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60817:4:0",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nodeType": "YulIdentifier",
																		"src": "60823:11:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "60810:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60810:25:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "60810:25:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "60890:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60910:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60916:4:0",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "60900:9:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60900:21:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nodeType": "YulIdentifier",
																	"src": "60890:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2737,
														"isOffset": false,
														"isSlot": false,
														"src": "60890:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2734,
														"isOffset": false,
														"isSlot": false,
														"src": "60823:11:0",
														"valueSize": 1
													}
												],
												"id": 2739,
												"nodeType": "InlineAssembly",
												"src": "60683:313:0"
											}
										]
									},
									"documentation": {
										"id": 2732,
										"nodeType": "StructuredDocumentation",
										"src": "59852:678:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "60545:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "60576:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "60568:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2733,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "60568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60567:21:0"
									},
									"returnParameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "60620:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "60612:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2736,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "60612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60611:16:0"
									},
									"scope": 2800,
									"src": "60536:467:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2766,
										"nodeType": "Block",
										"src": "61567:146:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "61621:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2758,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2744,
																						"src": "61678:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "61686:6:0",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "61678:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2756,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2729,
																					"src": "61661:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$2729_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "61669:8:0",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2542,
																				"src": "61661:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "61661:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "61655:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2754,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "61655:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "61655:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2762,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "61696:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "61608:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2750,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "61608:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "61614:6:0",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "61608:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "61608:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2749,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "61598:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61598:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2748,
												"id": 2765,
												"nodeType": "Return",
												"src": "61578:127:0"
											}
										]
									},
									"documentation": {
										"id": 2742,
										"nodeType": "StructuredDocumentation",
										"src": "61011:464:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "61490:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "61526:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "61513:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2743,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "61513:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61512:22:0"
									},
									"returnParameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "61558:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2746,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "61558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61557:9:0"
									},
									"scope": 2800,
									"src": "61481:232:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2786,
										"nodeType": "Block",
										"src": "62178:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "62223:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2781,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "62235:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2782,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2772,
																	"src": "62246:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2778,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "62206:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "62210:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "62206:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "62206:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2777,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "62196:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62196:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2776,
												"id": 2785,
												"nodeType": "Return",
												"src": "62189:63:0"
											}
										]
									},
									"documentation": {
										"id": 2768,
										"nodeType": "StructuredDocumentation",
										"src": "61721:340:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "62076:31:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "62116:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "62108:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "62140:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "62127:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2771,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "62127:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62107:38:0"
									},
									"returnParameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "62169:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2774,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "62169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62168:9:0"
									},
									"scope": 2800,
									"src": "62067:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2798,
										"nodeType": "Block",
										"src": "62822:301:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "62886:230:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "62901:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "62918:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "62912:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "62912:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "62905:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "62944:3:0"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "62949:10:0",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "62937:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "62937:23:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "62937:23:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "62985:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "62990:4:0",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "62981:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "62981:14:0"
																	},
																	{
																		"name": "domainSeparator",
																		"nodeType": "YulIdentifier",
																		"src": "62997:15:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "62974:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "62974:39:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "62974:39:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "63038:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "63043:4:0",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "63034:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "63034:14:0"
																	},
																	{
																		"name": "structHash",
																		"nodeType": "YulIdentifier",
																		"src": "63050:10:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "63027:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "63027:34:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "63027:34:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "63075:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "63095:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63100:4:0",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "63085:9:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "63085:20:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nodeType": "YulIdentifier",
																	"src": "63075:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2795,
														"isOffset": false,
														"isSlot": false,
														"src": "63075:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2790,
														"isOffset": false,
														"isSlot": false,
														"src": "62997:15:0",
														"valueSize": 1
													},
													{
														"declaration": 2792,
														"isOffset": false,
														"isSlot": false,
														"src": "63050:10:0",
														"valueSize": 1
													}
												],
												"id": 2797,
												"nodeType": "InlineAssembly",
												"src": "62877:239:0"
											}
										]
									},
									"documentation": {
										"id": 2788,
										"nodeType": "StructuredDocumentation",
										"src": "62268:439:0",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "62722:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "62746:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "62738:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2789,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "62738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "62771:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "62763:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2791,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "62763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62737:45:0"
									},
									"returnParameters": {
										"id": 2796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2795,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "62814:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "62806:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2794,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "62806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62805:16:0"
									},
									"scope": 2800,
									"src": "62713:410:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3597,
							"src": "59820:3306:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "63411:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2802,
								"nodeType": "StructuredDocumentation",
								"src": "63439:1048:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2909,
							"linearizedBaseContracts": [
								2909
							],
							"name": "StorageSlot",
							"nameLocation": "64497:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2805,
									"members": [
										{
											"constant": false,
											"id": 2804,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "64554:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2805,
											"src": "64546:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2803,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "64546:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "64523:11:0",
									"nodeType": "StructDefinition",
									"scope": 2909,
									"src": "64516:51:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2808,
									"members": [
										{
											"constant": false,
											"id": 2807,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "64610:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2808,
											"src": "64605:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2806,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "64605:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "64582:11:0",
									"nodeType": "StructDefinition",
									"scope": 2909,
									"src": "64575:48:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2811,
									"members": [
										{
											"constant": false,
											"id": 2810,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "64669:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2811,
											"src": "64661:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2809,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "64661:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "64638:11:0",
									"nodeType": "StructDefinition",
									"scope": 2909,
									"src": "64631:51:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2814,
									"members": [
										{
											"constant": false,
											"id": 2813,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "64728:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2814,
											"src": "64720:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2812,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "64720:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "64697:11:0",
									"nodeType": "StructDefinition",
									"scope": 2909,
									"src": "64690:51:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2817,
									"members": [
										{
											"constant": false,
											"id": 2816,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "64785:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2817,
											"src": "64778:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2815,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "64778:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "64756:10:0",
									"nodeType": "StructDefinition",
									"scope": 2909,
									"src": "64749:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2820,
									"members": [
										{
											"constant": false,
											"id": 2819,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "64840:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2820,
											"src": "64834:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2818,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "64834:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "64813:9:0",
									"nodeType": "StructDefinition",
									"scope": 2909,
									"src": "64806:47:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2830,
										"nodeType": "Block",
										"src": "65040:111:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "65104:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "65119:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "65129:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "65119:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2827,
														"isOffset": false,
														"isSlot": true,
														"src": "65119:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2823,
														"isOffset": false,
														"isSlot": false,
														"src": "65129:4:0",
														"valueSize": 1
													}
												],
												"id": 2829,
												"nodeType": "InlineAssembly",
												"src": "65095:49:0"
											}
										]
									},
									"documentation": {
										"id": 2821,
										"nodeType": "StructuredDocumentation",
										"src": "64861:89:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "64965:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "64988:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "64980:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2822,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "64980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64979:14:0"
									},
									"returnParameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "65037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "65017:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2805_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2826,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2825,
														"name": "AddressSlot",
														"nameLocations": [
															"65017:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2805,
														"src": "65017:11:0"
													},
													"referencedDeclaration": 2805,
													"src": "65017:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2805_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65016:23:0"
									},
									"scope": 2909,
									"src": "64956:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2841,
										"nodeType": "Block",
										"src": "65338:111:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "65402:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "65417:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "65427:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "65417:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2838,
														"isOffset": false,
														"isSlot": true,
														"src": "65417:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2834,
														"isOffset": false,
														"isSlot": false,
														"src": "65427:4:0",
														"valueSize": 1
													}
												],
												"id": 2840,
												"nodeType": "InlineAssembly",
												"src": "65393:49:0"
											}
										]
									},
									"documentation": {
										"id": 2832,
										"nodeType": "StructuredDocumentation",
										"src": "65159:89:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "65263:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "65286:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "65278:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2833,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "65278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65277:14:0"
									},
									"returnParameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "65335:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "65315:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2808_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2837,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2836,
														"name": "BooleanSlot",
														"nameLocations": [
															"65315:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2808,
														"src": "65315:11:0"
													},
													"referencedDeclaration": 2808,
													"src": "65315:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2808_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65314:23:0"
									},
									"scope": 2909,
									"src": "65254:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2852,
										"nodeType": "Block",
										"src": "65636:111:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "65700:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "65715:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "65725:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "65715:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2849,
														"isOffset": false,
														"isSlot": true,
														"src": "65715:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2845,
														"isOffset": false,
														"isSlot": false,
														"src": "65725:4:0",
														"valueSize": 1
													}
												],
												"id": 2851,
												"nodeType": "InlineAssembly",
												"src": "65691:49:0"
											}
										]
									},
									"documentation": {
										"id": 2843,
										"nodeType": "StructuredDocumentation",
										"src": "65457:89:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "65561:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "65584:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "65576:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2844,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "65576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65575:14:0"
									},
									"returnParameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "65633:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "65613:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2811_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2848,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2847,
														"name": "Bytes32Slot",
														"nameLocations": [
															"65613:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2811,
														"src": "65613:11:0"
													},
													"referencedDeclaration": 2811,
													"src": "65613:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2811_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65612:23:0"
									},
									"scope": 2909,
									"src": "65552:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2863,
										"nodeType": "Block",
										"src": "65934:111:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "65998:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66013:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "66023:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "66013:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2860,
														"isOffset": false,
														"isSlot": true,
														"src": "66013:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2856,
														"isOffset": false,
														"isSlot": false,
														"src": "66023:4:0",
														"valueSize": 1
													}
												],
												"id": 2862,
												"nodeType": "InlineAssembly",
												"src": "65989:49:0"
											}
										]
									},
									"documentation": {
										"id": 2854,
										"nodeType": "StructuredDocumentation",
										"src": "65755:89:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "65859:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "65882:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "65874:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2855,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "65874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65873:14:0"
									},
									"returnParameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "65931:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "65911:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2814_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2859,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2858,
														"name": "Uint256Slot",
														"nameLocations": [
															"65911:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2814,
														"src": "65911:11:0"
													},
													"referencedDeclaration": 2814,
													"src": "65911:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2814_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65910:23:0"
									},
									"scope": 2909,
									"src": "65850:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2874,
										"nodeType": "Block",
										"src": "66229:111:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "66293:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66308:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "66318:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "66308:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2871,
														"isOffset": false,
														"isSlot": true,
														"src": "66308:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2867,
														"isOffset": false,
														"isSlot": false,
														"src": "66318:4:0",
														"valueSize": 1
													}
												],
												"id": 2873,
												"nodeType": "InlineAssembly",
												"src": "66284:49:0"
											}
										]
									},
									"documentation": {
										"id": 2865,
										"nodeType": "StructuredDocumentation",
										"src": "66053:88:0",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "66156:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "66178:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "66170:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2866,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "66170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66169:14:0"
									},
									"returnParameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "66226:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "66207:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2817_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2869,
														"name": "StringSlot",
														"nameLocations": [
															"66207:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2817,
														"src": "66207:10:0"
													},
													"referencedDeclaration": 2817,
													"src": "66207:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2817_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66206:22:0"
									},
									"scope": 2909,
									"src": "66147:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2885,
										"nodeType": "Block",
										"src": "66547:117:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "66611:46:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66626:20:0",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "66636:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "66626:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2882,
														"isOffset": false,
														"isSlot": true,
														"src": "66626:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2878,
														"isOffset": false,
														"isSlot": true,
														"src": "66636:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2884,
												"nodeType": "InlineAssembly",
												"src": "66602:55:0"
											}
										]
									},
									"documentation": {
										"id": 2876,
										"nodeType": "StructuredDocumentation",
										"src": "66348:103:0",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "66466:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "66495:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "66480:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2877,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "66480:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66479:22:0"
									},
									"returnParameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "66544:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "66525:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2817_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2881,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2880,
														"name": "StringSlot",
														"nameLocations": [
															"66525:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2817,
														"src": "66525:10:0"
													},
													"referencedDeclaration": 2817,
													"src": "66525:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2817_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66524:22:0"
									},
									"scope": 2909,
									"src": "66457:207:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2896,
										"nodeType": "Block",
										"src": "66845:111:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "66909:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66924:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "66934:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "66924:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2893,
														"isOffset": false,
														"isSlot": true,
														"src": "66924:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2889,
														"isOffset": false,
														"isSlot": false,
														"src": "66934:4:0",
														"valueSize": 1
													}
												],
												"id": 2895,
												"nodeType": "InlineAssembly",
												"src": "66900:49:0"
											}
										]
									},
									"documentation": {
										"id": 2887,
										"nodeType": "StructuredDocumentation",
										"src": "66672:87:0",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "66774:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "66795:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "66787:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2888,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "66787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66786:14:0"
									},
									"returnParameters": {
										"id": 2894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2893,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "66842:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "66824:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2820_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2892,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2891,
														"name": "BytesSlot",
														"nameLocations": [
															"66824:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2820,
														"src": "66824:9:0"
													},
													"referencedDeclaration": 2820,
													"src": "66824:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2820_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66823:21:0"
									},
									"scope": 2909,
									"src": "66765:191:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2907,
										"nodeType": "Block",
										"src": "67158:117:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "67222:46:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "67237:20:0",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "67247:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "67237:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2904,
														"isOffset": false,
														"isSlot": true,
														"src": "67237:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2900,
														"isOffset": false,
														"isSlot": true,
														"src": "67247:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2906,
												"nodeType": "InlineAssembly",
												"src": "67213:55:0"
											}
										]
									},
									"documentation": {
										"id": 2898,
										"nodeType": "StructuredDocumentation",
										"src": "66964:101:0",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "67080:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "67107:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "67093:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "67093:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67092:21:0"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "67155:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "67137:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2820_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2903,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2902,
														"name": "BytesSlot",
														"nameLocations": [
															"67137:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2820,
														"src": "67137:9:0"
													},
													"referencedDeclaration": 2820,
													"src": "67137:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2820_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67136:21:0"
									},
									"scope": 2909,
									"src": "67071:204:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3597,
							"src": "64489:2789:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2910,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "67476:24:0"
						},
						{
							"canonicalName": "ShortString",
							"id": 2912,
							"name": "ShortString",
							"nameLocation": "67679:11:0",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "67674:28:0",
							"underlyingType": {
								"id": 2911,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "67694:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2913,
								"nodeType": "StructuredDocumentation",
								"src": "67706:903:0",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 3123,
							"linearizedBaseContracts": [
								3123
							],
							"name": "ShortStrings",
							"nameLocation": "68619:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2916,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "68728:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3123,
									"src": "68703:111:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2914,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "68703:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 2915,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "68748:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 2920,
									"name": "StringTooLong",
									"nameLocation": "68829:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2918,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "68850:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "68843:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2917,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "68843:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68842:12:0"
									},
									"src": "68823:32:0"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 2922,
									"name": "InvalidShortString",
									"nameLocation": "68867:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68885:2:0"
									},
									"src": "68861:27:0"
								},
								{
									"body": {
										"id": 2965,
										"nodeType": "Block",
										"src": "69154:214:0",
										"statements": [
											{
												"assignments": [
													2932
												],
												"declarations": [
													{
														"constant": false,
														"id": 2932,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "69178:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2965,
														"src": "69165:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2931,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "69165:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2937,
												"initialValue": {
													"arguments": [
														{
															"id": 2935,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2925,
															"src": "69191:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "69185:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 2933,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "69185:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69185:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "69165:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2938,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2932,
															"src": "69210:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "69215:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "69210:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 2940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69224:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "69210:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2947,
												"nodeType": "IfStatement",
												"src": "69206:74:0",
												"trueBody": {
													"id": 2946,
													"nodeType": "Block",
													"src": "69228:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2943,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2925,
																		"src": "69264:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2942,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2920,
																	"src": "69250:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "69250:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2945,
															"nodeType": "RevertStatement",
															"src": "69243:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2956,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2932,
																						"src": "69338:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 2955,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "69330:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 2954,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "69330:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "69330:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 2953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "69322:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2952,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "69322:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "69322:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 2959,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2932,
																			"src": "69347:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "69352:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "69347:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "69322:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "69314:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2950,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "69314:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "69314:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2948,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2912,
															"src": "69297:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2912_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 2949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "69309:4:0",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "69297:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2912_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69297:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 2930,
												"id": 2964,
												"nodeType": "Return",
												"src": "69290:70:0"
											}
										]
									},
									"documentation": {
										"id": 2923,
										"nodeType": "StructuredDocumentation",
										"src": "68896:174:0",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 2966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "69085:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "69113:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "69099:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2924,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "69099:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69098:19:0"
									},
									"returnParameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "69141:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2928,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2927,
														"name": "ShortString",
														"nameLocations": [
															"69141:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2912,
														"src": "69141:11:0"
													},
													"referencedDeclaration": 2912,
													"src": "69141:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69140:13:0"
									},
									"scope": 3123,
									"src": "69076:292:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2991,
										"nodeType": "Block",
										"src": "69531:341:0",
										"statements": [
											{
												"assignments": [
													2976
												],
												"declarations": [
													{
														"constant": false,
														"id": 2976,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "69550:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2991,
														"src": "69542:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2975,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "69542:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2980,
												"initialValue": {
													"arguments": [
														{
															"id": 2978,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2970,
															"src": "69567:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																"typeString": "ShortString"
															}
														],
														"id": 2977,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3024,
														"src": "69556:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2912_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 2979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69556:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "69542:30:0"
											},
											{
												"assignments": [
													2982
												],
												"declarations": [
													{
														"constant": false,
														"id": 2982,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "69676:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2991,
														"src": "69662:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2981,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "69662:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2987,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "69693:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 2984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "69682:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 2983,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "69686:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 2986,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69682:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "69662:34:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "69760:84:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "69782:3:0"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "69787:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "69775:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "69775:16:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "69775:16:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "69816:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "69821:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "69812:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "69812:14:0"
																	},
																	{
																		"name": "sstr",
																		"nodeType": "YulIdentifier",
																		"src": "69828:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "69805:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "69805:28:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "69805:28:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2976,
														"isOffset": false,
														"isSlot": false,
														"src": "69787:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2970,
														"isOffset": false,
														"isSlot": false,
														"src": "69828:4:0",
														"valueSize": 1
													},
													{
														"declaration": 2982,
														"isOffset": false,
														"isSlot": false,
														"src": "69782:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2982,
														"isOffset": false,
														"isSlot": false,
														"src": "69816:3:0",
														"valueSize": 1
													}
												],
												"id": 2988,
												"nodeType": "InlineAssembly",
												"src": "69751:93:0"
											},
											{
												"expression": {
													"id": 2989,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2982,
													"src": "69861:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2974,
												"id": 2990,
												"nodeType": "Return",
												"src": "69854:10:0"
											}
										]
									},
									"documentation": {
										"id": 2967,
										"nodeType": "StructuredDocumentation",
										"src": "69376:75:0",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 2992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "69466:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "69487:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2992,
												"src": "69475:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2969,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2968,
														"name": "ShortString",
														"nameLocations": [
															"69475:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2912,
														"src": "69475:11:0"
													},
													"referencedDeclaration": 2912,
													"src": "69475:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69474:18:0"
									},
									"returnParameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2992,
												"src": "69516:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2972,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "69516:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69515:15:0"
									},
									"scope": 3123,
									"src": "69457:415:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3023,
										"nodeType": "Block",
										"src": "70019:181:0",
										"statements": [
											{
												"assignments": [
													3002
												],
												"declarations": [
													{
														"constant": false,
														"id": 3002,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "70038:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3023,
														"src": "70030:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3001,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "70030:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3012,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3007,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2996,
																		"src": "70074:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 3005,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2912,
																		"src": "70055:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2912_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 3006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "70067:6:0",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "70055:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2912_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 3008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "70055:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 3004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "70047:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3003,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "70047:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "70047:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 3010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "70083:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "70047:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "70030:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3013,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3002,
														"src": "70102:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 3014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "70111:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "70102:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3020,
												"nodeType": "IfStatement",
												"src": "70098:71:0",
												"trueBody": {
													"id": 3019,
													"nodeType": "Block",
													"src": "70115:54:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3016,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2922,
																	"src": "70137:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "70137:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3018,
															"nodeType": "RevertStatement",
															"src": "70130:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3021,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3002,
													"src": "70186:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3000,
												"id": 3022,
												"nodeType": "Return",
												"src": "70179:13:0"
											}
										]
									},
									"documentation": {
										"id": 2993,
										"nodeType": "StructuredDocumentation",
										"src": "69880:63:0",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 3024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "69958:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "69981:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "69969:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2995,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2994,
														"name": "ShortString",
														"nameLocations": [
															"69969:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2912,
														"src": "69969:11:0"
													},
													"referencedDeclaration": 2912,
													"src": "69969:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69968:18:0"
									},
									"returnParameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "70010:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70009:9:0"
									},
									"scope": 3123,
									"src": "69949:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3063,
										"nodeType": "Block",
										"src": "70428:238:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3037,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3027,
																	"src": "70449:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "70443:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 3035,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "70443:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "70443:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "70456:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "70443:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 3040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "70465:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "70443:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3061,
													"nodeType": "Block",
													"src": "70529:130:0",
													"statements": [
														{
															"expression": {
																"id": 3054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 3050,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3029,
																				"src": "70570:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 3047,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2909,
																				"src": "70544:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2909_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 3049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "70556:13:0",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2886,
																			"src": "70544:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2817_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 3051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "70544:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$2817_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 3052,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "70577:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2816,
																	"src": "70544:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3053,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3027,
																	"src": "70585:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "70544:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 3055,
															"nodeType": "ExpressionStatement",
															"src": "70544:46:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3058,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2916,
																		"src": "70629:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 3056,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2912,
																		"src": "70612:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2912_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 3057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "70624:4:0",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "70612:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2912_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 3059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "70612:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 3034,
															"id": 3060,
															"nodeType": "Return",
															"src": "70605:42:0"
														}
													]
												},
												"id": 3062,
												"nodeType": "IfStatement",
												"src": "70439:220:0",
												"trueBody": {
													"id": 3046,
													"nodeType": "Block",
													"src": "70469:54:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3043,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3027,
																		"src": "70505:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3042,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2966,
																	"src": "70491:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2912_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 3044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "70491:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 3034,
															"id": 3045,
															"nodeType": "Return",
															"src": "70484:27:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3025,
										"nodeType": "StructuredDocumentation",
										"src": "70208:105:0",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 3064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "70328:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "70368:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "70354:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3026,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "70354:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "70390:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "70375:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "70375:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70353:43:0"
									},
									"returnParameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "70415:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3032,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3031,
														"name": "ShortString",
														"nameLocations": [
															"70415:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2912,
														"src": "70415:11:0"
													},
													"referencedDeclaration": 2912,
													"src": "70415:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70414:13:0"
									},
									"scope": 3123,
									"src": "70319:347:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3090,
										"nodeType": "Block",
										"src": "70911:164:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 3080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3077,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3068,
																"src": "70945:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 3075,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2912,
																"src": "70926:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2912_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 3076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "70938:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "70926:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2912_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 3078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "70926:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3079,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2916,
														"src": "70955:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "70926:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3088,
													"nodeType": "Block",
													"src": "71029:39:0",
													"statements": [
														{
															"expression": {
																"id": 3086,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3070,
																"src": "71051:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 3074,
															"id": 3087,
															"nodeType": "Return",
															"src": "71044:12:0"
														}
													]
												},
												"id": 3089,
												"nodeType": "IfStatement",
												"src": "70922:146:0",
												"trueBody": {
													"id": 3085,
													"nodeType": "Block",
													"src": "70974:49:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3082,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3068,
																		"src": "71005:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 3081,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2992,
																	"src": "70996:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2912_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 3083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "70996:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 3074,
															"id": 3084,
															"nodeType": "Return",
															"src": "70989:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3065,
										"nodeType": "StructuredDocumentation",
										"src": "70674:122:0",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 3091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "70811:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3068,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "70844:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3091,
												"src": "70832:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3067,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3066,
														"name": "ShortString",
														"nameLocations": [
															"70832:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2912,
														"src": "70832:11:0"
													},
													"referencedDeclaration": 2912,
													"src": "70832:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3070,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "70866:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3091,
												"src": "70851:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3069,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "70851:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70831:41:0"
									},
									"returnParameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3091,
												"src": "70896:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3072,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "70896:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70895:15:0"
									},
									"scope": 3123,
									"src": "70802:273:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3121,
										"nodeType": "Block",
										"src": "71564:180:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 3107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3104,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3095,
																"src": "71598:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 3102,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2912,
																"src": "71579:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2912_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 3103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "71591:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "71579:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2912_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 3105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "71579:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3106,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2916,
														"src": "71608:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "71579:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3119,
													"nodeType": "Block",
													"src": "71684:53:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 3115,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3097,
																			"src": "71712:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 3114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "71706:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 3113,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "71706:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "71706:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 3117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "71719:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "71706:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3101,
															"id": 3118,
															"nodeType": "Return",
															"src": "71699:26:0"
														}
													]
												},
												"id": 3120,
												"nodeType": "IfStatement",
												"src": "71575:162:0",
												"trueBody": {
													"id": 3112,
													"nodeType": "Block",
													"src": "71627:51:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3109,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3095,
																		"src": "71660:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 3108,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3024,
																	"src": "71649:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2912_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 3110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "71649:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3101,
															"id": 3111,
															"nodeType": "Return",
															"src": "71642:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3092,
										"nodeType": "StructuredDocumentation",
										"src": "71083:370:0",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 3122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "71468:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3095,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "71503:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "71491:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3093,
														"name": "ShortString",
														"nameLocations": [
															"71491:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2912,
														"src": "71491:11:0"
													},
													"referencedDeclaration": 2912,
													"src": "71491:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3097,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "71525:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "71510:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3096,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "71510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71490:41:0"
									},
									"returnParameters": {
										"id": 3101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "71555:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71554:9:0"
									},
									"scope": 3123,
									"src": "71459:285:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3597,
							"src": "68611:3136:0",
							"usedErrors": [
								2920,
								2922
							],
							"usedEvents": []
						},
						{
							"id": 3124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "71959:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3126,
										"name": "IERC5267",
										"nameLocations": [
											"73687:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1322,
										"src": "73687:8:0"
									},
									"id": 3127,
									"nodeType": "InheritanceSpecifier",
									"src": "73687:8:0"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3125,
								"nodeType": "StructuredDocumentation",
								"src": "71991:1666:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 3342,
							"linearizedBaseContracts": [
								3342,
								1322
							],
							"name": "EIP712",
							"nameLocation": "73677:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3129,
									"libraryName": {
										"id": 3128,
										"name": "ShortStrings",
										"nameLocations": [
											"73709:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3123,
										"src": "73709:12:0"
									},
									"nodeType": "UsingForDirective",
									"src": "73703:25:0"
								},
								{
									"constant": true,
									"id": 3134,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "73761:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "73736:141:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3130,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "73736:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 3132,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "73792:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 3131,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "73782:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3133,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "73782:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3136,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "74106:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "74080:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3135,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "74080:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3138,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "74161:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "74135:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "74135:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3140,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "74208:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "74182:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3139,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "74182:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3142,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "74254:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "74228:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3141,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "74228:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3144,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "74298:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "74272:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3143,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "74272:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3147,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "74351:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "74321:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 3146,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3145,
											"name": "ShortString",
											"nameLocations": [
												"74321:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2912,
											"src": "74321:11:0"
										},
										"referencedDeclaration": 2912,
										"src": "74321:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3150,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "74393:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "74363:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 3149,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3148,
											"name": "ShortString",
											"nameLocations": [
												"74363:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2912,
											"src": "74363:11:0"
										},
										"referencedDeclaration": 2912,
										"src": "74363:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3152,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "74423:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "74408:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3151,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "74408:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3154,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "74458:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "74443:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3153,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "74443:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3211,
										"nodeType": "Block",
										"src": "75114:385:0",
										"statements": [
											{
												"expression": {
													"id": 3167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3162,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3147,
														"src": "75125:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3165,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3152,
																"src": "75164:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 3163,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3157,
																"src": "75133:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 3164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "75138:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3064,
															"src": "75133:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2912_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 3166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75133:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
															"typeString": "ShortString"
														}
													},
													"src": "75125:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
														"typeString": "ShortString"
													}
												},
												"id": 3168,
												"nodeType": "ExpressionStatement",
												"src": "75125:53:0"
											},
											{
												"expression": {
													"id": 3174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3169,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "75189:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3172,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3154,
																"src": "75234:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 3170,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3159,
																"src": "75200:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 3171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "75208:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3064,
															"src": "75200:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2912_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75200:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
															"typeString": "ShortString"
														}
													},
													"src": "75189:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
														"typeString": "ShortString"
													}
												},
												"id": 3175,
												"nodeType": "ExpressionStatement",
												"src": "75189:62:0"
											},
											{
												"expression": {
													"id": 3183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3176,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3142,
														"src": "75262:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3180,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3157,
																		"src": "75292:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "75286:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 3178,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "75286:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "75286:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3177,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "75276:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 3182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75276:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "75262:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3184,
												"nodeType": "ExpressionStatement",
												"src": "75262:36:0"
											},
											{
												"expression": {
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3185,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3144,
														"src": "75309:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3189,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3159,
																		"src": "75342:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "75336:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 3187,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "75336:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "75336:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3186,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "75326:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 3191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75326:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "75309:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3193,
												"nodeType": "ExpressionStatement",
												"src": "75309:42:0"
											},
											{
												"expression": {
													"id": 3197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3194,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3138,
														"src": "75364:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3195,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "75381:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "75387:7:0",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "75381:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "75364:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3198,
												"nodeType": "ExpressionStatement",
												"src": "75364:30:0"
											},
											{
												"expression": {
													"id": 3202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3199,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3136,
														"src": "75405:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3200,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3259,
															"src": "75430:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 3201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75430:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "75405:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3203,
												"nodeType": "ExpressionStatement",
												"src": "75405:48:0"
											},
											{
												"expression": {
													"id": 3209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3204,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3140,
														"src": "75464:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3207,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "75486:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$3342",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$3342",
																	"typeString": "contract EIP712"
																}
															],
															"id": 3206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "75478:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "75478:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75478:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "75464:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3210,
												"nodeType": "ExpressionStatement",
												"src": "75464:27:0"
											}
										]
									},
									"documentation": {
										"id": 3155,
										"nodeType": "StructuredDocumentation",
										"src": "74483:570:0",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 3212,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "75085:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3212,
												"src": "75071:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "75071:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3159,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "75105:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3212,
												"src": "75091:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "75091:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75070:43:0"
									},
									"returnParameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "75114:0:0"
									},
									"scope": 3342,
									"src": "75059:440:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3237,
										"nodeType": "Block",
										"src": "75652:206:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3220,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "75675:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$3342",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$3342",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "75667:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3218,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "75667:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "75667:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 3222,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3140,
															"src": "75684:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "75667:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3224,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "75699:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "75705:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "75699:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 3226,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3138,
															"src": "75716:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "75699:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "75667:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3235,
													"nodeType": "Block",
													"src": "75794:57:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3232,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3259,
																	"src": "75816:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "75816:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 3217,
															"id": 3234,
															"nodeType": "Return",
															"src": "75809:30:0"
														}
													]
												},
												"id": 3236,
												"nodeType": "IfStatement",
												"src": "75663:188:0",
												"trueBody": {
													"id": 3231,
													"nodeType": "Block",
													"src": "75732:56:0",
													"statements": [
														{
															"expression": {
																"id": 3229,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3136,
																"src": "75754:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 3217,
															"id": 3230,
															"nodeType": "Return",
															"src": "75747:29:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3213,
										"nodeType": "StructuredDocumentation",
										"src": "75507:77:0",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 3238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "75599:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "75617:2:0"
									},
									"returnParameters": {
										"id": 3217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3238,
												"src": "75643:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "75643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75642:9:0"
									},
									"scope": 3342,
									"src": "75590:268:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3258,
										"nodeType": "Block",
										"src": "75930:117:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3246,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3134,
																	"src": "75969:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3247,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3142,
																	"src": "75980:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3248,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3144,
																	"src": "75993:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 3249,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "76009:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "76015:7:0",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "76009:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3253,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "76032:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$3342",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$3342",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 3252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "76024:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3251,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "76024:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "76024:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 3244,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "75958:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "75962:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "75958:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "75958:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3243,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "75948:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75948:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3242,
												"id": 3257,
												"nodeType": "Return",
												"src": "75941:98:0"
											}
										]
									},
									"id": 3259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "75875:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "75896:2:0"
									},
									"returnParameters": {
										"id": 3242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "75921:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "75921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75920:9:0"
									},
									"scope": 3342,
									"src": "75866:181:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3274,
										"nodeType": "Block",
										"src": "76775:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3269,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3238,
																"src": "76826:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 3270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "76826:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3271,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3262,
															"src": "76848:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3267,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2800,
															"src": "76793:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2800_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 3268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "76810:15:0",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2799,
														"src": "76793:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 3272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76793:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3266,
												"id": 3273,
												"nodeType": "Return",
												"src": "76786:73:0"
											}
										]
									},
									"documentation": {
										"id": 3260,
										"nodeType": "StructuredDocumentation",
										"src": "76055:628:0",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 3275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "76698:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3262,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "76723:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3275,
												"src": "76715:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "76715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76714:20:0"
									},
									"returnParameters": {
										"id": 3266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3275,
												"src": "76766:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3264,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "76766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76765:9:0"
									},
									"scope": 3342,
									"src": "76689:178:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1321
									],
									"body": {
										"id": 3316,
										"nodeType": "Block",
										"src": "77264:239:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 3294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "77297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3295,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3329,
																"src": "77328:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 3296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "77328:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3297,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3341,
																"src": "77356:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 3298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "77356:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 3299,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "77387:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "77393:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "77387:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 3303,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "77423:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$3342",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$3342",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 3302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "77415:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3301,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "77415:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "77415:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "77451:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "77443:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3305,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "77443:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "77443:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "77482:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "77468:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 3309,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "77472:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3310,
																	"nodeType": "ArrayTypeName",
																	"src": "77472:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 3313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "77468:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 3314,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "77282:213:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 3293,
												"id": 3315,
												"nodeType": "Return",
												"src": "77275:220:0"
											}
										]
									},
									"documentation": {
										"id": 3276,
										"nodeType": "StructuredDocumentation",
										"src": "76875:42:0",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 3317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "76932:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "76944:2:0"
									},
									"returnParameters": {
										"id": 3293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3279,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "77033:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "77026:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 3278,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "77026:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3281,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "77068:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "77054:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "77054:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3283,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "77101:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "77087:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3282,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "77087:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3285,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "77131:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "77123:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "77123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3287,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "77161:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "77153:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "77153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3289,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "77201:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "77193:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "77193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3292,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "77237:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "77220:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3290,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "77220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3291,
													"nodeType": "ArrayTypeName",
													"src": "77220:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77011:247:0"
									},
									"scope": 3342,
									"src": "76923:580:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3328,
										"nodeType": "Block",
										"src": "77893:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3325,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3152,
															"src": "77938:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 3323,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3147,
															"src": "77911:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																"typeString": "ShortString"
															}
														},
														"id": 3324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "77917:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3091,
														"src": "77911:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2912_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2912_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 3326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "77911:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3322,
												"id": 3327,
												"nodeType": "Return",
												"src": "77904:48:0"
											}
										]
									},
									"documentation": {
										"id": 3318,
										"nodeType": "StructuredDocumentation",
										"src": "77511:261:0",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 3329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "77841:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77852:2:0"
									},
									"returnParameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "77878:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "77878:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77877:15:0"
									},
									"scope": 3342,
									"src": "77832:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3340,
										"nodeType": "Block",
										"src": "78359:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3337,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "78407:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 3335,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3150,
															"src": "78377:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2912",
																"typeString": "ShortString"
															}
														},
														"id": 3336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "78386:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3091,
														"src": "78377:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2912_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2912_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 3338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78377:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3334,
												"id": 3339,
												"nodeType": "Return",
												"src": "78370:54:0"
											}
										]
									},
									"documentation": {
										"id": 3330,
										"nodeType": "StructuredDocumentation",
										"src": "77968:267:0",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 3341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "78304:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78318:2:0"
									},
									"returnParameters": {
										"id": 3334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "78344:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "78344:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78343:15:0"
									},
									"scope": 3342,
									"src": "78295:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3597,
							"src": "73659:4776:0",
							"usedErrors": [
								2920,
								2922
							],
							"usedEvents": [
								1302
							]
						},
						{
							"id": 3343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "78619:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3344,
								"nodeType": "StructuredDocumentation",
								"src": "78647:85:0",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 3409,
							"linearizedBaseContracts": [
								3409
							],
							"name": "Nonces",
							"nameLocation": "78752:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3345,
										"nodeType": "StructuredDocumentation",
										"src": "78766:92:0",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 3351,
									"name": "InvalidAccountNonce",
									"nameLocation": "78870:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "78898:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "78890:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3349,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "78915:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "78907:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78889:39:0"
									},
									"src": "78864:65:0"
								},
								{
									"constant": false,
									"id": 3355,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "78981:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3409,
									"src": "78937:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3354,
										"keyName": "account",
										"keyNameLocation": "78953:7:0",
										"keyType": {
											"id": 3352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "78945:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "78937:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3353,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "78964:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3367,
										"nodeType": "Block",
										"src": "79143:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3363,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3355,
														"src": "79161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3365,
													"indexExpression": {
														"id": 3364,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3358,
														"src": "79169:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "79161:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3362,
												"id": 3366,
												"nodeType": "Return",
												"src": "79154:21:0"
											}
										]
									},
									"documentation": {
										"id": 3356,
										"nodeType": "StructuredDocumentation",
										"src": "78997:71:0",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 3368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "79083:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3358,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "79098:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3368,
												"src": "79090:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79089:15:0"
									},
									"returnParameters": {
										"id": 3362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3368,
												"src": "79134:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "79134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79133:9:0"
									},
									"scope": 3409,
									"src": "79074:109:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3382,
										"nodeType": "Block",
										"src": "79373:333:0",
										"statements": [
											{
												"id": 3381,
												"nodeType": "UncheckedBlock",
												"src": "79579:120:0",
												"statements": [
													{
														"expression": {
															"id": 3379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "79671:16:0",
															"subExpression": {
																"baseExpression": {
																	"id": 3376,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3355,
																	"src": "79671:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3378,
																"indexExpression": {
																	"id": 3377,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "79679:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "79671:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3375,
														"id": 3380,
														"nodeType": "Return",
														"src": "79664:23:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3369,
										"nodeType": "StructuredDocumentation",
										"src": "79191:107:0",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 3383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "79313:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3371,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "79331:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3383,
												"src": "79323:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79322:15:0"
									},
									"returnParameters": {
										"id": 3375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3383,
												"src": "79364:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "79364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79363:9:0"
									},
									"scope": 3409,
									"src": "79304:402:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3407,
										"nodeType": "Block",
										"src": "79895:154:0",
										"statements": [
											{
												"assignments": [
													3392
												],
												"declarations": [
													{
														"constant": false,
														"id": 3392,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "79914:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3407,
														"src": "79906:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3391,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "79906:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3396,
												"initialValue": {
													"arguments": [
														{
															"id": 3394,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3386,
															"src": "79934:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3393,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3383,
														"src": "79924:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 3395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79924:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "79906:34:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3397,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3388,
														"src": "79955:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3398,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3392,
														"src": "79964:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "79955:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3406,
												"nodeType": "IfStatement",
												"src": "79951:91:0",
												"trueBody": {
													"id": 3405,
													"nodeType": "Block",
													"src": "79973:69:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3401,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3386,
																		"src": "80015:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3402,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3392,
																		"src": "80022:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3400,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3351,
																	"src": "79995:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 3403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "79995:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3404,
															"nodeType": "RevertStatement",
															"src": "79988:42:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3384,
										"nodeType": "StructuredDocumentation",
										"src": "79714:102:0",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 3408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "79831:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3386,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "79856:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "79848:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3388,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "79871:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "79863:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "79863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79847:30:0"
									},
									"returnParameters": {
										"id": 3390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "79895:0:0"
									},
									"scope": 3409,
									"src": "79822:227:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3597,
							"src": "78734:1318:0",
							"usedErrors": [
								3351
							],
							"usedEvents": []
						},
						{
							"id": 3410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "80282:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3412,
										"name": "ERC20",
										"nameLocations": [
											"80847:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "80847:5:0"
									},
									"id": 3413,
									"nodeType": "InheritanceSpecifier",
									"src": "80847:5:0"
								},
								{
									"baseName": {
										"id": 3414,
										"name": "IERC20Permit",
										"nameLocations": [
											"80854:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 951,
										"src": "80854:12:0"
									},
									"id": 3415,
									"nodeType": "InheritanceSpecifier",
									"src": "80854:12:0"
								},
								{
									"baseName": {
										"id": 3416,
										"name": "EIP712",
										"nameLocations": [
											"80868:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3342,
										"src": "80868:6:0"
									},
									"id": 3417,
									"nodeType": "InheritanceSpecifier",
									"src": "80868:6:0"
								},
								{
									"baseName": {
										"id": 3418,
										"name": "Nonces",
										"nameLocations": [
											"80876:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3409,
										"src": "80876:6:0"
									},
									"id": 3419,
									"nodeType": "InheritanceSpecifier",
									"src": "80876:6:0"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3411,
								"nodeType": "StructuredDocumentation",
								"src": "80318:494:0",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 3552,
							"linearizedBaseContracts": [
								3552,
								3409,
								3342,
								1322,
								951,
								916,
								215,
								410,
								387,
								29
							],
							"name": "ERC20Permit",
							"nameLocation": "80832:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3424,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "80915:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3552,
									"src": "80890:147:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3420,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "80890:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 3422,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "80952:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 3421,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "80942:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3423,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "80942:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 3425,
										"nodeType": "StructuredDocumentation",
										"src": "81046:54:0",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 3429,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "81112:23:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3427,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "81144:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3429,
												"src": "81136:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "81136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "81135:18:0"
									},
									"src": "81106:48:0"
								},
								{
									"documentation": {
										"id": 3430,
										"nodeType": "StructuredDocumentation",
										"src": "81162:47:0",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 3436,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "81221:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3432,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "81250:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "81242:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "81266:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "81258:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "81241:31:0"
									},
									"src": "81215:58:0"
								},
								{
									"body": {
										"id": 3446,
										"nodeType": "Block",
										"src": "81561:2:0",
										"statements": []
									},
									"documentation": {
										"id": 3437,
										"nodeType": "StructuredDocumentation",
										"src": "81281:224:0",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 3447,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3442,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3439,
													"src": "81550:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 3443,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "81556:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 3444,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3441,
												"name": "EIP712",
												"nameLocations": [
													"81543:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3342,
												"src": "81543:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "81543:17:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3439,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "81537:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "81523:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "81523:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "81522:20:0"
									},
									"returnParameters": {
										"id": 3445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "81561:0:0"
									},
									"scope": 3552,
									"src": "81511:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 3523,
										"nodeType": "Block",
										"src": "81819:498:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3465,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "81834:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "81840:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "81834:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3467,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3456,
														"src": "81852:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "81834:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3474,
												"nodeType": "IfStatement",
												"src": "81830:99:0",
												"trueBody": {
													"id": 3473,
													"nodeType": "Block",
													"src": "81862:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3470,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3456,
																		"src": "81908:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3469,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3429,
																	"src": "81884:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 3471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "81884:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3472,
															"nodeType": "RevertStatement",
															"src": "81877:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													3476
												],
												"declarations": [
													{
														"constant": false,
														"id": 3476,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "81949:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "81941:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3475,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "81941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3490,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3480,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3424,
																	"src": "81983:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3481,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3450,
																	"src": "82000:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3482,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3452,
																	"src": "82007:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3483,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3454,
																	"src": "82016:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3485,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3450,
																			"src": "82033:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3484,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3383,
																		"src": "82023:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 3486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "82023:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3487,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3456,
																	"src": "82041:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3478,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "81972:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "81976:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "81972:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "81972:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3477,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "81962:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "81962:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "81941:110:0"
											},
											{
												"assignments": [
													3492
												],
												"declarations": [
													{
														"constant": false,
														"id": 3492,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "82072:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "82064:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3491,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "82064:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3496,
												"initialValue": {
													"arguments": [
														{
															"id": 3494,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3476,
															"src": "82096:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3493,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3275,
														"src": "82079:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "82079:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "82064:43:0"
											},
											{
												"assignments": [
													3498
												],
												"declarations": [
													{
														"constant": false,
														"id": 3498,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "82128:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "82120:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3497,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "82120:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3506,
												"initialValue": {
													"arguments": [
														{
															"id": 3501,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3492,
															"src": "82151:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3502,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3458,
															"src": "82157:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3503,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3460,
															"src": "82160:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3504,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3462,
															"src": "82163:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3499,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "82137:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$1298_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 3500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "82143:7:0",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1248,
														"src": "82137:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 3505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "82137:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "82120:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3507,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3498,
														"src": "82180:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3508,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3450,
														"src": "82190:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "82180:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3516,
												"nodeType": "IfStatement",
												"src": "82176:90:0",
												"trueBody": {
													"id": 3515,
													"nodeType": "Block",
													"src": "82197:69:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3511,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3498,
																		"src": "82240:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3512,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3450,
																		"src": "82248:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3510,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3436,
																	"src": "82219:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 3513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "82219:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3514,
															"nodeType": "RevertStatement",
															"src": "82212:42:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3518,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3450,
															"src": "82287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3519,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3452,
															"src": "82294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3454,
															"src": "82303:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3517,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															807,
															867
														],
														"referencedDeclaration": 807,
														"src": "82278:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "82278:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3522,
												"nodeType": "ExpressionStatement",
												"src": "82278:31:0"
											}
										]
									},
									"documentation": {
										"id": 3448,
										"nodeType": "StructuredDocumentation",
										"src": "81571:45:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 3524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "81631:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3450,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "81656:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "81648:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3452,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "81680:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "81672:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "81706:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "81698:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "81698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "81730:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "81722:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "81722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3458,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "81755:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "81749:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3457,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "81749:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "81775:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "81767:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3459,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "81767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3462,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "81795:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "81787:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3461,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "81787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "81637:166:0"
									},
									"returnParameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "81819:0:0"
									},
									"scope": 3552,
									"src": "81622:695:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										944,
										3368
									],
									"body": {
										"id": 3540,
										"nodeType": "Block",
										"src": "82476:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3537,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3527,
															"src": "82507:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3535,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "82494:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$3552_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 3536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "82500:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3368,
														"src": "82494:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "82494:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3534,
												"id": 3539,
												"nodeType": "Return",
												"src": "82487:26:0"
											}
										]
									},
									"documentation": {
										"id": 3525,
										"nodeType": "StructuredDocumentation",
										"src": "82325:45:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 3541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "82385:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3531,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3529,
												"name": "IERC20Permit",
												"nameLocations": [
													"82436:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 951,
												"src": "82436:12:0"
											},
											{
												"id": 3530,
												"name": "Nonces",
												"nameLocations": [
													"82450:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3409,
												"src": "82450:6:0"
											}
										],
										"src": "82427:30:0"
									},
									"parameters": {
										"id": 3528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "82400:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3541,
												"src": "82392:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "82392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "82391:15:0"
									},
									"returnParameters": {
										"id": 3534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3541,
												"src": "82467:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "82467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "82466:9:0"
									},
									"scope": 3552,
									"src": "82376:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										950
									],
									"body": {
										"id": 3550,
										"nodeType": "Block",
										"src": "82702:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3547,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3238,
														"src": "82720:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 3548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "82720:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3546,
												"id": 3549,
												"nodeType": "Return",
												"src": "82713:27:0"
											}
										]
									},
									"documentation": {
										"id": 3542,
										"nodeType": "StructuredDocumentation",
										"src": "82529:45:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 3551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "82643:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "82659:2:0"
									},
									"returnParameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3551,
												"src": "82693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "82693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "82692:9:0"
									},
									"scope": 3552,
									"src": "82634:114:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 3597,
							"src": "80814:1937:0",
							"usedErrors": [
								185,
								190,
								195,
								204,
								209,
								214,
								961,
								966,
								971,
								2920,
								2922,
								3351,
								3429,
								3436
							],
							"usedEvents": [
								321,
								330,
								1302
							]
						},
						{
							"id": 3553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "82794:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3554,
										"name": "ERC20",
										"nameLocations": [
											"82840:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "82840:5:0"
									},
									"id": 3555,
									"nodeType": "InheritanceSpecifier",
									"src": "82840:5:0"
								},
								{
									"baseName": {
										"id": 3556,
										"name": "Ownable",
										"nameLocations": [
											"82847:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 174,
										"src": "82847:7:0"
									},
									"id": 3557,
									"nodeType": "InheritanceSpecifier",
									"src": "82847:7:0"
								},
								{
									"baseName": {
										"id": 3558,
										"name": "ERC20Permit",
										"nameLocations": [
											"82856:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3552,
										"src": "82856:11:0"
									},
									"id": 3559,
									"nodeType": "InheritanceSpecifier",
									"src": "82856:11:0"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3596,
							"linearizedBaseContracts": [
								3596,
								3552,
								3409,
								3342,
								1322,
								951,
								174,
								916,
								215,
								410,
								387,
								29
							],
							"name": "MyToken",
							"nameLocation": "82829:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3579,
										"nodeType": "Block",
										"src": "82989:35:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3574,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "82996:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "83000:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "82996:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31303030303030",
															"id": 3576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "83008:13:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														],
														"id": 3573,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "82990:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "82990:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3578,
												"nodeType": "ExpressionStatement",
												"src": "82990:32:0"
											}
										]
									},
									"id": 3580,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 3562,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "82905:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 3563,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "82916:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 3564,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3561,
												"name": "ERC20",
												"nameLocations": [
													"82899:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 916,
												"src": "82899:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "82899:23:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 3566,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "82940:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "82944:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "82940:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3568,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3565,
												"name": "Ownable",
												"nameLocations": [
													"82932:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 174,
												"src": "82932:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "82932:19:0"
										},
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 3570,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "82973:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												}
											],
											"id": 3571,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3569,
												"name": "ERC20Permit",
												"nameLocations": [
													"82961:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3552,
												"src": "82961:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "82961:22:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "82886:3:0"
									},
									"returnParameters": {
										"id": 3572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "82989:0:0"
									},
									"scope": 3596,
									"src": "82875:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3594,
										"nodeType": "Block",
										"src": "83091:36:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3590,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3582,
															"src": "83108:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3591,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3584,
															"src": "83112:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3589,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "83102:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "83102:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3593,
												"nodeType": "ExpressionStatement",
												"src": "83102:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 3595,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3587,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3586,
												"name": "onlyOwner",
												"nameLocations": [
													"83081:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "83081:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "83081:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "83041:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3582,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "83054:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3595,
												"src": "83046:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "83046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3584,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "83066:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3595,
												"src": "83058:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "83058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "83045:28:0"
									},
									"returnParameters": {
										"id": 3588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "83091:0:0"
									},
									"scope": 3596,
									"src": "83032:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3597,
							"src": "82820:310:0",
							"usedErrors": [
								40,
								45,
								185,
								190,
								195,
								204,
								209,
								214,
								961,
								966,
								971,
								2920,
								2922,
								3351,
								3429,
								3436
							],
							"usedEvents": [
								51,
								321,
								330,
								1302
							]
						}
					],
					"src": "217:82913:0"
				},
				"id": 0
			}
		}
	}
}