{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "detectTransferFromRestriction",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "detectTransferRestriction",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSuccessCode",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "restrictionCode",
						"type": "uint8"
					}
				],
				"name": "messageForTransferRestriction",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Combines IERC1404 and IERC1404getSuccessCode interfaces, to be implemented by the TransferRestrictions contract",
			"kind": "dev",
			"methods": {
				"detectTransferFromRestriction(address,address,address,uint256)": {
					"details": "Overwrite with your custom transfer restriction logic",
					"params": {
						"from": "Source of funds address",
						"sender": "Transaction sending address",
						"to": "Receiving address",
						"value": "Amount of tokens being transferred"
					},
					"returns": {
						"_0": "Code by which to reference message for rejection reasoning"
					}
				},
				"detectTransferRestriction(address,address,uint256)": {
					"details": "Overwrite with your custom transfer restriction logic",
					"params": {
						"from": "Sending address",
						"to": "Receiving address",
						"value": "Amount of tokens being transferred"
					},
					"returns": {
						"_0": "Code by which to reference message for rejection reasoning"
					}
				},
				"getSuccessCode()": {
					"returns": {
						"_0": "uint256 SUCCESS_CODE"
					}
				},
				"messageForTransferRestriction(uint8)": {
					"details": "Overwrite with your custom message and restrictionCode handling",
					"params": {
						"restrictionCode": "Identifier for looking up a message"
					},
					"returns": {
						"_0": "Text showing the restriction's reasoning"
					}
				}
			},
			"title": "IERC1404Success",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"detectTransferFromRestriction(address,address,address,uint256)": {
					"notice": "Detects if a transferFrom will be reverted and if so returns an appropriate reference code"
				},
				"detectTransferRestriction(address,address,uint256)": {
					"notice": "Detects if a transfer will be reverted and if so returns an appropriate reference code"
				},
				"getSuccessCode()": {
					"notice": "Return the uint256 that represents the SUCCESS_CODE"
				},
				"messageForTransferRestriction(uint8)": {
					"notice": "Returns a human-readable message for a given restriction code"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/ERC1404/Restriction/restriction_flatten.sol": "IERC1404Success"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/ERC1404/Restriction/restriction_flatten.sol": {
			"keccak256": "0x1336368ee07ac464cd3174b524b24bf2f42d7b007450d261e9538c494cc4ada0",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://b25f6f7dfce865e189f2d2e343a470eaa138656ed1ba74b5c2e085c0e8f8a2ab",
				"dweb:/ipfs/QmXfdzXdPLJzdQjAg2wacEYPC6ehEQJcRqzSuVvj1cnoQv"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a",
			"license": "MIT",
			"urls": [
				"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395",
				"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4"
			]
		}
	},
	"version": 1
}