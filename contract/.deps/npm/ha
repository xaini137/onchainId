/**
 * Minified by jsDelivr using UglifyJS v3.1.10.
 * Original file: /npm/ha@0.0.17/ha.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
#!/usr/bin/env node
function isActive(){return state===ACTIVE}function isStandby(){return state===STANDBY}function isShutdown(){return state===SHUTDOWN}function main(){change_state(STANDBY);var e=findAddress(ETHERNET_DEVICE,IP_VERSION);e||(console.error("IP address not found"),process.exit(1));var t=new Buffer("https://github.com/chrisdew/ha"),n=dgram.createSocket("udp4");n.bind(MULTICAST_PORT,MULTICAST_ADDRESS,function(){n.setMulticastTTL(64),n.setMulticastLoopback(!1),n.addMembership(MULTICAST_ADDRESS),n.on("message",function(t,n){n.address<e&&change_state(STANDBY)}),setInterval(function(){n.send(t,0,t.length,MULTICAST_PORT,MULTICAST_ADDRESS)},MULTICAST_INTERVAL)});var o=["SIGINT","SIGTERM","SIGHUP"];for(var s in o)!function(e){process.on(e,function(){var t=TOLERANCE/2;console.log("Shutting down due to",e,", in",t+"ms..."),change_state(SHUTDOWN),setTimeout(function(){console.log("Exiting now, press ENTER for command prompt."),process.exit(0)},t)})}(o[s])}function shutdown(){var e=TOLERANCE/2;console.log("Shutting down due to application request..."),change_state(SHUTDOWN),setTimeout(function(){console.log("Exiting now, press ENTER for command prompt."),process.exit(0)},e)}function change_state(e){e!==state&&console.info("switching from",state,"to",e),state!==SHUTDOWN?(e===STANDBY&&(timeout&&clearTimeout(timeout),timeout=setTimeout(function(){change_state(ACTIVE)},TOLERANCE)),state!==ACTIVE||e!==STANDBY&&e!==SHUTDOWN||spawn2("ifdown",[SHARED_ETHERNET_DEVICE]),state===STANDBY&&e===ACTIVE&&(console.log("zzzz",findAddress(SHARED_ETHERNET_DEVICE,IP_VERSION)),spawn2("ifup",[SHARED_ETHERNET_DEVICE],function(e){e&&console.warn("ifup",SHARED_ETHERNET_DEVICE,"failed. err:",e)})),e!==state&&exports.emit(e.toLowerCase()),state=e):console.error("shutdown cannot be aborted")}function spawn2(e,t,n){console.info("spawning",e,t,n?"with callback":"no callback");var o=(new Date).getTime(),s=spawn(e,t),i=setTimeout(function(){console.warn("child process has not exited: ",e,t),process.exit(2)},CHILD_TIMEOUT);s.stdout.setEncoding("utf8"),s.stdout.on("data",function(e){console.log("stdout:",e)}),s.stderr.setEncoding("utf8"),s.stderr.on("data",function(e){console.log("stderr:",e)}),s.on("exit",function(e){if(console.log("exit code:",e,"elapsed time (ms):",(new Date).getTime()-o),clearTimeout(i),n)return n(e||void 0)})}function findAddress(e,t){var n=os.networkInterfaces()[e],o=void 0;for(var s in n)if(n[s].family===t){o=""+n[s].address;break}return o}var STANDBY="STANDBY",ACTIVE="ACTIVE",SHUTDOWN="SHUTDOWN",MULTICAST_INTERVAL=1e3,TOLERANCE=3500,CHILD_TIMEOUT=1e4,ARP_INTERVAL=6e4,ETHERNET_DEVICE="bond0",SHARED_ETHERNET_DEVICE="bond0:1",IP_VERSION="IPv4",MULTICAST_ADDRESS="239.2.3.4",MULTICAST_PORT=5555,spawn=require("child_process").spawn,dgram=require("dgram"),os=require("os"),fs=require("fs"),events=require("events");module.exports=exports=new events.EventEmitter,exports.main=main,exports.isActive=isActive,exports.isStandby=isStandby,exports.isShutdown=isShutdown,exports.shutdown=shutdown,exports.findAddress=findAddress;try{var content=fs.readFileSync("/etc/ha.json","utf8"),c=JSON.parse(content);c.ethernetDevice&&(ETHERNET_DEVICE=c.ethernetDevice),c.sharedEthernetDevice&&(SHARED_ETHERNET_DEVICE=c.sharedEthernetDevice),console.info("read config from /etc/ha.json")}catch(e){console.warn("unable to read /etc/ha.json")}module.parent||main();var state,timeout;setInterval(function(){if(isActive()){var e=findAddress(SHARED_ETHERNET_DEVICE,IP_VERSION);e?(console.info("arping",["-A","-I",ETHERNET_DEVICE,e,"-w",1]),spawn2("arping",["-A","-I",ETHERNET_DEVICE,e,"-w",1]),console.info("arping",["-U","-I",ETHERNET_DEVICE,e,"-w",1]),spawn2("arping",["-U","-I",ETHERNET_DEVICE,e,"-w",1])):console.warn("shared address not found")}},ARP_INTERVAL);
//# sourceMappingURL=/sm/1c67938876b6f0699420aab8c5ed44ec5eaa4f3e71c0174551436a79940e295d.map