{"abi":[{"type":"function","name":"detectTransferFromRestriction","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"detectTransferRestriction","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"messageForTransferRestriction","inputs":[{"name":"restrictionCode","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"detectTransferFromRestriction(address,address,address,uint256)":"0754cede","detectTransferRestriction(address,address,uint256)":"d4ce1415","messageForTransferRestriction(uint8)":"7f4ab1dd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"detectTransferFromRestriction\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"detectTransferRestriction\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"restrictionCode\",\"type\":\"uint8\"}],\"name\":\"messageForTransferRestriction\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"detectTransferFromRestriction(address,address,address,uint256)\":{\"details\":\"Overwrite with your custom transfer restriction logic\",\"params\":{\"from\":\"Source of funds address\",\"sender\":\"Transaction sending address\",\"to\":\"Receiving address\",\"value\":\"Amount of tokens being transferred\"},\"returns\":{\"_0\":\"Code by which to reference message for rejection reasoning\"}},\"detectTransferRestriction(address,address,uint256)\":{\"details\":\"Overwrite with your custom transfer restriction logic\",\"params\":{\"from\":\"Sending address\",\"to\":\"Receiving address\",\"value\":\"Amount of tokens being transferred\"},\"returns\":{\"_0\":\"Code by which to reference message for rejection reasoning\"}},\"messageForTransferRestriction(uint8)\":{\"details\":\"Overwrite with your custom message and restrictionCode handling\",\"params\":{\"restrictionCode\":\"Identifier for looking up a message\"},\"returns\":{\"_0\":\"Text showing the restriction's reasoning\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"detectTransferFromRestriction(address,address,address,uint256)\":{\"notice\":\"Detects if a transferFrom will be reverted and if so returns an appropriate reference code\"},\"detectTransferRestriction(address,address,uint256)\":{\"notice\":\"Detects if a transfer will be reverted and if so returns an appropriate reference code\"},\"messageForTransferRestriction(uint8)\":{\"notice\":\"Returns a human-readable message for a given restriction code\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC1404/Restriction/restriction_flatten.sol\":\"IERC1404\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/ERC1404/Restriction/restriction_flatten.sol\":{\"keccak256\":\"0x734f8cd579eea068d2f46218e8b6657a84092f4571dab91bbf787513bb7ee94c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://89d47bc7ebe93eb236fea0a9a0df2435c910235c0fc3ddc23f55aafce3751bdb\",\"dweb:/ipfs/Qmd9kAPknXxHikpMXpbBc7ar9f9HpXcgVpQwm2C3qHQsnG\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"view","type":"function","name":"detectTransferFromRestriction","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"view","type":"function","name":"detectTransferRestriction","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"uint8","name":"restrictionCode","type":"uint8"}],"stateMutability":"view","type":"function","name":"messageForTransferRestriction","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"detectTransferFromRestriction(address,address,address,uint256)":{"details":"Overwrite with your custom transfer restriction logic","params":{"from":"Source of funds address","sender":"Transaction sending address","to":"Receiving address","value":"Amount of tokens being transferred"},"returns":{"_0":"Code by which to reference message for rejection reasoning"}},"detectTransferRestriction(address,address,uint256)":{"details":"Overwrite with your custom transfer restriction logic","params":{"from":"Sending address","to":"Receiving address","value":"Amount of tokens being transferred"},"returns":{"_0":"Code by which to reference message for rejection reasoning"}},"messageForTransferRestriction(uint8)":{"details":"Overwrite with your custom message and restrictionCode handling","params":{"restrictionCode":"Identifier for looking up a message"},"returns":{"_0":"Text showing the restriction's reasoning"}}},"version":1},"userdoc":{"kind":"user","methods":{"detectTransferFromRestriction(address,address,address,uint256)":{"notice":"Detects if a transferFrom will be reverted and if so returns an appropriate reference code"},"detectTransferRestriction(address,address,uint256)":{"notice":"Detects if a transfer will be reverted and if so returns an appropriate reference code"},"messageForTransferRestriction(uint8)":{"notice":"Returns a human-readable message for a given restriction code"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/ERC1404/Restriction/restriction_flatten.sol":"IERC1404"},"evmVersion":"paris","libraries":{}},"sources":{"src/ERC1404/Restriction/restriction_flatten.sol":{"keccak256":"0x734f8cd579eea068d2f46218e8b6657a84092f4571dab91bbf787513bb7ee94c","urls":["bzz-raw://89d47bc7ebe93eb236fea0a9a0df2435c910235c0fc3ddc23f55aafce3751bdb","dweb:/ipfs/Qmd9kAPknXxHikpMXpbBc7ar9f9HpXcgVpQwm2C3qHQsnG"],"license":"UNLICENSED"}},"version":1},"id":39}